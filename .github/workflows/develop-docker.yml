name: API Docker Image

on:
  push:
    branches: [develop]

jobs:

  APIDockerImage:
    name: API Container Image
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Docker Compose; Test API
        run: docker-compose up -d
      
      - name: Run Tests
        run: ./test_and_report.sh
        
      - name: Configure AWS credentials
        if: ${{ always() }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.RSGISCI_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.RSGISCI_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.RSGISCI_AWS_DEFAULT_REGION }}

      - name: Upload Test Results
        if: ${{ always() }}
        run: |
          aws s3 rm s3://corpsmap-appz/api_test_results/instrumentation.html
          aws s3 cp ./tests/instrumentation.html s3://corpsmap-appz/api_test_results/instrumentation.html
    
      - name: Login to Amazon ECR
        if: ${{ success() }}
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR (midas-api)
        if: ${{ success() }}
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: midas-api
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Logout of Amazon ECR
        if: ${{ always() }}
        run: docker logout ${{ steps.login-ecr.outputs.registry }}