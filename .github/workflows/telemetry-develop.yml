name: Telemetry Image Develop

on:
  push:
    branches: [develop]
    paths:
      - "telemetry/**"
      - "api/**"
      - ".github/workflows/telemetry-develop.yml"
  workflow_dispatch:
jobs:
  TelemetryDockerImage:
    name: Telemetry Image Develop
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
      DOCKER_BUILDKIT: 1

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Go needed to pull peer dependencies with go mod vendor
      - uses: actions/setup-go@v4
        with:
          go-version-file: "telemetry/go.mod"
          cache-dependency-path: telemetry/go.sum

      - name: Run Tests
        env:
          REPORT: true
        run: ./compose.sh test

      - name: Configure AWS credentials
        if: ${{ always() }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.CWBICI_DEVELOP_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.CWBICI_DEVELOP_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.CWBICI_DEVELOP_AWS_REGION }}

      - name: Upload Test Results
        if: ${{ always() }}
        run: |
          aws s3 rm s3://corpsmap-appz/api_test_results/midas-telemetry-develop.html
          aws s3 cp ./tests/postman/instrumentation.html s3://corpsmap-appz/api_test_results/midas-telemetry-develop.html

      - name: Login to Amazon ECR
        if: ${{ success() }}
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR (midas-telemetry)
        if: ${{ success() }}
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: midas-telemetry
        run: |
          (cd telemetry; go mod vendor)
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:develop telemetry
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:develop

      - name: Logout of Amazon ECR
        if: ${{ always() }}
        run: docker logout ${{ steps.login-ecr.outputs.registry }}
