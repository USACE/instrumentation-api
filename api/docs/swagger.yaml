definitions:
  echo.HTTPError:
    properties:
      message: {}
    type: object
  geojson.Geometry:
    properties:
      coordinates: {}
      geometries:
        items:
          $ref: '#/definitions/geojson.Geometry'
        type: array
      type:
        type: string
    type: object
  Alert:
    properties:
      alert_config_id:
        type: string
      body:
        type: string
      create_date:
        type: string
      id:
        type: string
      instruments:
        items:
          $ref: '#/definitions/AlertConfigInstrument'
        type: array
      name:
        type: string
      project_id:
        type: string
      project_name:
        type: string
      read:
        type: boolean
    type: object
  AlertConfig:
    properties:
      alert_email_subscriptions:
        items:
          $ref: '#/definitions/EmailAutocompleteResult'
        type: array
      alert_type:
        type: string
      alert_type_id:
        type: string
      body:
        type: string
      create_date:
        type: string
      creator_id:
        type: string
      creator_username:
        type: string
      id:
        type: string
      instruments:
        items:
          $ref: '#/definitions/AlertConfigInstrument'
        type: array
      last_checked:
        type: string
      last_reminded:
        type: string
      mute_consecutive_alerts:
        type: boolean
      name:
        type: string
      project_id:
        type: string
      project_name:
        type: string
      remind_interval:
        type: string
      schedule_interval:
        type: string
      start_date:
        type: string
      update_date:
        type: string
      updater_id:
        type: string
      updater_username:
        type: string
      warning_interval:
        type: string
    type: object
  AlertConfigInstrument:
    properties:
      instrument_id:
        type: string
      instrument_name:
        type: string
    type: object
  AlertSubscription:
    properties:
      alert_config_id:
        type: string
      id:
        type: string
      mute_notify:
        type: boolean
      mute_ui:
        type: boolean
      profile_id:
        type: string
    type: object
  AwareParameter:
    properties:
      id:
        type: string
      key:
        type: string
      parameter_id:
        type: string
      unit_id:
        type: string
    type: object
  AwarePlatformParameterConfig:
    properties:
      aware_id:
        type: string
      aware_parameters:
        additionalProperties:
          type: string
        type: object
      instrument_id:
        type: string
    type: object
  CalculatedTimeseries:
    properties:
      formula:
        type: string
      formula_name:
        type: string
      id:
        type: string
      instrument_id:
        type: string
      parameter_id:
        type: string
      slug:
        type: string
      unit_id:
        type: string
    type: object
  CollectionGroup:
    properties:
      create_date:
        type: string
      creator_id:
        type: string
      creator_username:
        type: string
      id:
        type: string
      name:
        type: string
      project_id:
        type: string
      slug:
        type: string
      update_date:
        type: string
      updater_id:
        type: string
      updater_username:
        type: string
    type: object
  CollectionGroupDetails:
    properties:
      create_date:
        type: string
      creator_id:
        type: string
      creator_username:
        type: string
      id:
        type: string
      name:
        type: string
      project_id:
        type: string
      slug:
        type: string
      timeseries:
        items:
          $ref: '#/definitions/collectionGroupDetailsTimeseries'
        type: array
      update_date:
        type: string
      updater_id:
        type: string
      updater_username:
        type: string
    type: object
  Datalogger:
    properties:
      create_date:
        type: string
      creator_id:
        type: string
      creator_username:
        type: string
      errors:
        items:
          type: string
        type: array
      id:
        type: string
      model:
        type: string
      model_id:
        type: string
      name:
        type: string
      project_id:
        type: string
      slug:
        type: string
      sn:
        type: string
      tables:
        items:
          $ref: '#/definitions/DataloggerTable'
        type: array
      update_date:
        type: string
      updater_id:
        type: string
      updater_username:
        type: string
    type: object
  DataloggerTable:
    properties:
      id:
        type: string
      table_name:
        type: string
    type: object
  DataloggerTablePreview:
    properties:
      datalogger_table_id:
        type: string
      preview:
        $ref: '#/definitions/pgtype.JSON'
      update_date:
        type: string
    type: object
  DataloggerWithKey:
    properties:
      create_date:
        type: string
      creator_id:
        type: string
      creator_username:
        type: string
      errors:
        items:
          type: string
        type: array
      id:
        type: string
      key:
        type: string
      model:
        type: string
      model_id:
        type: string
      name:
        type: string
      project_id:
        type: string
      slug:
        type: string
      sn:
        type: string
      tables:
        items:
          $ref: '#/definitions/DataloggerTable'
        type: array
      update_date:
        type: string
      updater_id:
        type: string
      updater_username:
        type: string
    type: object
  District:
    properties:
      agency:
        type: string
      division_initials:
        type: string
      division_name:
        type: string
      id:
        type: string
      initials:
        type: string
      name:
        type: string
      office_id:
        type: string
    type: object
  DistrictRollup:
    properties:
      actual_total_submittals:
        type: integer
      alert_type_id:
        type: string
      district_initials:
        type: string
      expected_total_submittals:
        type: integer
      green_submittals:
        type: integer
      month:
        type: string
      office_id:
        type: string
      project_id:
        type: string
      project_name:
        type: string
      red_submittals:
        type: integer
      yellow_submittals:
        type: integer
    type: object
  Domain:
    properties:
      description:
        type: string
      group:
        type: string
      id:
        type: string
      value:
        type: string
    type: object
  DomainGroupOption:
    properties:
      description:
        type: string
      id:
        type: string
      value:
        type: string
    type: object
  DomainMap:
    additionalProperties:
      items:
        $ref: '#/definitions/DomainGroupOption'
      type: array
    type: object
  EmailAutocompleteResult:
    properties:
      email:
        type: string
      id:
        type: string
      user_type:
        type: string
      username:
        type: string
    type: object
  EquivalencyTable:
    properties:
      datalogger_id:
        type: string
      datalogger_table_id:
        type: string
      datalogger_table_name:
        type: string
      rows:
        items:
          $ref: '#/definitions/EquivalencyTableRow'
        type: array
    type: object
  EquivalencyTableRow:
    properties:
      display_name:
        type: string
      field_name:
        type: string
      id:
        type: string
      instrument_id:
        type: string
      timeseries_id:
        type: string
    type: object
  Evaluation:
    properties:
      alert_config_id:
        type: string
      alert_config_name:
        type: string
      body:
        type: string
      create_date:
        type: string
      creator_id:
        type: string
      creator_username:
        type: string
      end_date:
        type: string
      id:
        type: string
      instruments:
        items:
          $ref: '#/definitions/EvaluationInstrument'
        type: array
      name:
        type: string
      project_id:
        type: string
      project_name:
        type: string
      start_date:
        type: string
      submittal_id:
        type: string
      update_date:
        type: string
      updater_id:
        type: string
      updater_username:
        type: string
    type: object
  EvaluationInstrument:
    properties:
      instrument_id:
        type: string
      instrument_name:
        type: string
    type: object
  Geometry:
    properties:
      coordinates: {}
      geometries:
        items:
          $ref: '#/definitions/geojson.Geometry'
        type: array
      type:
        type: string
    type: object
  Heartbeat:
    properties:
      time:
        type: string
    type: object
  Home:
    properties:
      instrument_count:
        type: integer
      instrument_group_count:
        type: integer
      new_instruments_7d:
        type: integer
      new_measurements_2h:
        type: integer
      project_count:
        type: integer
    type: object
  IDSlugName:
    properties:
      id:
        type: string
      name:
        type: string
      slug:
        type: string
    type: object
  InclinometerMeasurement:
    properties:
      create_date:
        type: string
      creator:
        type: string
      time:
        type: string
      values:
        items:
          type: integer
        type: array
    type: object
  InclinometerMeasurementCollection:
    properties:
      inclinometers:
        items:
          $ref: '#/definitions/InclinometerMeasurement'
        type: array
      timeseries_id:
        type: string
    type: object
  InclinometerMeasurementCollectionCollection:
    properties:
      items:
        items:
          $ref: '#/definitions/InclinometerMeasurementCollection'
        type: array
    type: object
  InclinometerMeasurementCollectionLean:
    properties:
      items:
        items:
          $ref: '#/definitions/InclinometerMeasurementLean'
        type: array
      timeseries_id:
        type: string
    type: object
  InclinometerMeasurementLean:
    additionalProperties:
      items:
        type: integer
      type: array
    type: object
  Instrument:
    properties:
      alert_configs:
        items:
          type: string
        type: array
      aware_id:
        type: string
      constants:
        items:
          type: string
        type: array
      create_date:
        type: string
      creator_id:
        type: string
      creator_username:
        type: string
      geometry:
        $ref: '#/definitions/Geometry'
      groups:
        items:
          type: string
        type: array
      icon:
        type: string
      id:
        type: string
      name:
        type: string
      nid_id:
        type: string
      offset:
        type: integer
      opts:
        $ref: '#/definitions/Opts'
      projects:
        items:
          $ref: '#/definitions/IDSlugName'
        type: array
      slug:
        type: string
      station:
        type: integer
      status:
        type: string
      status_id:
        type: string
      status_time:
        type: string
      type:
        type: string
      type_id:
        type: string
      update_date:
        type: string
      updater_id:
        type: string
      updater_username:
        type: string
      usgs_id:
        type: string
    type: object
  InstrumentCount:
    properties:
      instrument_count:
        type: integer
    type: object
  InstrumentGroup:
    properties:
      create_date:
        type: string
      creator_id:
        type: string
      creator_username:
        type: string
      description:
        type: string
      id:
        type: string
      instrument_count:
        type: integer
      name:
        type: string
      project_id:
        type: string
      slug:
        type: string
      timeseries_count:
        type: integer
      update_date:
        type: string
      updater_id:
        type: string
      updater_username:
        type: string
    type: object
  InstrumentNote:
    properties:
      body:
        type: string
      create_date:
        type: string
      creator_id:
        type: string
      creator_username:
        type: string
      id:
        type: string
      instrument_id:
        type: string
      time:
        type: string
      title:
        type: string
      update_date:
        type: string
      updater_id:
        type: string
      updater_username:
        type: string
    type: object
  InstrumentNoteCollection:
    properties:
      items:
        items:
          $ref: '#/definitions/InstrumentNote'
        type: array
    type: object
  InstrumentStatus:
    properties:
      id:
        type: string
      status:
        type: string
      status_id:
        type: string
      time:
        type: string
    type: object
  InstrumentStatusCollection:
    properties:
      items:
        items:
          $ref: '#/definitions/InstrumentStatus'
        type: array
    type: object
  IpiMeasurements:
    properties:
      measurements:
        items:
          $ref: '#/definitions/IpiSegmentMeasurement'
        type: array
      time:
        type: string
    type: object
  IpiSegment:
    properties:
      id:
        type: integer
      inc_dev_timeseries_id:
        type: string
      instrument_id:
        type: string
      length:
        type: number
      length_timeseries_id:
        type: string
      temp_timeseries_id:
        type: string
      tilt_timeseries_id:
        type: string
    type: object
  IpiSegmentMeasurement:
    properties:
      cum_dev:
        type: number
      elevation:
        type: number
      inc_dev:
        type: number
      segment_id:
        type: integer
      temp:
        type: number
      tilt:
        type: number
    type: object
  Measurement:
    properties:
      annotation:
        type: string
      error:
        type: string
      masked:
        type: boolean
      time:
        type: string
      validated:
        type: boolean
      value:
        type: number
    type: object
  MeasurementCollection:
    properties:
      items:
        items:
          $ref: '#/definitions/Measurement'
        type: array
      timeseries_id:
        type: string
    type: object
  MeasurementCollectionLean:
    properties:
      items:
        items:
          $ref: '#/definitions/MeasurementLean'
        type: array
      timeseries_id:
        type: string
    type: object
  MeasurementLean:
    additionalProperties:
      type: number
    type: object
  Opts:
    additionalProperties: true
    type: object
  PlotConfig:
    properties:
      auto_range:
        type: boolean
      create_date:
        type: string
      creator_id:
        type: string
      creator_username:
        type: string
      date_range:
        type: string
      display:
        $ref: '#/definitions/PlotConfigDisplay'
      id:
        type: string
      name:
        type: string
      project_id:
        type: string
      report_configs:
        items:
          $ref: '#/definitions/IDSlugName'
        type: array
      show_comments:
        type: boolean
      show_masked:
        type: boolean
      show_nonvalidated:
        type: boolean
      slug:
        type: string
      threshold:
        type: integer
      update_date:
        type: string
      updater_id:
        type: string
      updater_username:
        type: string
    type: object
  PlotConfigCustomShape:
    properties:
      color:
        type: string
      data_point:
        type: number
      enabled:
        type: boolean
      name:
        type: string
      plot_configuration_id:
        type: string
    type: object
  PlotConfigDisplay:
    properties:
      layout:
        $ref: '#/definitions/PlotConfigLayout'
      traces:
        items:
          $ref: '#/definitions/PlotConfigTimeseriesTrace'
        type: array
    type: object
  PlotConfigLayout:
    properties:
      custom_shapes:
        items:
          $ref: '#/definitions/PlotConfigCustomShape'
        type: array
      secondary_axis_title:
        type: string
    type: object
  PlotConfigTimeseriesTrace:
    properties:
      color:
        type: string
      line_style:
        type: string
      name:
        description: read-only
        type: string
      plot_configuration_id:
        type: string
      show_markers:
        type: boolean
      timeseries_id:
        type: string
      trace_order:
        type: integer
      trace_type:
        type: string
      width:
        type: number
      y_axis:
        description: y1 or y2, default y1
        type: string
    type: object
  Profile:
    properties:
      email:
        type: string
      id:
        type: string
      is_admin:
        type: boolean
      roles:
        items:
          type: string
        type: array
      tokens:
        items:
          $ref: '#/definitions/TokenInfoProfile'
        type: array
      username:
        type: string
    type: object
  Project:
    properties:
      create_date:
        type: string
      creator_id:
        type: string
      creator_username:
        type: string
      district_id:
        type: string
      federal_id:
        type: string
      id:
        type: string
      image:
        type: string
      instrument_count:
        type: integer
      instrument_group_count:
        type: integer
      name:
        type: string
      office_id:
        type: string
      slug:
        type: string
      update_date:
        type: string
      updater_id:
        type: string
      updater_username:
        type: string
    type: object
  ProjectCount:
    properties:
      project_count:
        type: integer
    type: object
  ProjectMembership:
    properties:
      email:
        type: string
      id:
        type: string
      profile_id:
        type: string
      role:
        type: string
      role_id:
        type: string
      username:
        type: string
    type: object
  ReportConfig:
    properties:
      create_date:
        type: string
      creator_id:
        type: string
      creator_username:
        type: string
      description:
        type: string
      global_overrides:
        $ref: '#/definitions/ReportConfigGlobalOverrides'
      id:
        type: string
      name:
        type: string
      plot_configs:
        items:
          $ref: '#/definitions/IDSlugName'
        type: array
      project_id:
        type: string
      project_name:
        type: string
      slug:
        type: string
      update_date:
        type: string
      updater_id:
        type: string
      updater_username:
        type: string
    type: object
  ReportConfigGlobalOverrides:
    properties:
      date_range:
        $ref: '#/definitions/TextOption'
      show_masked:
        $ref: '#/definitions/ToggleOption'
      show_nonvalidated:
        $ref: '#/definitions/ToggleOption'
    type: object
  ReportConfigWithPlotConfigs:
    properties:
      create_date:
        type: string
      creator_id:
        type: string
      creator_username:
        type: string
      description:
        type: string
      global_overrides:
        $ref: '#/definitions/ReportConfigGlobalOverrides'
      id:
        type: string
      name:
        type: string
      plot_configs:
        items:
          $ref: '#/definitions/PlotConfig'
        type: array
      project_id:
        type: string
      project_name:
        type: string
      slug:
        type: string
      update_date:
        type: string
      updater_id:
        type: string
      updater_username:
        type: string
    type: object
  ReportDownloadJob:
    properties:
      create_date:
        type: string
      creator:
        type: string
      file_expiry:
        type: string
      file_key:
        type: string
      id:
        type: string
      progress:
        type: integer
      progress_update_date:
        type: string
      report_config_id:
        type: string
      status:
        type: string
    type: object
  SaaMeasurements:
    properties:
      measurements:
        items:
          $ref: '#/definitions/SaaSegmentMeasurement'
        type: array
      time:
        type: string
    type: object
  SaaSegment:
    properties:
      id:
        type: integer
      instrument_id:
        type: string
      length:
        type: number
      length_timeseries_id:
        type: string
      temp_timeseries_id:
        type: string
      x_timeseries_id:
        type: string
      y_timeseries_id:
        type: string
      z_timeseries_id:
        type: string
    type: object
  SaaSegmentMeasurement:
    properties:
      elevation:
        type: number
      segment_id:
        type: integer
      temp:
        type: number
      temp_cum_dev:
        type: number
      temp_increment:
        type: number
      x:
        type: number
      x_cum_dev:
        type: number
      x_increment:
        type: number
      "y":
        type: number
      y_cum_dev:
        type: number
      y_increment:
        type: number
      z:
        type: number
      z_cum_dev:
        type: number
      z_increment:
        type: number
    type: object
  SearchResult:
    properties:
      id:
        type: string
      item: {}
      type:
        type: string
    type: object
  Site:
    properties:
      description:
        type: string
      elevation:
        type: string
      elevationUnits:
        type: string
      siteName:
        $ref: '#/definitions/SiteName'
    type: object
  SiteName:
    properties:
      id:
        type: string
      nameType:
        type: string
    type: object
  Submittal:
    properties:
      alert_config_id:
        type: string
      alert_config_name:
        type: string
      alert_type_id:
        type: string
      alert_type_name:
        type: string
      completion_date:
        type: string
      create_date:
        type: string
      due_date:
        type: string
      id:
        type: string
      marked_as_missing:
        type: boolean
      project_id:
        type: string
      submittal_status_id:
        type: string
      submittal_status_name:
        type: string
      warning_sent:
        type: boolean
    type: object
  TextOption:
    properties:
      enabled:
        type: boolean
      value:
        type: string
    type: object
  Timeseries:
    properties:
      id:
        type: string
      instrument:
        type: string
      instrument_id:
        type: string
      instrument_slug:
        type: string
      is_computed:
        type: boolean
      name:
        type: string
      parameter:
        type: string
      parameter_id:
        type: string
      slug:
        type: string
      unit:
        type: string
      unit_id:
        type: string
      values:
        items:
          $ref: '#/definitions/Measurement'
        type: array
      variable:
        type: string
    type: object
  TimeseriesCollectionItems:
    properties:
      items:
        items:
          $ref: '#/definitions/Timeseries'
        type: array
    type: object
  TimeseriesMeasurementCollectionCollection:
    properties:
      items:
        items:
          $ref: '#/definitions/MeasurementCollection'
        type: array
    type: object
  ToggleOption:
    properties:
      enabled:
        type: boolean
      value:
        type: boolean
    type: object
  Token:
    properties:
      issued:
        type: string
      profile_id:
        type: string
      secret_token:
        type: string
      token_id:
        type: string
    type: object
  TokenInfoProfile:
    properties:
      issued:
        type: string
      token_id:
        type: string
    type: object
  Unit:
    properties:
      abbreviation:
        type: string
      id:
        type: string
      measure:
        type: string
      measure_id:
        type: string
      name:
        type: string
      unit_family:
        type: string
      unit_family_id:
        type: string
    type: object
  collectionGroupDetailsTimeseries:
    properties:
      id:
        type: string
      instrument:
        type: string
      instrument_id:
        type: string
      instrument_slug:
        type: string
      is_computed:
        type: boolean
      latest_time:
        type: string
      latest_value:
        type: number
      name:
        type: string
      parameter:
        type: string
      parameter_id:
        type: string
      slug:
        type: string
      unit:
        type: string
      unit_id:
        type: string
      values:
        items:
          $ref: '#/definitions/Measurement'
        type: array
      variable:
        type: string
    type: object
  pgtype.JSON:
    properties:
      bytes:
        items:
          type: integer
        type: array
      status:
        $ref: '#/definitions/pgtype.Status'
    type: object
  pgtype.Status:
    enum:
    - 0
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - Undefined
    - "Null"
    - Present
info:
  contact: {}
  description: Monitoring Instrumentation Data Acquisition Systems (MIDAS) Web API
  license:
    name: MIT
    url: https://github.com/USACE/instrumentation-api/blob/555ea51191ff1245fe5910a295862be7514aaec6/LICENSE.md
  title: MIDAS Web API
  version: "2.0"
paths:
  /alert_configs/{alert_config_id}/submittals:
    get:
      parameters:
      - description: alert config uuid
        format: uuid
        in: path
        name: alert_config_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Submittal'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: lists all submittals for an instrument
      tags:
      - submittal
  /alert_configs/{alert_config_id}/submittals/verify_missing:
    put:
      parameters:
      - description: alert config uuid
        format: uuid
        in: path
        name: alert_config_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: verifies all current submittals for the alert config are "missing"
        and will not be completed
      tags:
      - submittal
  /alert_subscriptions/{alert_subscription_id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: alert subscription id
        format: uuid
        in: path
        name: alert_subscription_id
        required: true
        type: string
      - description: alert subscription payload
        in: body
        name: alert_subscription
        required: true
        schema:
          $ref: '#/definitions/AlertSubscription'
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/AlertSubscription'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: updates settings for an alert subscription
      tags:
      - alert-subscription
  /aware/data_acquisition_config:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/AwarePlatformParameterConfig'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: lists alert configs for a project
      tags:
      - aware
  /aware/parameters:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/AwareParameter'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: lists alert configs for a project
      tags:
      - aware
  /datalogger:
    post:
      consumes:
      - application/json
      parameters:
      - description: datalogger payload
        in: body
        name: datalogger
        required: true
        schema:
          $ref: '#/definitions/Datalogger'
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/DataloggerWithKey'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: creates a datalogger
      tags:
      - datalogger
  /datalogger/{datalogger_id}:
    delete:
      parameters:
      - description: datalogger uuid
        format: uuid
        in: path
        name: datalogger_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: deletes a datalogger by id
      tags:
      - datalogger
    get:
      parameters:
      - description: datalogger uuid
        format: uuid
        in: path
        name: datalogger_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Datalogger'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: gets a datalogger by id
      tags:
      - datalogger
    put:
      parameters:
      - description: datalogger uuid
        format: uuid
        in: path
        name: datalogger_id
        required: true
        type: string
      - description: datalogger payload
        in: body
        name: datalogger
        required: true
        schema:
          $ref: '#/definitions/Datalogger'
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Datalogger'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: updates a datalogger
      tags:
      - datalogger
  /datalogger/{datalogger_id}/equivalency_table:
    post:
      parameters:
      - description: datalogger uuid
        format: uuid
        in: path
        name: datalogger_id
        required: true
        type: string
      - description: equivalency table payload
        in: body
        name: equivalency_table
        required: true
        schema:
          $ref: '#/definitions/EquivalencyTable'
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/EquivalencyTable'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: creates an equivalency table for a datalogger and auto create data
        logger table if not exists
      tags:
      - equivalency-table
  /datalogger/{datalogger_id}/key:
    put:
      parameters:
      - description: datalogger uuid
        format: uuid
        in: path
        name: datalogger_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DataloggerWithKey'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: deletes and recreates a datalogger api key
      tags:
      - datalogger
  /datalogger/{datalogger_id}/tables/{datalogger_table_id}/equivalency_table:
    delete:
      parameters:
      - description: datalogger uuid
        format: uuid
        in: path
        name: datalogger_id
        required: true
        type: string
      - description: datalogger table uuid
        format: uuid
        in: path
        name: datalogger_table_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: deletes an equivalency table and corresponding datalogger table
      tags:
      - equivalency-table
    get:
      parameters:
      - description: datalogger uuid
        format: uuid
        in: path
        name: datalogger_id
        required: true
        type: string
      - description: datalogger table uuid
        format: uuid
        in: path
        name: datalogger_table_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/EquivalencyTable'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: gets an equivalency table for a datalogger
      tags:
      - equivalency-table
    post:
      parameters:
      - description: datalogger uuid
        format: uuid
        in: path
        name: datalogger_id
        required: true
        type: string
      - description: datalogger table uuid
        format: uuid
        in: path
        name: datalogger_table_id
        required: true
        type: string
      - description: equivalency table payload
        in: body
        name: equivalency_table
        required: true
        schema:
          $ref: '#/definitions/EquivalencyTable'
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/EquivalencyTable'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: creates an equivalency table for a datalogger and auto create data
        logger table if not exists
      tags:
      - equivalency-table
    put:
      parameters:
      - description: datalogger uuid
        format: uuid
        in: path
        name: datalogger_id
        required: true
        type: string
      - description: datalogger table uuid
        format: uuid
        in: path
        name: datalogger_table_id
        required: true
        type: string
      - description: equivalency table payload
        in: body
        name: equivalency_table
        required: true
        schema:
          $ref: '#/definitions/EquivalencyTable'
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/EquivalencyTable'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: updates an equivalency table for a datalogger
      tags:
      - equivalency-table
  /datalogger/{datalogger_id}/tables/{datalogger_table_id}/equivalency_table/row/{row_id}:
    delete:
      parameters:
      - description: datalogger uuid
        format: uuid
        in: path
        name: datalogger_id
        required: true
        type: string
      - description: datalogger table uuid
        format: uuid
        in: path
        name: datalogger_table_id
        required: true
        type: string
      - description: equivalency table row uuid
        format: uuid
        in: path
        name: row_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: deletes an equivalency table row
      tags:
      - equivalency-table
  /datalogger/{datalogger_id}/tables/{datalogger_table_id}/name:
    put:
      parameters:
      - description: datalogger uuid
        format: uuid
        in: path
        name: datalogger_id
        required: true
        type: string
      - description: datalogger table uuid
        format: uuid
        in: path
        name: datalogger_table_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DataloggerTablePreview'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: resets a datalogger table name to be renamed by incoming telemetry
      tags:
      - datalogger
  /datalogger/{datalogger_id}/tables/{datalogger_table_id}/preview:
    get:
      parameters:
      - description: datalogger uuid
        format: uuid
        in: path
        name: datalogger_id
        required: true
        type: string
      - description: datalogger table uuid
        format: uuid
        in: path
        name: datalogger_table_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DataloggerTablePreview'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: gets the most recent datalogger preview by by datalogger id
      tags:
      - datalogger
  /dataloggers:
    get:
      parameters:
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Datalogger'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: lists dataloggers for a project
      tags:
      - datalogger
  /districts:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/District'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: lists all districts
      tags:
      - project
  /domains:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Domain'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: lists all domains
      tags:
      - domain
  /domains/map:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DomainMap'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Get map with domain group as key
      tags:
      - domain
  /email_autocomplete:
    get:
      parameters:
      - description: search query string
        in: query
        name: q
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/EmailAutocompleteResult'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: lists results of email autocomplete
      tags:
      - autocomplete
  /explorer:
    post:
      consumes:
      - application/json
      parameters:
      - description: array of instrument uuids
        in: body
        name: instrument_ids
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              additionalProperties:
                $ref: '#/definitions/MeasurementCollectionLean'
              type: object
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: list timeseries measurements for explorer page
      tags:
      - explorer
  /formulas:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/CalculatedTimeseries'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: lists calculations associated with an instrument
      tags:
      - formula
    post:
      parameters:
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: creates a calculation
      tags:
      - formula
  /formulas/{formula_id}:
    delete:
      parameters:
      - description: formula uuid
        format: uuid
        in: path
        name: formula_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: deletes a calculation
      tags:
      - formula
    put:
      parameters:
      - description: formula uuid
        format: uuid
        in: path
        name: formula_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/CalculatedTimeseries'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: updates a calculation
      tags:
      - formula
  /health:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
      summary: checks the health of the api server
      tags:
      - heartbeat
  /heartbeat:
    post:
      parameters:
      - description: api key
        in: query
        name: key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Heartbeat'
      summary: creates a heartbeat entry at regular intervals
      tags:
      - heartbeat
  /heartbeat/latest:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Heartbeat'
      summary: gets the latest heartbeat
      tags:
      - heartbeat
  /heartbeats:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Heartbeat'
            type: array
      summary: returns all heartbeats
      tags:
      - heartbeat
  /home:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Home'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: gets information for the homepage
      tags:
      - home
  /inclinometer_explorer:
    post:
      consumes:
      - application/json
      parameters:
      - description: array of inclinometer instrument uuids
        in: body
        name: instrument_ids
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              additionalProperties:
                $ref: '#/definitions/InclinometerMeasurementCollectionLean'
              type: object
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: list inclinometer timeseries measurements for explorer page
      tags:
      - explorer
  /instrument_groups:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/InstrumentGroup'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: lists all instrument groups
      tags:
      - instrument-group
    post:
      parameters:
      - description: instrument group payload
        in: body
        name: instrument_group
        required: true
        schema:
          $ref: '#/definitions/InstrumentGroup'
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/InstrumentGroup'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: creats an instrument group from an array of instruments
      tags:
      - instrument-group
  /instrument_groups/{instrument_group_id}:
    delete:
      parameters:
      - description: instrument group uuid
        format: uuid
        in: path
        name: instrument_group_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/InstrumentGroup'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: soft deletes an instrument
      tags:
      - instrument-group
    get:
      parameters:
      - description: instrument group uuid
        format: uuid
        in: path
        name: instrument_group_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/InstrumentGroup'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: gets a single instrument group
      tags:
      - instrument-group
    put:
      parameters:
      - description: instrument group uuid
        format: uuid
        in: path
        name: instrument_group_id
        required: true
        type: string
      - description: instrument group payload
        in: body
        name: instrument_group
        required: true
        schema:
          $ref: '#/definitions/InstrumentGroup'
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/InstrumentGroup'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: updates an existing instrument group
      tags:
      - instrument-group
  /instrument_groups/{instrument_group_id}/instruments:
    get:
      parameters:
      - description: instrument group uuid
        format: uuid
        in: path
        name: instrument_group_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Instrument'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: lists instruments in an instrument group
      tags:
      - instrument-group
    post:
      parameters:
      - description: instrument group uuid
        format: uuid
        in: path
        name: instrument_group_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: adds an instrument to an instrument group
      tags:
      - instrument-group
  /instrument_groups/{instrument_group_id}/instruments/{instrument_id}:
    delete:
      parameters:
      - description: instrument group uuid
        format: uuid
        in: path
        name: instrument_group_id
        required: true
        type: string
      - description: instrument uuid
        format: uuid
        in: path
        name: instrument_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: removes an instrument from an instrument group
      tags:
      - instrument-group
  /instrument_groups/{instrument_group_id}/timeseries:
    get:
      parameters:
      - description: instrument group uuid
        format: uuid
        in: path
        name: instrument_group_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Timeseries'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: lists timeseries for instruments in an instrument group
      tags:
      - timeseries
  /instrument_groups/{instrument_group_id}/timeseries_measurements:
    get:
      parameters:
      - description: instrument group uuid
        format: uuid
        in: path
        name: instrument_group_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/MeasurementCollection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: lists timeseries measurements by instrument group id
      tags:
      - timeseries
  /instruments:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Instrument'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: lists all instruments
      tags:
      - instrument
  /instruments/{instrument_id}:
    get:
      parameters:
      - description: instrument uuid
        format: uuid
        in: path
        name: instrument_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Instrument'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: gets a single instrument by id
      tags:
      - instrument
  /instruments/{instrument_id}/notes:
    get:
      parameters:
      - description: instrument uuid
        format: uuid
        in: path
        name: instrument_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/InstrumentNote'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: gets instrument notes for a single instrument
      tags:
      - instrument-note
  /instruments/{instrument_id}/notes/{note_id}:
    delete:
      parameters:
      - description: instrument uuid
        format: uuid
        in: path
        name: instrument_id
        required: true
        type: string
      - description: note uuid
        format: uuid
        in: path
        name: note_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: deletes an instrument note
      tags:
      - instrument-note
  /instruments/{instrument_id}/status:
    get:
      parameters:
      - description: instrument uuid
        format: uuid
        in: path
        name: instrument_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/InstrumentStatus'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: lists all Status for an instrument
      tags:
      - instrument-status
    post:
      parameters:
      - description: instrument uuid
        format: uuid
        in: path
        name: instrument_id
        required: true
        type: string
      - description: instrument status collection paylaod
        in: body
        name: instrument_status
        required: true
        schema:
          $ref: '#/definitions/InstrumentStatusCollection'
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: creates a status for an instrument
      tags:
      - instrument-status
  /instruments/{instrument_id}/status/{status_id}:
    delete:
      parameters:
      - description: instrument uuid
        format: uuid
        in: path
        name: instrument_id
        required: true
        type: string
      - description: project uuid
        format: uuid
        in: path
        name: status_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: deletes a status for an instrument
      tags:
      - instrument-status
    get:
      parameters:
      - description: instrument uuid
        format: uuid
        in: path
        name: instrument_id
        required: true
        type: string
      - description: status uuid
        format: uuid
        in: path
        name: status_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/AlertConfig'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: gets a single status
      tags:
      - instrument-status
  /instruments/{instrument_id}/submittals:
    get:
      parameters:
      - description: instrument uuid
        format: uuid
        in: path
        name: instrument_id
        required: true
        type: string
      - description: filter by missing projects only
        in: query
        name: missing
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Submittal'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: lists all submittals for an instrument
      tags:
      - submittal
  /instruments/{instrument_id}/timeseries/{timeseries_id}:
    get:
      parameters:
      - description: timeseries uuid
        format: uuid
        in: path
        name: timeseries_id
        required: true
        type: string
      - description: instrument uuid
        format: uuid
        in: path
        name: instrument_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Timeseries'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: gets a single timeseries by id
      tags:
      - timeseries
  /instruments/{instrument_id}/timeseries/{timeseries_id}/measurements:
    get:
      parameters:
      - description: instrument uuid
        format: uuid
        in: path
        name: instrument_id
        required: true
        type: string
      - description: timeseries uuid
        format: uuid
        in: path
        name: timeseries_id
        required: true
        type: string
      - description: after time
        format: date-time
        in: query
        name: after
        type: string
      - description: before time
        format: date-time
        in: query
        name: before
        type: string
      - description: downsample threshold
        in: query
        name: threshold
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/MeasurementCollection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: lists timeseries by timeseries uuid
      tags:
      - timeseries
  /instruments/{instrument_id}/timeseries_measurements:
    get:
      parameters:
      - description: instrument uuid
        format: uuid
        in: path
        name: instrument_id
        required: true
        type: string
      - description: after time
        format: date-time
        in: query
        name: after
        type: string
      - description: before time
        format: date-time
        in: query
        name: before
        type: string
      - description: downsample threshold
        in: query
        name: threshold
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/MeasurementCollection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: lists timeseries measurements by instrument id
      tags:
      - timeseries
  /instruments/count:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/InstrumentCount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: gets the total number of non deleted instruments in the system
      tags:
      - instrument
  /instruments/ipi/{instrument_id}/measurements:
    get:
      parameters:
      - description: instrument uuid
        format: uuid
        in: path
        name: instrument_id
        required: true
        type: string
      - description: after time
        format: date-time
        in: query
        name: after
        type: string
      - description: before time
        format: date-time
        in: query
        name: before
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/IpiMeasurements'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: creates instrument notes
      tags:
      - instrument-ipi
  /instruments/ipi/{instrument_id}/segments:
    get:
      parameters:
      - description: instrument uuid
        format: uuid
        in: path
        name: instrument_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/IpiSegment'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: gets all ipi segments for an instrument
      tags:
      - instrument-ipi
    put:
      parameters:
      - description: instrument uuid
        format: uuid
        in: path
        name: instrument_id
        required: true
        type: string
      - description: ipi instrument segments payload
        in: body
        name: instrument_segments
        required: true
        schema:
          items:
            $ref: '#/definitions/IpiSegment'
          type: array
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/IpiSegment'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: updates multiple segments for an ipi instrument
      tags:
      - instrument-ipi
  /instruments/notes:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/InstrumentNote'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: gets all instrument notes
      tags:
      - instrument-note
    post:
      parameters:
      - description: instrument note collection payload
        in: body
        name: instrument_note
        required: true
        schema:
          $ref: '#/definitions/InstrumentNoteCollection'
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/InstrumentNote'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: creates instrument notes
      tags:
      - instrument-note
  /instruments/notes/{note_id}:
    get:
      parameters:
      - description: note uuid
        format: uuid
        in: path
        name: note_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/InstrumentNote'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: gets a single instrument note by id
      tags:
      - instrument-note
    put:
      parameters:
      - description: note uuid
        format: uuid
        in: path
        name: note_id
        required: true
        type: string
      - description: instrument note collection payload
        in: body
        name: instrument_note
        required: true
        schema:
          $ref: '#/definitions/InstrumentNote'
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/AlertConfig'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: updates an instrument note by id
      tags:
      - instrument-note
  /instruments/saa/{instrument_id}/measurements:
    get:
      parameters:
      - description: instrument uuid
        format: uuid
        in: path
        name: instrument_id
        required: true
        type: string
      - description: after time
        format: date-time
        in: query
        name: after
        type: string
      - description: before time
        format: date-time
        in: query
        name: before
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/SaaMeasurements'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: creates instrument notes
      tags:
      - instrument-saa
  /instruments/saa/{instrument_id}/segments:
    get:
      parameters:
      - description: instrument uuid
        format: uuid
        in: path
        name: instrument_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/SaaSegment'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: gets all saa segments for an instrument
      tags:
      - instrument-saa
    put:
      parameters:
      - description: instrument uuid
        format: uuid
        in: path
        name: instrument_id
        required: true
        type: string
      - description: saa instrument segments payload
        in: body
        name: instrument_segments
        required: true
        schema:
          items:
            $ref: '#/definitions/SaaSegment'
          type: array
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/SaaSegment'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: updates multiple segments for an saa instrument
      tags:
      - instrument-saa
  /my_alert_subscriptions:
    get:
      parameters:
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/AlertSubscription'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: lists all alerts subscribed to by the current profile
      tags:
      - alert-subscription
  /my_alerts:
    get:
      description: list all alerts a profile is subscribed to
      parameters:
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Alert'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: lists subscribed alerts for a single user
      tags:
      - alert
  /my_alerts/{alert_id}/read:
    post:
      description: |-
        marks an alert as read for a profile
        returning the updated alert
      parameters:
      - description: alert uuid
        format: uuid
        in: path
        name: alert_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Alert'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: marks an alert as read
      tags:
      - alert
  /my_alerts/{alert_id}/unread:
    post:
      description: |-
        marks an alert as unread based on provided profile ID and alert ID.
        returning the updated alert
      parameters:
      - description: alert uuid
        format: uuid
        in: path
        name: alert_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Alert'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: marks an alert as unread for a profile
      tags:
      - alert
  /my_profile:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Profile'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - CacOnly: []
      summary: gets profile for current authenticated user
      tags:
      - profile
  /my_projects:
    get:
      parameters:
      - description: role
        in: query
        name: role
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Project'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: lists projects where current profile is an admin or member with optional
        filter by project role
      tags:
      - project
  /my_tokens:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Token'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - CacOnly: []
      summary: creates token for a profile
      tags:
      - profile
  /my_tokens/{token_id}:
    delete:
      parameters:
      - description: token uuid
        format: uuid
        in: path
        name: token_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - CacOnly: []
      summary: deletes a token for a profile
      tags:
      - profile
  /opendcs/sites:
    get:
      produces:
      - text/xml
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Site'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: lists all instruments, represented as opendcs sites
      tags:
      - opendcs
  /profiles:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Profile'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - CacOnly: []
      summary: creates a user profile
      tags:
      - profile
  /projects:
    get:
      parameters:
      - description: federal id
        in: query
        name: federal_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Project'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: lists all projects optionally filtered by federal id
      tags:
      - project
    post:
      parameters:
      - description: project collection payload
        in: body
        name: project_collection
        required: true
        schema:
          items:
            $ref: '#/definitions/Project'
          type: array
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/IDSlugName'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: accepts an array of instruments for bulk upload to the database
      tags:
      - project
  /projects/{project_id}:
    delete:
      parameters:
      - description: project id
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: soft deletes a project
      tags:
      - project
    get:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Project'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: gets a single project
      tags:
      - project
    put:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: project payload
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/Project'
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Project'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: updates an existing project
      tags:
      - project
  /projects/{project_id}/alert_configs:
    get:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/AlertConfig'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: lists alert configs for a project
      tags:
      - alert-config
    post:
      consumes:
      - application/json
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: alert config payload
        in: body
        name: alert_config
        required: true
        schema:
          $ref: '#/definitions/AlertConfig'
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AlertConfig'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: creates one alert config
      tags:
      - alert-config
  /projects/{project_id}/alert_configs/{alert_config_id}:
    delete:
      parameters:
      - description: Project ID
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: instrument uuid
        format: uuid
        in: path
        name: alert_config_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/AlertConfig'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: deletes an alert config
      tags:
      - alert-config
    get:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: alert config uuid
        format: uuid
        in: path
        name: alert_config_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AlertConfig'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: gets a single alert
      tags:
      - alert-config
    put:
      consumes:
      - application/json
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: alert config uuid
        format: uuid
        in: path
        name: alert_config_id
        required: true
        type: string
      - description: alert config payload
        in: body
        name: alert_config
        required: true
        schema:
          $ref: '#/definitions/AlertConfig'
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/AlertConfig'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: updates an existing alert config
      tags:
      - alert-config
  /projects/{project_id}/collection_groups:
    get:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/AlertConfig'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: lists instrument groups
      tags:
      - collection-groups
    post:
      description: lists alert configs for a single project optionally filtered by
        alert_type_id
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: collection group payload
        in: body
        name: collection_group
        required: true
        schema:
          $ref: '#/definitions/CollectionGroup'
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/CollectionGroup'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: creates a new collection group
      tags:
      - collection-groups
  /projects/{project_id}/collection_groups/{collection_group_id}:
    delete:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: collection group uuid
        format: uuid
        in: path
        name: collection_group_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: deletes a collection group using the id of the collection group
      tags:
      - collection-groups
    get:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: collection group uuid
        format: uuid
        in: path
        name: collection_group_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CollectionGroupDetails'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: gets all data needed to render collection group form
      tags:
      - collection-groups
    put:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: collection group uuid
        in: path
        name: collection_group_id
        required: true
        type: string
      - description: collection group payload
        in: body
        name: collection_group
        required: true
        schema:
          $ref: '#/definitions/CollectionGroup'
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CollectionGroup'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: updates an existing collection group
      tags:
      - collection-groups
  /projects/{project_id}/collection_groups/{collection_group_id}/timeseries/{timeseries_id}:
    delete:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: collection group uuid
        format: uuid
        in: path
        name: collection_group_id
        required: true
        type: string
      - description: timeseries uuid
        format: uuid
        in: path
        name: timeseries_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: removes a timeseries from a collection group
      tags:
      - collection-groups
    post:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: collection group uuid
        format: uuid
        in: path
        name: collection_group_id
        required: true
        type: string
      - description: timeseries uuid
        format: uuid
        in: path
        name: timeseries_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: adds a timeseries to a collection group
      tags:
      - collection-groups
  /projects/{project_id}/district_rollup/evaluation_submittals:
    get:
      parameters:
      - description: project id
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/DistrictRollup'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: lists monthly evaluation statistics for a district by project id
      tags:
      - district-rollup
  /projects/{project_id}/district_rollup/measurement_submittals:
    get:
      parameters:
      - description: project id
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/DistrictRollup'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: lists monthly measurement statistics for a district by project id
      tags:
      - district-rollup
  /projects/{project_id}/evaluations:
    get:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Evaluation'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: lists evaluations for a single project optionally filtered by alert_config_id
      tags:
      - evaluation
    post:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: evaluation payload
        in: body
        name: evaluation
        required: true
        schema:
          $ref: '#/definitions/Evaluation'
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Evaluation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: creates one evaluation
      tags:
      - evaluation
  /projects/{project_id}/evaluations/{evaluation_id}:
    delete:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: evaluation uuid
        format: uuid
        in: path
        name: evaluation_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/AlertConfig'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: deletes an evaluation
      tags:
      - evaluation
    get:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: evaluation uuid
        format: uuid
        in: path
        name: evaluation_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Evaluation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: gets a single evaluation by id
      tags:
      - evaluation
    put:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: evaluation uuid
        format: uuid
        in: path
        name: evaluation_id
        required: true
        type: string
      - description: evaluation payload
        in: body
        name: evaluation
        required: true
        schema:
          $ref: '#/definitions/Evaluation'
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Evaluation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: updates an existing evaluation
      tags:
      - evaluation
  /projects/{project_id}/images:
    post:
      consumes:
      - image/jpeg
      - image/png
      parameters:
      - description: project id
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: uploades a picture for a project
      tags:
      - project
  /projects/{project_id}/inclinometer_measurements:
    post:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: inclinometer measurement collections
        in: body
        name: timeseries_measurement_collections
        required: true
        schema:
          $ref: '#/definitions/InclinometerMeasurementCollectionCollection'
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/InclinometerMeasurementCollection'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: creates or updates one or more inclinometer measurements
      tags:
      - measurement-inclinometer
  /projects/{project_id}/instrument_groups:
    get:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/InstrumentGroup'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: lists instrument groups associated with a project
      tags:
      - project
  /projects/{project_id}/instruments:
    get:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Project'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: lists instruments associated with a project
      tags:
      - project
    post:
      parameters:
      - description: project id
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: instrument id
        format: uuid
        in: path
        name: instrument_id
        required: true
        type: string
      - description: instrument collection payload
        in: body
        name: instrument
        required: true
        schema:
          items:
            $ref: '#/definitions/Instrument'
          type: array
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/IDSlugName'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: accepts an array of instruments for bulk upload to the database
      tags:
      - instrument
  /projects/{project_id}/instruments/{instrument_id}:
    delete:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: instrument uuid
        format: uuid
        in: path
        name: instrument_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: soft deletes an instrument
      tags:
      - instrument
    put:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: instrument uuid
        format: uuid
        in: path
        name: instrument_id
        required: true
        type: string
      - description: instrument payload
        in: body
        name: instrument
        required: true
        schema:
          $ref: '#/definitions/Instrument'
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Instrument'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: updates an existing instrument
      tags:
      - instrument
  /projects/{project_id}/instruments/{instrument_id}/alert_configs:
    get:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: instrument uuid
        format: uuid
        in: path
        name: instrument_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/AlertConfig'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: lists alerts for a single instrument
      tags:
      - alert-config
  /projects/{project_id}/instruments/{instrument_id}/alert_configs/{alert_config_id}/subscribe:
    post:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: instrument uuid
        format: uuid
        in: path
        name: instrument_id
        required: true
        type: string
      - description: alert config uuid
        format: uuid
        in: path
        name: alert_config_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AlertSubscription'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: subscribes a profile to an alert
      tags:
      - alert-subscription
  /projects/{project_id}/instruments/{instrument_id}/alert_configs/{alert_config_id}/unsubscribe:
    post:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: instrument uuid
        format: uuid
        in: path
        name: instrument_id
        required: true
        type: string
      - description: alert config uuid
        format: uuid
        in: path
        name: alert_config_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: unsubscribes a profile to an alert
      tags:
      - alert-subscription
  /projects/{project_id}/instruments/{instrument_id}/alerts:
    get:
      description: list all alerts associated an instrument
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: instrument uuid
        format: uuid
        in: path
        name: instrument_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Alert'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: lists alerts for a single instrument
      tags:
      - alert
  /projects/{project_id}/instruments/{instrument_id}/assignments:
    delete:
      description: must be Project Admin of project to be unassigned
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: instrument uuid
        format: uuid
        in: path
        name: instrument_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: unassigns an instrument from a project.
      tags:
      - instrument
    post:
      description: must be Project (or Application) Admin of all existing instrument
        projects and project to be assigned
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: instrument uuid
        format: uuid
        in: path
        name: instrument_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: assigns an instrument to a project.
      tags:
      - instrument
  /projects/{project_id}/instruments/{instrument_id}/constants:
    get:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: instrument uuid
        format: uuid
        in: path
        name: instrument_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Timeseries'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: lists constants for a given instrument
      tags:
      - instrument-constant
    post:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: instrument uuid
        format: uuid
        in: path
        name: instrument_id
        required: true
        type: string
      - description: timeseries collection items payload
        in: body
        name: timeseries_collection_items
        required: true
        schema:
          $ref: '#/definitions/TimeseriesCollectionItems'
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Timeseries'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: creates instrument constants (i.e. timeseries)
      tags:
      - instrument-constant
  /projects/{project_id}/instruments/{instrument_id}/constants/{timeseries_id}:
    delete:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: instrument uuid
        format: uuid
        in: path
        name: instrument_id
        required: true
        type: string
      - description: timeseries uuid
        format: uuid
        in: path
        name: timeseries_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: removes a timeseries as an instrument constant
      tags:
      - instrument-constant
  /projects/{project_id}/instruments/{instrument_id}/evaluations:
    get:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: instrument uuid
        format: uuid
        in: path
        name: instrument_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Evaluation'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: lists evaluations for a single instrument
      tags:
      - evaluation
  /projects/{project_id}/instruments/{instrument_id}/geometry:
    put:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: instrument uuid
        format: uuid
        in: path
        name: instrument_id
        required: true
        type: string
      - description: instrument payload
        in: body
        name: instrument
        required: true
        schema:
          $ref: '#/definitions/Instrument'
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Instrument'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: updates the geometry of an instrument
      tags:
      - instrument
  /projects/{project_id}/instruments/{instrument_id}/timeseries:
    get:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: instrument uuid
        format: uuid
        in: path
        name: instrument_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Timeseries'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: lists timeseries for an instrument
      tags:
      - timeseries
  /projects/{project_id}/members:
    get:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ProjectMembership'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: lists project members and their role information
      tags:
      - project-role
  /projects/{project_id}/members/{profile_id}/roles/{role_id}:
    delete:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: profile uuid
        format: uuid
        in: path
        name: profile_id
        required: true
        type: string
      - description: role uuid
        format: uuid
        in: path
        name: role_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: removes project members and their role information
      tags:
      - project-role
    post:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: profile uuid
        format: uuid
        in: path
        name: profile_id
        required: true
        type: string
      - description: role uuid
        format: uuid
        in: path
        name: role_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectMembership'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: adds project members and their role information
      tags:
      - project-role
  /projects/{project_id}/plot_configurations:
    get:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/PlotConfig'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: lists plot configs
      tags:
      - plot-config
    post:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: plot config payload
        in: body
        name: plot_config
        required: true
        schema:
          $ref: '#/definitions/PlotConfig'
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PlotConfig'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      tags:
      - plot-config
  /projects/{project_id}/plot_configurations/{plot_config_id}/timeseries:
    get:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Timeseries'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: lists all timeseries for a single plot config
      tags:
      - timeseries
  /projects/{project_id}/plot_configurations/{plot_configuration_id}:
    delete:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: plot config uuid
        format: uuid
        in: path
        name: plot_configuration_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      tags:
      - plot-config
    get:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: plot config uuid
        format: uuid
        in: path
        name: plot_configuration_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PlotConfig'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      tags:
      - plot-config
    put:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: plot config uuid
        format: uuid
        in: path
        name: plot_configuration_id
        required: true
        type: string
      - description: plot config payload
        in: body
        name: plot_config
        required: true
        schema:
          $ref: '#/definitions/PlotConfig'
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PlotConfig'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      tags:
      - plot-config
  /projects/{project_id}/report_configs:
    get:
      consumes:
      - application/json
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ReportConfig'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: lists all report configs for a project
      tags:
      - report-config
    post:
      consumes:
      - application/json
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: report config payload
        in: body
        name: report_config
        required: true
        schema:
          $ref: '#/definitions/ReportConfig'
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ReportConfig'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: creates a report config
      tags:
      - report-config
  /projects/{project_id}/report_configs/{report_config_id}:
    delete:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: updates a report config
      tags:
      - report-config
    put:
      consumes:
      - application/json
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: report config uuid
        format: uuid
        in: path
        name: report_config_id
        required: true
        type: string
      - description: report config payload
        in: body
        name: report_config
        required: true
        schema:
          $ref: '#/definitions/ReportConfig'
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: updates a report config
      tags:
      - report-config
  /projects/{project_id}/report_configs/{report_config_id}/jobs:
    post:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: report config uuid
        format: uuid
        in: path
        name: report_config_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/ReportDownloadJob'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      tags:
      - report-config
  /projects/{project_id}/report_configs/{report_config_id}/jobs/{job_id}:
    get:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: report config uuid
        format: uuid
        in: path
        name: report_config_id
        required: true
        type: string
      - description: download job uuid
        format: uuid
        in: path
        name: job_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ReportDownloadJob'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      tags:
      - report-config
    put:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: report config uuid
        format: uuid
        in: path
        name: report_config_id
        required: true
        type: string
      - description: download job uuid
        format: uuid
        in: path
        name: job_id
        required: true
        type: string
      - description: report download job payload
        in: body
        name: report_download_job
        required: true
        schema:
          $ref: '#/definitions/ReportDownloadJob'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      tags:
      - report-config
  /projects/{project_id}/submittals:
    get:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: filter by missing projects only
        in: query
        name: missing
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Submittal'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: lists all submittals for a project
      tags:
      - submittal
  /projects/{project_id}/timeseries:
    get:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Timeseries'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: lists all timeseries for a single project
      tags:
      - timeseries
  /projects/{project_id}/timeseries_measurements:
    post:
      consumes:
      - application/json
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: array of timeseries measurement collections
        in: body
        name: timeseries_measurement_collections
        required: true
        schema:
          $ref: '#/definitions/TimeseriesMeasurementCollectionCollection'
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/MeasurementCollection'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: creates or updates one or more timeseries measurements
      tags:
      - measurement
    put:
      parameters:
      - description: project uuid
        format: uuid
        in: path
        name: project_id
        required: true
        type: string
      - description: after timestamp
        format: date-time
        in: query
        name: after
        type: string
      - description: before timestamp
        format: date-time
        in: query
        name: before
        type: string
      - description: array of timeseries measurement collections
        in: body
        name: timeseries_measurement_collections
        required: true
        schema:
          $ref: '#/definitions/TimeseriesMeasurementCollectionCollection'
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/MeasurementCollection'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: overwrites all measurements witin date range with the supplied payload
      tags:
      - measurement
  /projects/{project_slug}/images/{uri_path}:
    get:
      parameters:
      - description: project abbr
        in: path
        name: project_slug
        required: true
        type: string
      - description: uri path of requested resource
        in: path
        name: uri_path
        required: true
        type: string
      produces:
      - image/jpeg
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: serves media, files, etc for a given project
      tags:
      - media
  /projects/count:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProjectCount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: gets the total number of non-deleted projects in the system
      tags:
      - project
  /report_configs/{report_config_id}/plot_configs:
    get:
      parameters:
      - description: report config uuid
        format: uuid
        in: path
        name: report_config_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ReportConfigWithPlotConfigs'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      tags:
      - report-config
  /search/{entity}:
    get:
      parameters:
      - description: entity to search (i.e. projects, etc.)
        in: path
        name: entity
        required: true
        type: string
      - description: search string
        in: query
        name: q
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/SearchResult'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: allows searching using a string on different entities
      tags:
      - search
  /submittals/{submittal_id}/verify_missing:
    put:
      parameters:
      - description: submittal uuid
        format: uuid
        in: path
        name: submittal_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: verifies the specified submittal is "missing" and will not be completed
      tags:
      - submittal
  /timeseries:
    post:
      parameters:
      - description: timeseries collection items payload
        in: body
        name: timeseries_collection_items
        required: true
        schema:
          $ref: '#/definitions/TimeseriesCollectionItems'
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              additionalProperties:
                type: string
              type: object
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: creates one or more timeseries
      tags:
      - timeseries
  /timeseries/{timeseries_id}:
    delete:
      parameters:
      - description: timeseries uuid
        format: uuid
        in: path
        name: timeseries_id
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: deletes a single timeseries by id
      tags:
      - timeseries
    get:
      parameters:
      - description: timeseries uuid
        format: uuid
        in: path
        name: timeseries_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Timeseries'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: gets a single timeseries by id
      tags:
      - timeseries
    put:
      parameters:
      - description: timeseries uuid
        format: uuid
        in: path
        name: timeseries_id
        required: true
        type: string
      - description: timeseries payload
        in: body
        name: timeseries
        required: true
        schema:
          $ref: '#/definitions/Timeseries'
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: updates a single timeseries by id
      tags:
      - timeseries
  /timeseries/{timeseries_id}/inclinometer_measurements:
    delete:
      parameters:
      - description: timeseries uuid
        format: uuid
        in: path
        name: timeseries_id
        required: true
        type: string
      - description: timestamp of measurement to delete
        format: date-time
        in: query
        name: time
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: deletes a single inclinometer measurement by timestamp
      tags:
      - measurement-inclinometer
    get:
      parameters:
      - description: timeseries uuid
        format: uuid
        in: path
        name: timeseries_id
        required: true
        type: string
      - description: after timestamp
        format: date-time
        in: query
        name: after
        type: string
      - description: before timestamp
        format: date-time
        in: query
        name: before
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/InclinometerMeasurementCollection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: lists all measurements for an inclinometer
      tags:
      - measurement-inclinometer
  /timeseries/{timeseries_id}/measurements:
    delete:
      parameters:
      - description: timeseries uuid
        format: uuid
        in: path
        name: timeseries_id
        required: true
        type: string
      - description: timestamp of measurement to delete
        format: date-time
        in: query
        name: time
        required: true
        type: string
      - description: api key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - Bearer: []
      summary: deletes a single timeseries measurement by timestamp
      tags:
      - measurement
    get:
      parameters:
      - description: timeseries uuid
        format: uuid
        in: path
        name: timeseries_id
        required: true
        type: string
      - description: after time
        format: date-time
        in: query
        name: after
        type: string
      - description: before time
        format: date-time
        in: query
        name: before
        type: string
      - description: downsample threshold
        in: query
        name: threshold
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/MeasurementCollection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: lists timeseries by timeseries uuid
      tags:
      - timeseries
  /timeseries_measurements:
    post:
      parameters:
      - description: array of timeseries measurement collections
        in: body
        name: timeseries_measurement_collections
        required: true
        schema:
          $ref: '#/definitions/TimeseriesMeasurementCollectionCollection'
      - description: api key
        in: query
        name: key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/MeasurementCollection'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: creates or updates one or more timeseries measurements
      tags:
      - measurement
  /units:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Unit'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: lists the available units
      tags:
      - unit
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and access token.
    in: header
    name: Authorization
    type: apiKey
  CacOnly:
    description: CAC-Only routes
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
