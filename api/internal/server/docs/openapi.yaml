openapi: 3.0.1
info:
  contact: {}
  description: Monitoring Instrumentation Data Acquisition Systems (MIDAS) Web API
  license:
    name: MIT
    url: https://github.com/USACE/instrumentation-api/blob/555ea51191ff1245fe5910a295862be7514aaec6/LICENSE.md
  title: MIDAS Web API
  version: "2.0"
servers:
- url: /
paths:
  /alert_configs/{alert_config_id}/submittals:
    get:
      parameters:
      - description: alert config uuid
        in: path
        name: alert_config_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Submittal'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: lists all submittals for an instrument
      tags:
      - submittal
  /alert_configs/{alert_config_id}/submittals/verify_missing:
    put:
      parameters:
      - description: alert config uuid
        in: path
        name: alert_config_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: verifies all current submittals for the alert config are "missing"
        and will not be completed
      tags:
      - submittal
  /alert_subscriptions/{alert_subscription_id}:
    put:
      parameters:
      - description: alert subscription id
        in: path
        name: alert_subscription_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertSubscription'
        description: alert subscription payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AlertSubscription'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: updates settings for an alert subscription
      tags:
      - alert-subscription
      x-codegen-request-body-name: alert_subscription
  /aware/data_acquisition_config:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AwarePlatformParameterConfig'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: lists alert configs for a project
      tags:
      - aware
  /aware/parameters:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AwareParameter'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: lists alert configs for a project
      tags:
      - aware
  /datalogger:
    post:
      parameters:
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Datalogger'
        description: datalogger payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataloggerWithKey'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: creates a datalogger
      tags:
      - datalogger
      x-codegen-request-body-name: datalogger
  /datalogger/{datalogger_id}:
    delete:
      parameters:
      - description: datalogger uuid
        in: path
        name: datalogger_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: deletes a datalogger by id
      tags:
      - datalogger
    get:
      parameters:
      - description: datalogger uuid
        in: path
        name: datalogger_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datalogger'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: gets a datalogger by id
      tags:
      - datalogger
    put:
      parameters:
      - description: datalogger uuid
        in: path
        name: datalogger_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Datalogger'
        description: datalogger payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datalogger'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: updates a datalogger
      tags:
      - datalogger
      x-codegen-request-body-name: datalogger
  /datalogger/{datalogger_id}/equivalency_table:
    post:
      parameters:
      - description: datalogger uuid
        in: path
        name: datalogger_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DataloggerEquivalencyTable'
        description: equivalency table payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataloggerEquivalencyTable'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: creates an equivalency table for a datalogger and auto create data
        logger table if not exists
      tags:
      - equivalency-table
      x-codegen-request-body-name: equivalency_table
  /datalogger/{datalogger_id}/key:
    put:
      parameters:
      - description: datalogger uuid
        in: path
        name: datalogger_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataloggerWithKey'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: deletes and recreates a datalogger api key
      tags:
      - datalogger
  /datalogger/{datalogger_id}/tables/{datalogger_table_id}/equivalency_table:
    delete:
      parameters:
      - description: datalogger uuid
        in: path
        name: datalogger_id
        required: true
        schema:
          format: uuid
          type: string
      - description: datalogger table uuid
        in: path
        name: datalogger_table_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: deletes an equivalency table and corresponding datalogger table
      tags:
      - equivalency-table
    get:
      parameters:
      - description: datalogger uuid
        in: path
        name: datalogger_id
        required: true
        schema:
          format: uuid
          type: string
      - description: datalogger table uuid
        in: path
        name: datalogger_table_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataloggerEquivalencyTable'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: gets an equivalency table for a datalogger
      tags:
      - equivalency-table
    post:
      parameters:
      - description: datalogger uuid
        in: path
        name: datalogger_id
        required: true
        schema:
          format: uuid
          type: string
      - description: datalogger table uuid
        in: path
        name: datalogger_table_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DataloggerEquivalencyTable'
        description: equivalency table payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataloggerEquivalencyTable'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: creates an equivalency table for a datalogger and auto create data
        logger table if not exists
      tags:
      - equivalency-table
      x-codegen-request-body-name: equivalency_table
    put:
      parameters:
      - description: datalogger uuid
        in: path
        name: datalogger_id
        required: true
        schema:
          format: uuid
          type: string
      - description: datalogger table uuid
        in: path
        name: datalogger_table_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DataloggerEquivalencyTable'
        description: equivalency table payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataloggerEquivalencyTable'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: updates an equivalency table for a datalogger
      tags:
      - equivalency-table
      x-codegen-request-body-name: equivalency_table
  /datalogger/{datalogger_id}/tables/{datalogger_table_id}/equivalency_table/row/{row_id}:
    delete:
      parameters:
      - description: datalogger uuid
        in: path
        name: datalogger_id
        required: true
        schema:
          format: uuid
          type: string
      - description: datalogger table uuid
        in: path
        name: datalogger_table_id
        required: true
        schema:
          format: uuid
          type: string
      - description: equivalency table row uuid
        in: path
        name: row_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: deletes an equivalency table row
      tags:
      - equivalency-table
  /datalogger/{datalogger_id}/tables/{datalogger_table_id}/name:
    put:
      parameters:
      - description: datalogger uuid
        in: path
        name: datalogger_id
        required: true
        schema:
          format: uuid
          type: string
      - description: datalogger table uuid
        in: path
        name: datalogger_table_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataloggerTablePreview'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: resets a datalogger table name to be renamed by incoming telemetry
      tags:
      - datalogger
  /datalogger/{datalogger_id}/tables/{datalogger_table_id}/preview:
    get:
      parameters:
      - description: datalogger uuid
        in: path
        name: datalogger_id
        required: true
        schema:
          format: uuid
          type: string
      - description: datalogger table uuid
        in: path
        name: datalogger_table_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataloggerTablePreview'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: gets the most recent datalogger preview by by datalogger id
      tags:
      - datalogger
  /dataloggers:
    get:
      parameters:
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Datalogger'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: lists dataloggers for a project
      tags:
      - datalogger
  /districts:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/District'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: lists all districts
      tags:
      - project
  /domains:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Domain'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: lists all domains
      tags:
      - domain
  /domains/map:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainMap'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: Get map with domain group as key
      tags:
      - domain
  /email_autocomplete:
    get:
      parameters:
      - description: search query string
        in: query
        name: q
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EmailAutocompleteResult'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: lists results of email autocomplete
      tags:
      - autocomplete
  /explorer:
    post:
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: array of instrument uuids
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  additionalProperties:
                    $ref: '#/components/schemas/MeasurementCollectionLean'
                  type: object
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: list timeseries measurements for explorer page
      tags:
      - explorer
      x-codegen-request-body-name: instrument_ids
  /formulas:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CalculatedTimeseries'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: lists calculations associated with an instrument
      tags:
      - formula
    post:
      parameters:
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: creates a calculation
      tags:
      - formula
  /formulas/{formula_id}:
    delete:
      parameters:
      - description: formula uuid
        in: path
        name: formula_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: deletes a calculation
      tags:
      - formula
    put:
      parameters:
      - description: formula uuid
        in: path
        name: formula_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CalculatedTimeseries'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: updates a calculation
      tags:
      - formula
  /health:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  additionalProperties: true
                  type: object
                type: array
          description: OK
      summary: checks the health of the api server
      tags:
      - heartbeat
  /heartbeat:
    post:
      parameters:
      - description: api key
        in: query
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Heartbeat'
          description: OK
      summary: creates a heartbeat entry at regular intervals
      tags:
      - heartbeat
  /heartbeat/latest:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Heartbeat'
          description: OK
      summary: gets the latest heartbeat
      tags:
      - heartbeat
  /heartbeats:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Heartbeat'
                type: array
          description: OK
      summary: returns all heartbeats
      tags:
      - heartbeat
  /home:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Home'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: gets information for the homepage
      tags:
      - home
  /inclinometer_explorer:
    post:
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: array of inclinometer instrument uuids
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  additionalProperties:
                    $ref: '#/components/schemas/InclinometerMeasurementCollectionLean'
                  type: object
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: list inclinometer timeseries measurements for explorer page
      tags:
      - explorer
      x-codegen-request-body-name: instrument_ids
  /instrument_groups:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/InstrumentGroup'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: lists all instrument groups
      tags:
      - instrument-group
    post:
      parameters:
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/InstrumentGroup'
        description: instrument group payload
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstrumentGroup'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: creats an instrument group from an array of instruments
      tags:
      - instrument-group
      x-codegen-request-body-name: instrument_group
  /instrument_groups/{instrument_group_id}:
    delete:
      parameters:
      - description: instrument group uuid
        in: path
        name: instrument_group_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/InstrumentGroup'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: soft deletes an instrument
      tags:
      - instrument-group
    get:
      parameters:
      - description: instrument group uuid
        in: path
        name: instrument_group_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstrumentGroup'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: gets a single instrument group
      tags:
      - instrument-group
    put:
      parameters:
      - description: instrument group uuid
        in: path
        name: instrument_group_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/InstrumentGroup'
        description: instrument group payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstrumentGroup'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: updates an existing instrument group
      tags:
      - instrument-group
      x-codegen-request-body-name: instrument_group
  /instrument_groups/{instrument_group_id}/instruments:
    get:
      parameters:
      - description: instrument group uuid
        in: path
        name: instrument_group_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Instrument'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: lists instruments in an instrument group
      tags:
      - instrument-group
    post:
      parameters:
      - description: instrument group uuid
        in: path
        name: instrument_group_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: adds an instrument to an instrument group
      tags:
      - instrument-group
  /instrument_groups/{instrument_group_id}/instruments/{instrument_id}:
    delete:
      parameters:
      - description: instrument group uuid
        in: path
        name: instrument_group_id
        required: true
        schema:
          format: uuid
          type: string
      - description: instrument uuid
        in: path
        name: instrument_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: removes an instrument from an instrument group
      tags:
      - instrument-group
  /instrument_groups/{instrument_group_id}/timeseries:
    get:
      parameters:
      - description: instrument group uuid
        in: path
        name: instrument_group_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Timeseries'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: lists timeseries for instruments in an instrument group
      tags:
      - timeseries
  /instrument_groups/{instrument_group_id}/timeseries_measurements:
    get:
      parameters:
      - description: instrument group uuid
        in: path
        name: instrument_group_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasurementCollection'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: lists timeseries measurements by instrument group id
      tags:
      - timeseries
  /instruments:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Instrument'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: lists all instruments
      tags:
      - instrument
  /instruments/count:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstrumentCount'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: gets the total number of non deleted instruments in the system
      tags:
      - instrument
  /instruments/ipi/{instrument_id}/measurements:
    get:
      parameters:
      - description: instrument uuid
        in: path
        name: instrument_id
        required: true
        schema:
          format: uuid
          type: string
      - description: after time
        in: query
        name: after
        schema:
          format: date-time
          type: string
      - description: before time
        in: query
        name: before
        required: true
        schema:
          format: date-time
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IpiMeasurements'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: creates instrument notes
      tags:
      - instrument-ipi
  /instruments/ipi/{instrument_id}/segments:
    get:
      parameters:
      - description: instrument uuid
        in: path
        name: instrument_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IpiSegment'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: gets all ipi segments for an instrument
      tags:
      - instrument-ipi
    put:
      parameters:
      - description: instrument uuid
        in: path
        name: instrument_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              items:
                $ref: '#/components/schemas/IpiSegment'
              type: array
        description: ipi instrument segments payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IpiSegment'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: updates multiple segments for an ipi instrument
      tags:
      - instrument-ipi
      x-codegen-request-body-name: instrument_segments
  /instruments/notes:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/InstrumentNote'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: gets all instrument notes
      tags:
      - instrument-note
    post:
      parameters:
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/InstrumentNoteCollection'
        description: instrument note collection payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/InstrumentNote'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: creates instrument notes
      tags:
      - instrument-note
      x-codegen-request-body-name: instrument_note
  /instruments/notes/{note_id}:
    get:
      parameters:
      - description: note uuid
        in: path
        name: note_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstrumentNote'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: gets a single instrument note by id
      tags:
      - instrument-note
    put:
      parameters:
      - description: note uuid
        in: path
        name: note_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/InstrumentNote'
        description: instrument note collection payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AlertConfig'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: updates an instrument note by id
      tags:
      - instrument-note
      x-codegen-request-body-name: instrument_note
  /instruments/saa/{instrument_id}/measurements:
    get:
      parameters:
      - description: instrument uuid
        in: path
        name: instrument_id
        required: true
        schema:
          format: uuid
          type: string
      - description: after time
        in: query
        name: after
        schema:
          format: date-time
          type: string
      - description: before time
        in: query
        name: before
        required: true
        schema:
          format: date-time
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SaaMeasurements'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: creates instrument notes
      tags:
      - instrument-saa
  /instruments/saa/{instrument_id}/segments:
    get:
      parameters:
      - description: instrument uuid
        in: path
        name: instrument_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SaaSegment'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: gets all saa segments for an instrument
      tags:
      - instrument-saa
    put:
      parameters:
      - description: instrument uuid
        in: path
        name: instrument_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              items:
                $ref: '#/components/schemas/SaaSegment'
              type: array
        description: saa instrument segments payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SaaSegment'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: updates multiple segments for an saa instrument
      tags:
      - instrument-saa
      x-codegen-request-body-name: instrument_segments
  /instruments/{instrument_id}:
    get:
      parameters:
      - description: instrument uuid
        in: path
        name: instrument_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instrument'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: gets a single instrument by id
      tags:
      - instrument
  /instruments/{instrument_id}/notes:
    get:
      parameters:
      - description: instrument uuid
        in: path
        name: instrument_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/InstrumentNote'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: gets instrument notes for a single instrument
      tags:
      - instrument-note
  /instruments/{instrument_id}/notes/{note_id}:
    delete:
      parameters:
      - description: instrument uuid
        in: path
        name: instrument_id
        required: true
        schema:
          format: uuid
          type: string
      - description: note uuid
        in: path
        name: note_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: deletes an instrument note
      tags:
      - instrument-note
  /instruments/{instrument_id}/status:
    get:
      parameters:
      - description: instrument uuid
        in: path
        name: instrument_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/InstrumentStatus'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: lists all Status for an instrument
      tags:
      - instrument-status
    post:
      parameters:
      - description: instrument uuid
        in: path
        name: instrument_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/InstrumentStatusCollection'
        description: instrument status collection paylaod
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: creates a status for an instrument
      tags:
      - instrument-status
      x-codegen-request-body-name: instrument_status
  /instruments/{instrument_id}/status/{status_id}:
    delete:
      parameters:
      - description: instrument uuid
        in: path
        name: instrument_id
        required: true
        schema:
          format: uuid
          type: string
      - description: project uuid
        in: path
        name: status_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: deletes a status for an instrument
      tags:
      - instrument-status
    get:
      parameters:
      - description: instrument uuid
        in: path
        name: instrument_id
        required: true
        schema:
          format: uuid
          type: string
      - description: status uuid
        in: path
        name: status_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AlertConfig'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: gets a single status
      tags:
      - instrument-status
  /instruments/{instrument_id}/submittals:
    get:
      parameters:
      - description: instrument uuid
        in: path
        name: instrument_id
        required: true
        schema:
          format: uuid
          type: string
      - description: filter by missing projects only
        in: query
        name: missing
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Submittal'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: lists all submittals for an instrument
      tags:
      - submittal
  /instruments/{instrument_id}/timeseries/{timeseries_id}:
    get:
      parameters:
      - description: timeseries uuid
        in: path
        name: timeseries_id
        required: true
        schema:
          format: uuid
          type: string
      - description: instrument uuid
        in: path
        name: instrument_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeseries'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: gets a single timeseries by id
      tags:
      - timeseries
  /instruments/{instrument_id}/timeseries/{timeseries_id}/measurements:
    get:
      parameters:
      - description: instrument uuid
        in: path
        name: instrument_id
        required: true
        schema:
          format: uuid
          type: string
      - description: timeseries uuid
        in: path
        name: timeseries_id
        required: true
        schema:
          format: uuid
          type: string
      - description: after time
        in: query
        name: after
        schema:
          format: date-time
          type: string
      - description: before time
        in: query
        name: before
        schema:
          format: date-time
          type: string
      - description: downsample threshold
        in: query
        name: threshold
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasurementCollection'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: lists timeseries by timeseries uuid
      tags:
      - timeseries
  /instruments/{instrument_id}/timeseries_measurements:
    get:
      parameters:
      - description: instrument uuid
        in: path
        name: instrument_id
        required: true
        schema:
          format: uuid
          type: string
      - description: after time
        in: query
        name: after
        schema:
          format: date-time
          type: string
      - description: before time
        in: query
        name: before
        schema:
          format: date-time
          type: string
      - description: downsample threshold
        in: query
        name: threshold
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasurementCollection'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: lists timeseries measurements by instrument id
      tags:
      - timeseries
  /my_alert_subscriptions:
    get:
      parameters:
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AlertSubscription'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: lists all alerts subscribed to by the current profile
      tags:
      - alert-subscription
  /my_alerts:
    get:
      description: list all alerts a profile is subscribed to
      parameters:
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Alert'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: lists subscribed alerts for a single user
      tags:
      - alert
  /my_alerts/{alert_id}/read:
    post:
      description: |-
        marks an alert as read for a profile
        returning the updated alert
      parameters:
      - description: alert uuid
        in: path
        name: alert_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: marks an alert as read
      tags:
      - alert
  /my_alerts/{alert_id}/unread:
    post:
      description: |-
        marks an alert as unread based on provided profile ID and alert ID.
        returning the updated alert
      parameters:
      - description: alert uuid
        in: path
        name: alert_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: marks an alert as unread for a profile
      tags:
      - alert
  /my_profile:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - ClaimsOnly: []
      summary: gets profile for current authenticated user
      tags:
      - profile
  /my_projects:
    get:
      parameters:
      - description: role
        in: query
        name: role
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Project'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: lists projects where current profile is an admin or member with optional
        filter by project role
      tags:
      - project
  /my_tokens:
    post:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - ClaimsOnly: []
      summary: creates token for a profile
      tags:
      - profile
  /my_tokens/{token_id}:
    delete:
      parameters:
      - description: token uuid
        in: path
        name: token_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - ClaimsOnly: []
      summary: deletes a token for a profile
      tags:
      - profile
  /opendcs/sites:
    get:
      responses:
        "200":
          content:
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Site'
                type: array
          description: OK
        "400":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: "lists all instruments, represented as opendcs sites"
      tags:
      - opendcs
  /profiles:
    post:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - ClaimsOnly: []
      summary: creates a user profile
      tags:
      - profile
  /projects:
    get:
      parameters:
      - description: federal id
        in: query
        name: federal_id
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Project'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: lists all projects optionally filtered by federal id
      tags:
      - project
    post:
      parameters:
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              items:
                $ref: '#/components/schemas/Project'
              type: array
        description: project collection payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IDSlugName'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: accepts an array of instruments for bulk upload to the database
      tags:
      - project
      x-codegen-request-body-name: project_collection
  /projects/count:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCount'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: gets the total number of non-deleted projects in the system
      tags:
      - project
  /projects/{project_id}:
    delete:
      parameters:
      - description: project id
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: soft deletes a project
      tags:
      - project
    get:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: gets a single project
      tags:
      - project
    put:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Project'
        description: project payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: updates an existing project
      tags:
      - project
      x-codegen-request-body-name: project
  /projects/{project_id}/alert_configs:
    get:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AlertConfig'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: lists alert configs for a project
      tags:
      - alert-config
    post:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertConfig'
        description: alert config payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertConfig'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: creates one alert config
      tags:
      - alert-config
      x-codegen-request-body-name: alert_config
  /projects/{project_id}/alert_configs/{alert_config_id}:
    delete:
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: instrument uuid
        in: path
        name: alert_config_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AlertConfig'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: deletes an alert config
      tags:
      - alert-config
    get:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: alert config uuid
        in: path
        name: alert_config_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertConfig'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: gets a single alert
      tags:
      - alert-config
    put:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: alert config uuid
        in: path
        name: alert_config_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertConfig'
        description: alert config payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AlertConfig'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: updates an existing alert config
      tags:
      - alert-config
      x-codegen-request-body-name: alert_config
  /projects/{project_id}/collection_groups:
    get:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AlertConfig'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: lists instrument groups
      tags:
      - collection-groups
    post:
      description: lists alert configs for a single project optionally filtered by
        alert_type_id
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CollectionGroup'
        description: collection group payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CollectionGroup'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: creates a new collection group
      tags:
      - collection-groups
      x-codegen-request-body-name: collection_group
  /projects/{project_id}/collection_groups/{collection_group_id}:
    delete:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: collection group uuid
        in: path
        name: collection_group_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: deletes a collection group using the id of the collection group
      tags:
      - collection-groups
    get:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: collection group uuid
        in: path
        name: collection_group_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionGroupDetails'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: gets all data needed to render collection group form
      tags:
      - collection-groups
    put:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: collection group uuid
        in: path
        name: collection_group_id
        required: true
        schema:
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CollectionGroup'
        description: collection group payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionGroup'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: updates an existing collection group
      tags:
      - collection-groups
      x-codegen-request-body-name: collection_group
  /projects/{project_id}/collection_groups/{collection_group_id}/timeseries/{timeseries_id}:
    delete:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: collection group uuid
        in: path
        name: collection_group_id
        required: true
        schema:
          format: uuid
          type: string
      - description: timeseries uuid
        in: path
        name: timeseries_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: removes a timeseries from a collection group
      tags:
      - collection-groups
    post:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: collection group uuid
        in: path
        name: collection_group_id
        required: true
        schema:
          format: uuid
          type: string
      - description: timeseries uuid
        in: path
        name: timeseries_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: adds a timeseries to a collection group
      tags:
      - collection-groups
  /projects/{project_id}/district_rollup/evaluation_submittals:
    get:
      parameters:
      - description: project id
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DistrictRollup'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: lists monthly evaluation statistics for a district by project id
      tags:
      - district-rollup
  /projects/{project_id}/district_rollup/measurement_submittals:
    get:
      parameters:
      - description: project id
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DistrictRollup'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: lists monthly measurement statistics for a district by project id
      tags:
      - district-rollup
  /projects/{project_id}/evaluations:
    get:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Evaluation'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: lists evaluations for a single project optionally filtered by alert_config_id
      tags:
      - evaluation
    post:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Evaluation'
        description: evaluation payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evaluation'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: creates one evaluation
      tags:
      - evaluation
      x-codegen-request-body-name: evaluation
  /projects/{project_id}/evaluations/{evaluation_id}:
    delete:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: evaluation uuid
        in: path
        name: evaluation_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AlertConfig'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: deletes an evaluation
      tags:
      - evaluation
    get:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: evaluation uuid
        in: path
        name: evaluation_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evaluation'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: gets a single evaluation by id
      tags:
      - evaluation
    put:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: evaluation uuid
        in: path
        name: evaluation_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Evaluation'
        description: evaluation payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evaluation'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: updates an existing evaluation
      tags:
      - evaluation
      x-codegen-request-body-name: evaluation
  /projects/{project_id}/images:
    post:
      parameters:
      - description: project id
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: uploades a picture for a project
      tags:
      - project
  /projects/{project_id}/inclinometer_measurements:
    post:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/InclinometerMeasurementCollectionCollection'
        description: inclinometer measurement collections
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/InclinometerMeasurementCollection'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: creates or updates one or more inclinometer measurements
      tags:
      - measurement-inclinometer
      x-codegen-request-body-name: timeseries_measurement_collections
  /projects/{project_id}/instrument_groups:
    get:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/InstrumentGroup'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: lists instrument groups associated with a project
      tags:
      - project
  /projects/{project_id}/instruments:
    get:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Project'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: lists instruments associated with a project
      tags:
      - project
    post:
      parameters:
      - description: project id
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: instrument id
        in: path
        name: instrument_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              items:
                $ref: '#/components/schemas/Instrument'
              type: array
        description: instrument collection payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IDSlugName'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: accepts an array of instruments for bulk upload to the database
      tags:
      - instrument
      x-codegen-request-body-name: instrument
  /projects/{project_id}/instruments/assignments:
    put:
      description: must be Project (or Application) Admin of all existing instrument
        projects and project to be assigned
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: valid values are 'assign' or 'unassign'
        in: query
        name: action
        required: true
        schema:
          type: string
      - description: validate request without performing action
        in: query
        name: dry_run
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ProjectInstrumentAssignments'
        description: instrument uuids
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstrumentsValidation'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: updates multiple instrument assigments for a project
      tags:
      - instrument
      x-codegen-request-body-name: instrument_ids
  /projects/{project_id}/instruments/{instrument_id}:
    delete:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: instrument uuid
        in: path
        name: instrument_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: soft deletes an instrument
      tags:
      - instrument
    put:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: instrument uuid
        in: path
        name: instrument_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Instrument'
        description: instrument payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instrument'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: updates an existing instrument
      tags:
      - instrument
      x-codegen-request-body-name: instrument
  /projects/{project_id}/instruments/{instrument_id}/alert_configs:
    get:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: instrument uuid
        in: path
        name: instrument_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AlertConfig'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: lists alerts for a single instrument
      tags:
      - alert-config
  /projects/{project_id}/instruments/{instrument_id}/alert_configs/{alert_config_id}/subscribe:
    post:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: instrument uuid
        in: path
        name: instrument_id
        required: true
        schema:
          format: uuid
          type: string
      - description: alert config uuid
        in: path
        name: alert_config_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertSubscription'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: subscribes a profile to an alert
      tags:
      - alert-subscription
  /projects/{project_id}/instruments/{instrument_id}/alert_configs/{alert_config_id}/unsubscribe:
    post:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: instrument uuid
        in: path
        name: instrument_id
        required: true
        schema:
          format: uuid
          type: string
      - description: alert config uuid
        in: path
        name: alert_config_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: unsubscribes a profile to an alert
      tags:
      - alert-subscription
  /projects/{project_id}/instruments/{instrument_id}/alerts:
    get:
      description: list all alerts associated an instrument
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: instrument uuid
        in: path
        name: instrument_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Alert'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: lists alerts for a single instrument
      tags:
      - alert
  /projects/{project_id}/instruments/{instrument_id}/assignments:
    delete:
      description: must be Project Admin of project to be unassigned
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: instrument uuid
        in: path
        name: instrument_id
        required: true
        schema:
          format: uuid
          type: string
      - description: valid values are 'assign' or 'unassign'
        in: query
        name: action
        required: true
        schema:
          type: string
      - description: validate request without performing action
        in: query
        name: dry_run
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstrumentsValidation'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: unassigns an instrument from a project.
      tags:
      - instrument
    post:
      description: must be Project (or Application) Admin of all existing instrument
        projects and project to be assigned
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: instrument uuid
        in: path
        name: instrument_id
        required: true
        schema:
          format: uuid
          type: string
      - description: validate request without performing action
        in: query
        name: dry_run
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstrumentsValidation'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: assigns an instrument to a project.
      tags:
      - instrument
    put:
      description: must be Project (or Application) Admin of all existing instrument
        projects and project to be assigned
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: instrument uuid
        in: path
        name: instrument_id
        required: true
        schema:
          format: uuid
          type: string
      - description: valid values are 'assign' or 'unassign'
        in: query
        name: action
        required: true
        schema:
          type: string
      - description: validate request without performing action
        in: query
        name: dry_run
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/InstrumentProjectAssignments'
        description: project uuids
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstrumentsValidation'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: updates multiple project assignments for an instrument
      tags:
      - instrument
      x-codegen-request-body-name: project_ids
  /projects/{project_id}/instruments/{instrument_id}/constants:
    get:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: instrument uuid
        in: path
        name: instrument_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Timeseries'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: lists constants for a given instrument
      tags:
      - instrument-constant
    post:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: instrument uuid
        in: path
        name: instrument_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/TimeseriesCollectionItems'
        description: timeseries collection items payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Timeseries'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: creates instrument constants (i.e. timeseries)
      tags:
      - instrument-constant
      x-codegen-request-body-name: timeseries_collection_items
  /projects/{project_id}/instruments/{instrument_id}/constants/{timeseries_id}:
    delete:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: instrument uuid
        in: path
        name: instrument_id
        required: true
        schema:
          format: uuid
          type: string
      - description: timeseries uuid
        in: path
        name: timeseries_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: removes a timeseries as an instrument constant
      tags:
      - instrument-constant
  /projects/{project_id}/instruments/{instrument_id}/evaluations:
    get:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: instrument uuid
        in: path
        name: instrument_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Evaluation'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: lists evaluations for a single instrument
      tags:
      - evaluation
  /projects/{project_id}/instruments/{instrument_id}/geometry:
    put:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: instrument uuid
        in: path
        name: instrument_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Instrument'
        description: instrument payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instrument'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: updates the geometry of an instrument
      tags:
      - instrument
      x-codegen-request-body-name: instrument
  /projects/{project_id}/instruments/{instrument_id}/timeseries:
    get:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: instrument uuid
        in: path
        name: instrument_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Timeseries'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: lists timeseries for an instrument
      tags:
      - timeseries
  /projects/{project_id}/members:
    get:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectMembership'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: lists project members and their role information
      tags:
      - project-role
  /projects/{project_id}/members/{profile_id}/roles/{role_id}:
    delete:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: profile uuid
        in: path
        name: profile_id
        required: true
        schema:
          format: uuid
          type: string
      - description: role uuid
        in: path
        name: role_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: removes project members and their role information
      tags:
      - project-role
    post:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: profile uuid
        in: path
        name: profile_id
        required: true
        schema:
          format: uuid
          type: string
      - description: role uuid
        in: path
        name: role_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectMembership'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: adds project members and their role information
      tags:
      - project-role
  /projects/{project_id}/plot_configs:
    get:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PlotConfig'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: lists plot configs
      tags:
      - plot-config
  /projects/{project_id}/plot_configs/bullseye_plots:
    post:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PlotConfigBullseyePlot'
        description: plot config payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlotConfig'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: adds a bullseye plot configuration to a project
      tags:
      - plot-config
      x-codegen-request-body-name: plot_config
  /projects/{project_id}/plot_configs/bullseye_plots/{plot_configuration_id}:
    put:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: plot config uuid
        in: path
        name: plot_configuration_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PlotConfigBullseyePlot'
        description: plot config payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlotConfig'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: updates a bullseye plot configuration in a project
      tags:
      - plot-config
      x-codegen-request-body-name: plot_config
  /projects/{project_id}/plot_configs/bullseye_plots/{plot_configuration_id}/measurements:
    get:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: plot config uuid
        in: path
        name: plot_configuration_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PlotConfigMeasurementBullseyePlot'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: lists plot config measurements for a bullseye plot
      tags:
      - plot-config
  /projects/{project_id}/plot_configs/contour_plots:
    post:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PlotConfigContourPlot'
        description: plot config payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlotConfig'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: adds a plot configuration to a project
      tags:
      - plot-config
      x-codegen-request-body-name: plot_config
  /projects/{project_id}/plot_configs/contour_plots/{plot_configuration_id}:
    put:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: plot config uuid
        in: path
        name: plot_configuration_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PlotConfigContourPlot'
        description: plot config payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlotConfig'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: updates a plot configuration in a project
      tags:
      - plot-config
      x-codegen-request-body-name: plot_config
  /projects/{project_id}/plot_configs/contour_plots/{plot_configuration_id}/measurements:
    get:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: plot config uuid
        in: path
        name: plot_configuration_id
        required: true
        schema:
          format: uuid
          type: string
      - description: time
        in: query
        name: time
        required: true
        schema:
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregatePlotConfigMeasurementsContourPlot'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: gets plot config measurements for a contour plot at the specified time
      tags:
      - plot-config
  /projects/{project_id}/plot_configs/contour_plots/{plot_configuration_id}/times:
    get:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: plot config uuid
        in: path
        name: plot_configuration_id
        required: true
        schema:
          format: uuid
          type: string
      - description: after timestamp
        in: query
        name: after
        schema:
          type: string
      - description: before timestamp
        in: query
        name: before
        schema:
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: lists time parameters available for measurement qeries for a contour
        plot
      tags:
      - plot-config
  /projects/{project_id}/plot_configs/profile_plots:
    post:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PlotConfigProfilePlot'
        description: plot config payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlotConfig'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: adds a profile plot configuration to a project
      tags:
      - plot-config
      x-codegen-request-body-name: plot_config
  /projects/{project_id}/plot_configs/profile_plots/{plot_configuration_id}:
    put:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: plot config uuid
        in: path
        name: plot_configuration_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PlotConfigProfilePlot'
        description: plot config payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlotConfig'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: updates a profile plot configuration in a project
      tags:
      - plot-config
      x-codegen-request-body-name: plot_config
  /projects/{project_id}/plot_configs/scatter_line_plots:
    post:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PlotConfigScatterLinePlot'
        description: plot config payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlotConfig'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: adds a scatter-line plot configuration to a project
      tags:
      - plot-config
      x-codegen-request-body-name: plot_config
  /projects/{project_id}/plot_configs/scatter_line_plots/{plot_configuration_id}:
    put:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: plot config uuid
        in: path
        name: plot_configuration_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PlotConfigScatterLinePlot'
        description: plot config payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlotConfig'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: updates a scatter-line plot configuration in a project
      tags:
      - plot-config
      x-codegen-request-body-name: plot_config
  /projects/{project_id}/plot_configs/{plot_configuration_id}:
    delete:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: plot config uuid
        in: path
        name: plot_configuration_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: deletes a plot configuration in a project
      tags:
      - plot-config
    get:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: plot config uuid
        in: path
        name: plot_configuration_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlotConfig'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: gets a single plot configuration by id
      tags:
      - plot-config
  /projects/{project_id}/plot_configurations:
    get:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PlotConfig'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: lists plot configs
      tags:
      - plot-config
    post:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PlotConfigScatterLinePlot'
        description: plot config payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlotConfig'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: adds a scatter-line plot configuration to a project
      tags:
      - plot-config
      x-codegen-request-body-name: plot_config
  /projects/{project_id}/plot_configurations/{plot_configuration_id}:
    delete:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: plot config uuid
        in: path
        name: plot_configuration_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: deletes a plot configuration in a project
      tags:
      - plot-config
    get:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: plot config uuid
        in: path
        name: plot_configuration_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlotConfig'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: gets a single plot configuration by id
      tags:
      - plot-config
    put:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: plot config uuid
        in: path
        name: plot_configuration_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PlotConfigScatterLinePlot'
        description: plot config payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlotConfig'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: updates a scatter-line plot configuration in a project
      tags:
      - plot-config
      x-codegen-request-body-name: plot_config
  /projects/{project_id}/report_configs:
    get:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportConfig'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: lists all report configs for a project
      tags:
      - report-config
    post:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportConfig'
        description: report config payload
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportConfig'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: creates a report config
      tags:
      - report-config
      x-codegen-request-body-name: report_config
  /projects/{project_id}/report_configs/{report_config_id}:
    delete:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: report config uuid
        in: path
        name: report_config_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: updates a report config
      tags:
      - report-config
    put:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: report config uuid
        in: path
        name: report_config_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportConfig'
        description: report config payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: updates a report config
      tags:
      - report-config
      x-codegen-request-body-name: report_config
  /projects/{project_id}/report_configs/{report_config_id}/jobs:
    post:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: report config uuid
        in: path
        name: report_config_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportDownloadJob'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: starts a job to create a pdf report
      tags:
      - report-config
  /projects/{project_id}/report_configs/{report_config_id}/jobs/{job_id}:
    get:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: report config uuid
        in: path
        name: report_config_id
        required: true
        schema:
          format: uuid
          type: string
      - description: download job uuid
        in: path
        name: job_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportDownloadJob'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: gets a job that creates a pdf report
      tags:
      - report-config
  /projects/{project_id}/report_configs/{report_config_id}/jobs/{job_id}/downloads:
    get:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: report config uuid
        in: path
        name: report_config_id
        required: true
        schema:
          format: uuid
          type: string
      - description: job uuid
        in: path
        name: job_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/pdf:
              schema:
                format: binary
                type: string
          description: OK
        "400":
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: downloads a report for a given report job id
      tags:
      - report-config
  /projects/{project_id}/submittals:
    get:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: filter by missing projects only
        in: query
        name: missing
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Submittal'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: lists all submittals for a project
      tags:
      - submittal
  /projects/{project_id}/survey123:
    get:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Survey123'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: lists Survey123 connections for a project
      tags:
      - survey123
    post:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Survey123'
        description: survey123 payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: creates a Survey123 connection with equivalency table mappings
      tags:
      - survey123
      x-codegen-request-body-name: survey123
  /projects/{project_id}/survey123/{survey123_id}:
    delete:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: survey123 uuid
        in: path
        name: survey123_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: deletes a Survey123 connection with equivalency table mappings
      tags:
      - survey123
    put:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: survey123 uuid
        in: path
        name: survey123_id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Survey123'
        description: survey123 payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: updates a Survey123 connection with equivalency table mappings
      tags:
      - survey123
      x-codegen-request-body-name: survey123
  /projects/{project_id}/survey123/{survey123_id}/previews:
    get:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: survey123 uuid
        in: path
        name: survey123_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: gets the most recent Survey123 raw json payload sent from the webhook
        API
      tags:
      - survey123
  /projects/{project_id}/timeseries:
    get:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Timeseries'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: lists all timeseries for a single project
      tags:
      - timeseries
  /projects/{project_id}/timeseries_measurements:
    post:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeseriesMeasurementCollectionCollection'
        description: array of timeseries measurement collections
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MeasurementCollection'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: creates or updates one or more timeseries measurements
      tags:
      - measurement
      x-codegen-request-body-name: timeseries_measurement_collections
    put:
      parameters:
      - description: project uuid
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
      - description: after timestamp
        in: query
        name: after
        schema:
          format: date-time
          type: string
      - description: before timestamp
        in: query
        name: before
        schema:
          format: date-time
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/TimeseriesMeasurementCollectionCollection'
        description: array of timeseries measurement collections
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MeasurementCollection'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: overwrites all measurements witin date range with the supplied payload
      tags:
      - measurement
      x-codegen-request-body-name: timeseries_measurement_collections
  /projects/{project_slug}/images/{uri_path}:
    get:
      parameters:
      - description: project abbr
        in: path
        name: project_slug
        required: true
        schema:
          type: string
      - description: uri path of requested resource
        in: path
        name: uri_path
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            image/jpeg:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            image/jpeg:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            image/jpeg:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: "serves media, files, etc for a given project"
      tags:
      - media
  /report_configs/{report_config_id}/plot_configs:
    get:
      parameters:
      - description: report config uuid
        in: path
        name: report_config_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportConfigWithPlotConfigs'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: Lists all plot configs for a report config
      tags:
      - report-config
  /report_jobs/{job_id}:
    put:
      parameters:
      - description: download job uuid
        in: path
        name: job_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportDownloadJob'
        description: report download job payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: updates a job that creates a pdf report
      tags:
      - report-config
      x-codegen-request-body-name: report_download_job
  /search/{entity}:
    get:
      parameters:
      - description: "entity to search (i.e. projects, etc.)"
        in: path
        name: entity
        required: true
        schema:
          type: string
      - description: search string
        in: query
        name: q
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SearchResult'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: allows searching using a string on different entities
      tags:
      - search
  /submittals/{submittal_id}/verify_missing:
    put:
      parameters:
      - description: submittal uuid
        in: path
        name: submittal_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: verifies the specified submittal is "missing" and will not be completed
      tags:
      - submittal
  /timeseries:
    post:
      parameters:
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/TimeseriesCollectionItems'
        description: timeseries collection items payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  additionalProperties:
                    type: string
                  type: object
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: creates one or more timeseries
      tags:
      - timeseries
      x-codegen-request-body-name: timeseries_collection_items
  /timeseries/{timeseries_id}:
    delete:
      parameters:
      - description: timeseries uuid
        in: path
        name: timeseries_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: deletes a single timeseries by id
      tags:
      - timeseries
    get:
      parameters:
      - description: timeseries uuid
        in: path
        name: timeseries_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeseries'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: gets a single timeseries by id
      tags:
      - timeseries
    put:
      parameters:
      - description: timeseries uuid
        in: path
        name: timeseries_id
        required: true
        schema:
          format: uuid
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Timeseries'
        description: timeseries payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: updates a single timeseries by id
      tags:
      - timeseries
      x-codegen-request-body-name: timeseries
  /timeseries/{timeseries_id}/inclinometer_measurements:
    delete:
      parameters:
      - description: timeseries uuid
        in: path
        name: timeseries_id
        required: true
        schema:
          format: uuid
          type: string
      - description: timestamp of measurement to delete
        in: query
        name: time
        required: true
        schema:
          format: date-time
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: deletes a single inclinometer measurement by timestamp
      tags:
      - measurement-inclinometer
    get:
      parameters:
      - description: timeseries uuid
        in: path
        name: timeseries_id
        required: true
        schema:
          format: uuid
          type: string
      - description: after timestamp
        in: query
        name: after
        schema:
          format: date-time
          type: string
      - description: before timestamp
        in: query
        name: before
        schema:
          format: date-time
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InclinometerMeasurementCollection'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: lists all measurements for an inclinometer
      tags:
      - measurement-inclinometer
  /timeseries/{timeseries_id}/measurements:
    delete:
      parameters:
      - description: timeseries uuid
        in: path
        name: timeseries_id
        required: true
        schema:
          format: uuid
          type: string
      - description: timestamp of measurement to delete
        in: query
        name: time
        required: true
        schema:
          format: date-time
          type: string
      - description: api key
        in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      security:
      - Bearer: []
      summary: deletes a single timeseries measurement by timestamp
      tags:
      - measurement
    get:
      parameters:
      - description: timeseries uuid
        in: path
        name: timeseries_id
        required: true
        schema:
          format: uuid
          type: string
      - description: after time
        in: query
        name: after
        schema:
          format: date-time
          type: string
      - description: before time
        in: query
        name: before
        schema:
          format: date-time
          type: string
      - description: downsample threshold
        in: query
        name: threshold
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasurementCollection'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: lists timeseries by timeseries uuid
      tags:
      - timeseries
  /timeseries_measurements:
    post:
      parameters:
      - description: api key
        in: query
        name: key
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/TimeseriesMeasurementCollectionCollection'
        description: array of timeseries measurement collections
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MeasurementCollection'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Internal Server Error
      summary: creates or updates one or more timeseries measurements
      tags:
      - measurement
      x-codegen-request-body-name: timeseries_measurement_collections
  /units:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Unit'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo.HTTPError'
          description: Bad Request
      summary: lists the available units
      tags:
      - unit
components:
  schemas:
    echo.HTTPError:
      example:
        message: "{}"
      properties:
        message:
          type: object
      type: object
    geojson.Geometry:
      example:
        geometries:
        - null
        - null
        coordinates: "{}"
        type: type
      properties:
        coordinates:
          type: object
        geometries:
          items:
            $ref: '#/components/schemas/geojson.Geometry'
          type: array
        type:
          type: string
      type: object
    AggregatePlotConfigMeasurementsContourPlot:
      example:
        x:
        - 0.8008281904610115
        - 0.8008281904610115
        "y":
        - 6.027456183070403
        - 6.027456183070403
        z:
        - 1.4658129805029452
        - 1.4658129805029452
      properties:
        x:
          items:
            type: number
          type: array
        "y":
          items:
            type: number
          type: array
        z:
          items:
            type: number
          type: array
      type: object
    Alert:
      example:
        instruments:
        - instrument_name: instrument_name
          instrument_id: instrument_id
        - instrument_name: instrument_name
          instrument_id: instrument_id
        read: true
        alert_config_id: alert_config_id
        project_id: project_id
        name: name
        id: id
        body: body
        create_date: create_date
        project_name: project_name
      properties:
        alert_config_id:
          type: string
        body:
          type: string
        create_date:
          type: string
        id:
          type: string
        instruments:
          items:
            $ref: '#/components/schemas/AlertConfigInstrument'
          type: array
        name:
          type: string
        project_id:
          type: string
        project_name:
          type: string
        read:
          type: boolean
      type: object
    AlertConfig:
      example:
        updater_username: updater_username
        alert_type_id: alert_type_id
        creator_username: creator_username
        remind_interval: remind_interval
        body: body
        project_name: project_name
        alert_type: alert_type
        update_date: update_date
        instruments:
        - instrument_name: instrument_name
          instrument_id: instrument_id
        - instrument_name: instrument_name
          instrument_id: instrument_id
        project_id: project_id
        last_checked: last_checked
        mute_consecutive_alerts: true
        creator_id: creator_id
        last_reminded: last_reminded
        name: name
        updater_id: updater_id
        schedule_interval: schedule_interval
        id: id
        alert_email_subscriptions:
        - user_type: user_type
          id: id
          email: email
          username: username
        - user_type: user_type
          id: id
          email: email
          username: username
        create_date: create_date
        warning_interval: warning_interval
        start_date: start_date
      properties:
        alert_email_subscriptions:
          items:
            $ref: '#/components/schemas/EmailAutocompleteResult'
          type: array
        alert_type:
          type: string
        alert_type_id:
          type: string
        body:
          type: string
        create_date:
          type: string
        creator_id:
          type: string
        creator_username:
          type: string
        id:
          type: string
        instruments:
          items:
            $ref: '#/components/schemas/AlertConfigInstrument'
          type: array
        last_checked:
          type: string
        last_reminded:
          type: string
        mute_consecutive_alerts:
          type: boolean
        name:
          type: string
        project_id:
          type: string
        project_name:
          type: string
        remind_interval:
          type: string
        schedule_interval:
          type: string
        start_date:
          type: string
        update_date:
          type: string
        updater_id:
          type: string
        updater_username:
          type: string
        warning_interval:
          type: string
      type: object
    AlertConfigInstrument:
      example:
        instrument_name: instrument_name
        instrument_id: instrument_id
      properties:
        instrument_id:
          type: string
        instrument_name:
          type: string
      type: object
    AlertSubscription:
      example:
        alert_config_id: alert_config_id
        profile_id: profile_id
        mute_ui: true
        id: id
        mute_notify: true
      properties:
        alert_config_id:
          type: string
        id:
          type: string
        mute_notify:
          type: boolean
        mute_ui:
          type: boolean
        profile_id:
          type: string
      type: object
    AwareParameter:
      example:
        id: id
        unit_id: unit_id
        key: key
        parameter_id: parameter_id
      properties:
        id:
          type: string
        key:
          type: string
        parameter_id:
          type: string
        unit_id:
          type: string
      type: object
    AwarePlatformParameterConfig:
      example:
        aware_parameters:
          key: aware_parameters
        instrument_id: instrument_id
        aware_id: aware_id
      properties:
        aware_id:
          type: string
        aware_parameters:
          additionalProperties:
            type: string
          type: object
        instrument_id:
          type: string
      type: object
    CalculatedTimeseries:
      example:
        formula_name: formula_name
        formula: formula
        id: id
        instrument_id: instrument_id
        unit_id: unit_id
        slug: slug
        parameter_id: parameter_id
      properties:
        formula:
          type: string
        formula_name:
          type: string
        id:
          type: string
        instrument_id:
          type: string
        parameter_id:
          type: string
        slug:
          type: string
        unit_id:
          type: string
      type: object
    CollectionGroup:
      example:
        updater_username: updater_username
        project_id: project_id
        creator_username: creator_username
        creator_id: creator_id
        name: name
        updater_id: updater_id
        id: id
        create_date: create_date
        slug: slug
        update_date: update_date
      properties:
        create_date:
          type: string
        creator_id:
          type: string
        creator_username:
          type: string
        id:
          type: string
        name:
          type: string
        project_id:
          type: string
        slug:
          type: string
        update_date:
          type: string
        updater_id:
          type: string
        updater_username:
          type: string
      type: object
    CollectionGroupDetails:
      example:
        updater_username: updater_username
        timeseries:
        - values:
          - annotation: annotation
            validated: true
            masked: true
            time: time
            error: error
            value: 0.8008281904610115
          - annotation: annotation
            validated: true
            masked: true
            time: time
            error: error
            value: 0.8008281904610115
          instrument: instrument
          instrument_id: instrument_id
          unit: unit
          parameter: parameter
          name: name
          variable: variable
          latest_value: 0.8008281904610115
          id: id
          instrument_slug: instrument_slug
          is_computed: true
          latest_time: latest_time
          unit_id: unit_id
          slug: slug
          parameter_id: parameter_id
        - values:
          - annotation: annotation
            validated: true
            masked: true
            time: time
            error: error
            value: 0.8008281904610115
          - annotation: annotation
            validated: true
            masked: true
            time: time
            error: error
            value: 0.8008281904610115
          instrument: instrument
          instrument_id: instrument_id
          unit: unit
          parameter: parameter
          name: name
          variable: variable
          latest_value: 0.8008281904610115
          id: id
          instrument_slug: instrument_slug
          is_computed: true
          latest_time: latest_time
          unit_id: unit_id
          slug: slug
          parameter_id: parameter_id
        project_id: project_id
        creator_username: creator_username
        creator_id: creator_id
        name: name
        updater_id: updater_id
        id: id
        create_date: create_date
        slug: slug
        update_date: update_date
      properties:
        create_date:
          type: string
        creator_id:
          type: string
        creator_username:
          type: string
        id:
          type: string
        name:
          type: string
        project_id:
          type: string
        slug:
          type: string
        timeseries:
          items:
            $ref: '#/components/schemas/collectionGroupDetailsTimeseries'
          type: array
        update_date:
          type: string
        updater_id:
          type: string
        updater_username:
          type: string
      type: object
    Datalogger:
      example:
        updater_username: updater_username
        creator_username: creator_username
        model_id: model_id
        update_date: update_date
        tables:
        - id: id
          table_name: table_name
        - id: id
          table_name: table_name
        project_id: project_id
        creator_id: creator_id
        name: name
        updater_id: updater_id
        model: model
        id: id
        sn: sn
        create_date: create_date
        errors:
        - errors
        - errors
        slug: slug
      properties:
        create_date:
          type: string
        creator_id:
          type: string
        creator_username:
          type: string
        errors:
          items:
            type: string
          type: array
        id:
          type: string
        model:
          type: string
        model_id:
          type: string
        name:
          type: string
        project_id:
          type: string
        slug:
          type: string
        sn:
          type: string
        tables:
          items:
            $ref: '#/components/schemas/DataloggerTable'
          type: array
        update_date:
          type: string
        updater_id:
          type: string
        updater_username:
          type: string
      type: object
    DataloggerEquivalencyTable:
      example:
        datalogger_table_id: datalogger_table_id
        datalogger_table_name: datalogger_table_name
        rows:
        - timeseries_id: timeseries_id
          id: id
          display_name: display_name
          instrument_id: instrument_id
          field_name: field_name
        - timeseries_id: timeseries_id
          id: id
          display_name: display_name
          instrument_id: instrument_id
          field_name: field_name
        datalogger_id: datalogger_id
      properties:
        datalogger_id:
          type: string
        datalogger_table_id:
          type: string
        datalogger_table_name:
          type: string
        rows:
          items:
            $ref: '#/components/schemas/DataloggerEquivalencyTableRow'
          type: array
      type: object
    DataloggerEquivalencyTableRow:
      example:
        timeseries_id: timeseries_id
        id: id
        display_name: display_name
        instrument_id: instrument_id
        field_name: field_name
      properties:
        display_name:
          type: string
        field_name:
          type: string
        id:
          type: string
        instrument_id:
          type: string
        timeseries_id:
          type: string
      type: object
    DataloggerTable:
      example:
        id: id
        table_name: table_name
      properties:
        id:
          type: string
        table_name:
          type: string
      type: object
    DataloggerTablePreview:
      example:
        preview:
          bytes:
          - 0
          - 0
          status: null
        datalogger_table_id: datalogger_table_id
        update_date: update_date
      properties:
        datalogger_table_id:
          type: string
        preview:
          $ref: '#/components/schemas/pgtype.JSON'
        update_date:
          type: string
      type: object
    DataloggerWithKey:
      example:
        updater_username: updater_username
        creator_username: creator_username
        model_id: model_id
        update_date: update_date
        tables:
        - id: id
          table_name: table_name
        - id: id
          table_name: table_name
        project_id: project_id
        creator_id: creator_id
        name: name
        updater_id: updater_id
        model: model
        id: id
        sn: sn
        create_date: create_date
        errors:
        - errors
        - errors
        key: key
        slug: slug
      properties:
        create_date:
          type: string
        creator_id:
          type: string
        creator_username:
          type: string
        errors:
          items:
            type: string
          type: array
        id:
          type: string
        key:
          type: string
        model:
          type: string
        model_id:
          type: string
        name:
          type: string
        project_id:
          type: string
        slug:
          type: string
        sn:
          type: string
        tables:
          items:
            $ref: '#/components/schemas/DataloggerTable'
          type: array
        update_date:
          type: string
        updater_id:
          type: string
        updater_username:
          type: string
      type: object
    District:
      example:
        office_id: office_id
        agency: agency
        initials: initials
        division_initials: division_initials
        division_name: division_name
        name: name
        id: id
      properties:
        agency:
          type: string
        division_initials:
          type: string
        division_name:
          type: string
        id:
          type: string
        initials:
          type: string
        name:
          type: string
        office_id:
          type: string
      type: object
    DistrictRollup:
      example:
        expected_total_submittals: 6
        office_id: office_id
        alert_type_id: alert_type_id
        month: month
        project_id: project_id
        red_submittals: 5
        green_submittals: 1
        yellow_submittals: 5
        actual_total_submittals: 0
        district_initials: district_initials
        project_name: project_name
      properties:
        actual_total_submittals:
          type: integer
        alert_type_id:
          type: string
        district_initials:
          type: string
        expected_total_submittals:
          type: integer
        green_submittals:
          type: integer
        month:
          type: string
        office_id:
          type: string
        project_id:
          type: string
        project_name:
          type: string
        red_submittals:
          type: integer
        yellow_submittals:
          type: integer
      type: object
    Domain:
      example:
        description: description
        id: id
        value: value
        group: group
      properties:
        description:
          type: string
        group:
          type: string
        id:
          type: string
        value:
          type: string
      type: object
    DomainGroupOption:
      properties:
        description:
          type: string
        id:
          type: string
        value:
          type: string
      type: object
    DomainMap:
      additionalProperties:
        items:
          $ref: '#/components/schemas/DomainGroupOption'
        type: array
      type: object
    EmailAutocompleteResult:
      example:
        user_type: user_type
        id: id
        email: email
        username: username
      properties:
        email:
          type: string
        id:
          type: string
        user_type:
          type: string
        username:
          type: string
      type: object
    Evaluation:
      example:
        end_date: end_date
        updater_username: updater_username
        alert_config_id: alert_config_id
        creator_username: creator_username
        alert_config_name: alert_config_name
        body: body
        project_name: project_name
        submittal_id: submittal_id
        update_date: update_date
        instruments:
        - instrument_name: instrument_name
          instrument_id: instrument_id
        - instrument_name: instrument_name
          instrument_id: instrument_id
        project_id: project_id
        creator_id: creator_id
        name: name
        updater_id: updater_id
        id: id
        create_date: create_date
        start_date: start_date
      properties:
        alert_config_id:
          type: string
        alert_config_name:
          type: string
        body:
          type: string
        create_date:
          type: string
        creator_id:
          type: string
        creator_username:
          type: string
        end_date:
          type: string
        id:
          type: string
        instruments:
          items:
            $ref: '#/components/schemas/EvaluationInstrument'
          type: array
        name:
          type: string
        project_id:
          type: string
        project_name:
          type: string
        start_date:
          type: string
        submittal_id:
          type: string
        update_date:
          type: string
        updater_id:
          type: string
        updater_username:
          type: string
      type: object
    EvaluationInstrument:
      example:
        instrument_name: instrument_name
        instrument_id: instrument_id
      properties:
        instrument_id:
          type: string
        instrument_name:
          type: string
      type: object
    Geometry:
      example:
        geometries:
        - geometries:
          - null
          - null
          coordinates: "{}"
          type: type
        - geometries:
          - null
          - null
          coordinates: "{}"
          type: type
        coordinates: "{}"
        type: type
      properties:
        coordinates:
          type: object
        geometries:
          items:
            $ref: '#/components/schemas/geojson.Geometry'
          type: array
        type:
          type: string
      type: object
    Heartbeat:
      example:
        time: time
      properties:
        time:
          type: string
      type: object
    Home:
      example:
        new_instruments_7d: 1
        project_count: 5
        instrument_group_count: 6
        new_measurements_2h: 5
        instrument_count: 0
      properties:
        instrument_count:
          type: integer
        instrument_group_count:
          type: integer
        new_instruments_7d:
          type: integer
        new_measurements_2h:
          type: integer
        project_count:
          type: integer
      type: object
    IDSlugName:
      example:
        name: name
        id: id
        slug: slug
      properties:
        id:
          type: string
        name:
          type: string
        slug:
          type: string
      type: object
    InclinometerMeasurement:
      example:
        creator: creator
        values:
        - 0
        - 0
        time: time
        create_date: create_date
      properties:
        create_date:
          type: string
        creator:
          type: string
        time:
          type: string
        values:
          items:
            type: integer
          type: array
      type: object
    InclinometerMeasurementCollection:
      example:
        timeseries_id: timeseries_id
        inclinometers:
        - creator: creator
          values:
          - 0
          - 0
          time: time
          create_date: create_date
        - creator: creator
          values:
          - 0
          - 0
          time: time
          create_date: create_date
      properties:
        inclinometers:
          items:
            $ref: '#/components/schemas/InclinometerMeasurement'
          type: array
        timeseries_id:
          type: string
      type: object
    InclinometerMeasurementCollectionCollection:
      example:
        items:
        - timeseries_id: timeseries_id
          inclinometers:
          - creator: creator
            values:
            - 0
            - 0
            time: time
            create_date: create_date
          - creator: creator
            values:
            - 0
            - 0
            time: time
            create_date: create_date
        - timeseries_id: timeseries_id
          inclinometers:
          - creator: creator
            values:
            - 0
            - 0
            time: time
            create_date: create_date
          - creator: creator
            values:
            - 0
            - 0
            time: time
            create_date: create_date
      properties:
        items:
          items:
            $ref: '#/components/schemas/InclinometerMeasurementCollection'
          type: array
      type: object
    InclinometerMeasurementCollectionLean:
      example:
        timeseries_id: timeseries_id
        items:
        - null
        - null
      properties:
        items:
          items:
            $ref: '#/components/schemas/InclinometerMeasurementLean'
          type: array
        timeseries_id:
          type: string
      type: object
    InclinometerMeasurementLean:
      additionalProperties:
        items:
          type: integer
        type: array
      type: object
    Instrument:
      example:
        projects:
        - name: name
          id: id
          slug: slug
        - name: name
          id: id
          slug: slug
        alert_configs:
        - alert_configs
        - alert_configs
        icon: icon
        type: type
        aware_id: aware_id
        status_id: status_id
        opts:
          key: ""
        station: 6
        constants:
        - constants
        - constants
        id: id
        status_time: status_time
        create_date: create_date
        slug: slug
        updater_username: updater_username
        offset: 0
        creator_username: creator_username
        type_id: type_id
        usgs_id: usgs_id
        groups:
        - groups
        - groups
        update_date: update_date
        creator_id: creator_id
        name: name
        updater_id: updater_id
        geometry:
          geometries:
          - geometries:
            - null
            - null
            coordinates: "{}"
            type: type
          - geometries:
            - null
            - null
            coordinates: "{}"
            type: type
          coordinates: "{}"
          type: type
        nid_id: nid_id
        status: status
      properties:
        alert_configs:
          items:
            type: string
          type: array
        aware_id:
          type: string
        constants:
          items:
            type: string
          type: array
        create_date:
          type: string
        creator_id:
          type: string
        creator_username:
          type: string
        geometry:
          $ref: '#/components/schemas/Geometry'
        groups:
          items:
            type: string
          type: array
        icon:
          type: string
        id:
          type: string
        name:
          type: string
        nid_id:
          type: string
        offset:
          type: integer
        opts:
          additionalProperties: true
          type: object
        projects:
          items:
            $ref: '#/components/schemas/IDSlugName'
          type: array
        slug:
          type: string
        station:
          type: integer
        status:
          type: string
        status_id:
          type: string
        status_time:
          type: string
        type:
          type: string
        type_id:
          type: string
        update_date:
          type: string
        updater_id:
          type: string
        updater_username:
          type: string
        usgs_id:
          type: string
      type: object
    InstrumentCount:
      example:
        instrument_count: 0
      properties:
        instrument_count:
          type: integer
      type: object
    InstrumentGroup:
      example:
        updater_username: updater_username
        creator_username: creator_username
        description: description
        instrument_count: 0
        update_date: update_date
        project_id: project_id
        creator_id: creator_id
        name: name
        timeseries_count: 6
        updater_id: updater_id
        id: id
        create_date: create_date
        slug: slug
      properties:
        create_date:
          type: string
        creator_id:
          type: string
        creator_username:
          type: string
        description:
          type: string
        id:
          type: string
        instrument_count:
          type: integer
        name:
          type: string
        project_id:
          type: string
        slug:
          type: string
        timeseries_count:
          type: integer
        update_date:
          type: string
        updater_id:
          type: string
        updater_username:
          type: string
      type: object
    InstrumentNote:
      example:
        updater_username: updater_username
        creator_username: creator_username
        creator_id: creator_id
        updater_id: updater_id
        id: id
        time: time
        body: body
        create_date: create_date
        title: title
        instrument_id: instrument_id
        update_date: update_date
      properties:
        body:
          type: string
        create_date:
          type: string
        creator_id:
          type: string
        creator_username:
          type: string
        id:
          type: string
        instrument_id:
          type: string
        time:
          type: string
        title:
          type: string
        update_date:
          type: string
        updater_id:
          type: string
        updater_username:
          type: string
      type: object
    InstrumentNoteCollection:
      example:
        items:
        - updater_username: updater_username
          creator_username: creator_username
          creator_id: creator_id
          updater_id: updater_id
          id: id
          time: time
          body: body
          create_date: create_date
          title: title
          instrument_id: instrument_id
          update_date: update_date
        - updater_username: updater_username
          creator_username: creator_username
          creator_id: creator_id
          updater_id: updater_id
          id: id
          time: time
          body: body
          create_date: create_date
          title: title
          instrument_id: instrument_id
          update_date: update_date
      properties:
        items:
          items:
            $ref: '#/components/schemas/InstrumentNote'
          type: array
      type: object
    InstrumentProjectAssignments:
      example:
        project_ids:
        - project_ids
        - project_ids
      properties:
        project_ids:
          items:
            type: string
          type: array
      type: object
    InstrumentStatus:
      example:
        status_id: status_id
        id: id
        time: time
        status: status
      properties:
        id:
          type: string
        status:
          type: string
        status_id:
          type: string
        time:
          type: string
      type: object
    InstrumentStatusCollection:
      example:
        items:
        - status_id: status_id
          id: id
          time: time
          status: status
        - status_id: status_id
          id: id
          time: time
          status: status
      properties:
        items:
          items:
            $ref: '#/components/schemas/InstrumentStatus'
          type: array
      type: object
    InstrumentsValidation:
      example:
        is_valid: true
        errors:
        - errors
        - errors
      properties:
        errors:
          items:
            type: string
          type: array
        is_valid:
          type: boolean
      type: object
    IpiMeasurements:
      example:
        time: time
        measurements:
        - elevation: 6.027456183070403
          temp: 5.637376656633329
          inc_dev: 1.4658129805029452
          tilt: 2.3021358869347655
          segment_id: 5
          cum_dev: 0.8008281904610115
        - elevation: 6.027456183070403
          temp: 5.637376656633329
          inc_dev: 1.4658129805029452
          tilt: 2.3021358869347655
          segment_id: 5
          cum_dev: 0.8008281904610115
      properties:
        measurements:
          items:
            $ref: '#/components/schemas/IpiSegmentMeasurement'
          type: array
        time:
          type: string
      type: object
    IpiSegment:
      example:
        temp_timeseries_id: temp_timeseries_id
        length: 6.027456183070403
        tilt_timeseries_id: tilt_timeseries_id
        id: 0
        inc_dev_timeseries_id: inc_dev_timeseries_id
        instrument_id: instrument_id
        length_timeseries_id: length_timeseries_id
      properties:
        id:
          type: integer
        inc_dev_timeseries_id:
          type: string
        instrument_id:
          type: string
        length:
          type: number
        length_timeseries_id:
          type: string
        temp_timeseries_id:
          type: string
        tilt_timeseries_id:
          type: string
      type: object
    IpiSegmentMeasurement:
      example:
        elevation: 6.027456183070403
        temp: 5.637376656633329
        inc_dev: 1.4658129805029452
        tilt: 2.3021358869347655
        segment_id: 5
        cum_dev: 0.8008281904610115
      properties:
        cum_dev:
          type: number
        elevation:
          type: number
        inc_dev:
          type: number
        segment_id:
          type: integer
        temp:
          type: number
        tilt:
          type: number
      type: object
    Measurement:
      example:
        annotation: annotation
        validated: true
        masked: true
        time: time
        error: error
        value: 0.8008281904610115
      properties:
        annotation:
          type: string
        error:
          type: string
        masked:
          type: boolean
        time:
          type: string
        validated:
          type: boolean
        value:
          type: number
      type: object
    MeasurementCollection:
      example:
        timeseries_id: timeseries_id
        items:
        - annotation: annotation
          validated: true
          masked: true
          time: time
          error: error
          value: 0.8008281904610115
        - annotation: annotation
          validated: true
          masked: true
          time: time
          error: error
          value: 0.8008281904610115
      properties:
        items:
          items:
            $ref: '#/components/schemas/Measurement'
          type: array
        timeseries_id:
          type: string
      type: object
    MeasurementCollectionLean:
      example:
        timeseries_id: timeseries_id
        items:
        - null
        - null
      properties:
        items:
          items:
            $ref: '#/components/schemas/MeasurementLean'
          type: array
        timeseries_id:
          type: string
      type: object
    MeasurementLean:
      additionalProperties:
        type: number
      type: object
    Opts:
      additionalProperties: true
      type: object
    PlotConfig:
      example:
        date_range: date_range
        updater_username: updater_username
        creator_username: creator_username
        display:
          key: ""
        show_comments: true
        report_configs:
        - name: name
          id: id
          slug: slug
        - name: name
          id: id
          slug: slug
        auto_range: true
        show_masked: true
        threshold: 0
        update_date: update_date
        show_nonvalidated: true
        project_id: project_id
        creator_id: creator_id
        name: name
        updater_id: updater_id
        id: id
        create_date: create_date
        plot_type: plot_type
        slug: slug
      properties:
        auto_range:
          type: boolean
        create_date:
          type: string
        creator_id:
          type: string
        creator_username:
          type: string
        date_range:
          type: string
        display:
          additionalProperties: true
          type: object
        id:
          type: string
        name:
          type: string
        plot_type:
          type: string
        project_id:
          type: string
        report_configs:
          items:
            $ref: '#/components/schemas/IDSlugName'
          type: array
        show_comments:
          type: boolean
        show_masked:
          type: boolean
        show_nonvalidated:
          type: boolean
        slug:
          type: string
        threshold:
          type: integer
        update_date:
          type: string
        updater_id:
          type: string
        updater_username:
          type: string
      type: object
    PlotConfigBullseyePlot:
      example:
        date_range: date_range
        updater_username: updater_username
        creator_username: creator_username
        display:
          y_axis_timeseries_id: y_axis_timeseries_id
          x_axis_timeseries_id: x_axis_timeseries_id
        show_comments: true
        report_configs:
        - name: name
          id: id
          slug: slug
        - name: name
          id: id
          slug: slug
        auto_range: true
        show_masked: true
        threshold: 0
        update_date: update_date
        show_nonvalidated: true
        project_id: project_id
        creator_id: creator_id
        name: name
        updater_id: updater_id
        id: id
        create_date: create_date
        plot_type: plot_type
        slug: slug
      properties:
        auto_range:
          type: boolean
        create_date:
          type: string
        creator_id:
          type: string
        creator_username:
          type: string
        date_range:
          type: string
        display:
          $ref: '#/components/schemas/PlotConfigBullseyePlotDisplay'
        id:
          type: string
        name:
          type: string
        plot_type:
          type: string
        project_id:
          type: string
        report_configs:
          items:
            $ref: '#/components/schemas/IDSlugName'
          type: array
        show_comments:
          type: boolean
        show_masked:
          type: boolean
        show_nonvalidated:
          type: boolean
        slug:
          type: string
        threshold:
          type: integer
        update_date:
          type: string
        updater_id:
          type: string
        updater_username:
          type: string
      type: object
    PlotConfigBullseyePlotDisplay:
      example:
        y_axis_timeseries_id: y_axis_timeseries_id
        x_axis_timeseries_id: x_axis_timeseries_id
      properties:
        x_axis_timeseries_id:
          type: string
        y_axis_timeseries_id:
          type: string
      type: object
    PlotConfigContourPlot:
      example:
        date_range: date_range
        updater_username: updater_username
        creator_username: creator_username
        display:
          contour_smoothing: true
          gradient_smoothing: true
          locf_backfill: locf_backfill
          timeseries_ids:
          - timeseries_ids
          - timeseries_ids
          show_labels: true
          time: time
        show_comments: true
        report_configs:
        - name: name
          id: id
          slug: slug
        - name: name
          id: id
          slug: slug
        auto_range: true
        show_masked: true
        threshold: 0
        update_date: update_date
        show_nonvalidated: true
        project_id: project_id
        creator_id: creator_id
        name: name
        updater_id: updater_id
        id: id
        create_date: create_date
        plot_type: plot_type
        slug: slug
      properties:
        auto_range:
          type: boolean
        create_date:
          type: string
        creator_id:
          type: string
        creator_username:
          type: string
        date_range:
          type: string
        display:
          $ref: '#/components/schemas/PlotConfigContourPlotDisplay'
        id:
          type: string
        name:
          type: string
        plot_type:
          type: string
        project_id:
          type: string
        report_configs:
          items:
            $ref: '#/components/schemas/IDSlugName'
          type: array
        show_comments:
          type: boolean
        show_masked:
          type: boolean
        show_nonvalidated:
          type: boolean
        slug:
          type: string
        threshold:
          type: integer
        update_date:
          type: string
        updater_id:
          type: string
        updater_username:
          type: string
      type: object
    PlotConfigContourPlotDisplay:
      example:
        contour_smoothing: true
        gradient_smoothing: true
        locf_backfill: locf_backfill
        timeseries_ids:
        - timeseries_ids
        - timeseries_ids
        show_labels: true
        time: time
      properties:
        contour_smoothing:
          type: boolean
        gradient_smoothing:
          type: boolean
        locf_backfill:
          type: string
        show_labels:
          type: boolean
        time:
          type: string
        timeseries_ids:
          items:
            type: string
          type: array
      type: object
    PlotConfigMeasurementBullseyePlot:
      example:
        x: 0.8008281904610115
        "y": 6.027456183070403
        time: time
      properties:
        time:
          type: string
        x:
          type: number
        "y":
          type: number
      type: object
    PlotConfigProfilePlot:
      example:
        date_range: date_range
        updater_username: updater_username
        creator_username: creator_username
        display:
          instrument_type: instrument_type
          instrument_id: instrument_id
        show_comments: true
        report_configs:
        - name: name
          id: id
          slug: slug
        - name: name
          id: id
          slug: slug
        auto_range: true
        show_masked: true
        threshold: 0
        update_date: update_date
        show_nonvalidated: true
        project_id: project_id
        creator_id: creator_id
        name: name
        updater_id: updater_id
        id: id
        create_date: create_date
        plot_type: plot_type
        slug: slug
      properties:
        auto_range:
          type: boolean
        create_date:
          type: string
        creator_id:
          type: string
        creator_username:
          type: string
        date_range:
          type: string
        display:
          $ref: '#/components/schemas/PlotConfigProfilePlotDisplay'
        id:
          type: string
        name:
          type: string
        plot_type:
          type: string
        project_id:
          type: string
        report_configs:
          items:
            $ref: '#/components/schemas/IDSlugName'
          type: array
        show_comments:
          type: boolean
        show_masked:
          type: boolean
        show_nonvalidated:
          type: boolean
        slug:
          type: string
        threshold:
          type: integer
        update_date:
          type: string
        updater_id:
          type: string
        updater_username:
          type: string
      type: object
    PlotConfigProfilePlotDisplay:
      example:
        instrument_type: instrument_type
        instrument_id: instrument_id
      properties:
        instrument_id:
          type: string
        instrument_type:
          type: string
      type: object
    PlotConfigScatterLineCustomShape:
      example:
        color: color
        data_point: 0.8008281904610115
        name: name
        plot_configuration_id: plot_configuration_id
        enabled: true
      properties:
        color:
          type: string
        data_point:
          type: number
        enabled:
          type: boolean
        name:
          type: string
        plot_configuration_id:
          type: string
      type: object
    PlotConfigScatterLineDisplay:
      example:
        layout:
          custom_shapes:
          - color: color
            data_point: 0.8008281904610115
            name: name
            plot_configuration_id: plot_configuration_id
            enabled: true
          - color: color
            data_point: 0.8008281904610115
            name: name
            plot_configuration_id: plot_configuration_id
            enabled: true
          y_axis_title: y_axis_title
          y2_axis_title: y2_axis_title
        traces:
        - trace_type: trace_type
          color: color
          show_markers: true
          timeseries_id: timeseries_id
          y_axis: y_axis
          parameter: parameter
          name: name
          width: 1.4658129805029452
          line_style: line_style
          plot_configuration_id: plot_configuration_id
          trace_order: 6
        - trace_type: trace_type
          color: color
          show_markers: true
          timeseries_id: timeseries_id
          y_axis: y_axis
          parameter: parameter
          name: name
          width: 1.4658129805029452
          line_style: line_style
          plot_configuration_id: plot_configuration_id
          trace_order: 6
      properties:
        layout:
          $ref: '#/components/schemas/PlotConfigScatterLineLayout'
        traces:
          items:
            $ref: '#/components/schemas/PlotConfigScatterLineTimeseriesTrace'
          type: array
      type: object
    PlotConfigScatterLineLayout:
      example:
        custom_shapes:
        - color: color
          data_point: 0.8008281904610115
          name: name
          plot_configuration_id: plot_configuration_id
          enabled: true
        - color: color
          data_point: 0.8008281904610115
          name: name
          plot_configuration_id: plot_configuration_id
          enabled: true
        y_axis_title: y_axis_title
        y2_axis_title: y2_axis_title
      properties:
        custom_shapes:
          items:
            $ref: '#/components/schemas/PlotConfigScatterLineCustomShape'
          type: array
        y2_axis_title:
          type: string
        y_axis_title:
          type: string
      type: object
    PlotConfigScatterLinePlot:
      example:
        date_range: date_range
        updater_username: updater_username
        creator_username: creator_username
        display:
          layout:
            custom_shapes:
            - color: color
              data_point: 0.8008281904610115
              name: name
              plot_configuration_id: plot_configuration_id
              enabled: true
            - color: color
              data_point: 0.8008281904610115
              name: name
              plot_configuration_id: plot_configuration_id
              enabled: true
            y_axis_title: y_axis_title
            y2_axis_title: y2_axis_title
          traces:
          - trace_type: trace_type
            color: color
            show_markers: true
            timeseries_id: timeseries_id
            y_axis: y_axis
            parameter: parameter
            name: name
            width: 1.4658129805029452
            line_style: line_style
            plot_configuration_id: plot_configuration_id
            trace_order: 6
          - trace_type: trace_type
            color: color
            show_markers: true
            timeseries_id: timeseries_id
            y_axis: y_axis
            parameter: parameter
            name: name
            width: 1.4658129805029452
            line_style: line_style
            plot_configuration_id: plot_configuration_id
            trace_order: 6
        show_comments: true
        report_configs:
        - name: name
          id: id
          slug: slug
        - name: name
          id: id
          slug: slug
        auto_range: true
        show_masked: true
        threshold: 5
        update_date: update_date
        show_nonvalidated: true
        project_id: project_id
        creator_id: creator_id
        name: name
        updater_id: updater_id
        id: id
        create_date: create_date
        plot_type: plot_type
        slug: slug
      properties:
        auto_range:
          type: boolean
        create_date:
          type: string
        creator_id:
          type: string
        creator_username:
          type: string
        date_range:
          type: string
        display:
          $ref: '#/components/schemas/PlotConfigScatterLineDisplay'
        id:
          type: string
        name:
          type: string
        plot_type:
          type: string
        project_id:
          type: string
        report_configs:
          items:
            $ref: '#/components/schemas/IDSlugName'
          type: array
        show_comments:
          type: boolean
        show_masked:
          type: boolean
        show_nonvalidated:
          type: boolean
        slug:
          type: string
        threshold:
          type: integer
        update_date:
          type: string
        updater_id:
          type: string
        updater_username:
          type: string
      type: object
    PlotConfigScatterLineTimeseriesTrace:
      example:
        trace_type: trace_type
        color: color
        show_markers: true
        timeseries_id: timeseries_id
        y_axis: y_axis
        parameter: parameter
        name: name
        width: 1.4658129805029452
        line_style: line_style
        plot_configuration_id: plot_configuration_id
        trace_order: 6
      properties:
        color:
          type: string
        line_style:
          type: string
        name:
          description: read-only
          type: string
        parameter:
          description: read-only
          type: string
        plot_configuration_id:
          type: string
        show_markers:
          type: boolean
        timeseries_id:
          type: string
        trace_order:
          type: integer
        trace_type:
          type: string
        width:
          type: number
        y_axis:
          description: "y1 or y2, default y1"
          type: string
      type: object
    Profile:
      example:
        is_admin: true
        roles:
        - roles
        - roles
        tokens:
        - token_id: token_id
          issued: issued
        - token_id: token_id
          issued: issued
        id: id
        display_name: display_name
        email: email
        username: username
      properties:
        display_name:
          type: string
        email:
          type: string
        id:
          type: string
        is_admin:
          type: boolean
        roles:
          items:
            type: string
          type: array
        tokens:
          items:
            $ref: '#/components/schemas/TokenInfoProfile'
          type: array
        username:
          type: string
      type: object
    Project:
      example:
        image: image
        updater_username: updater_username
        federal_id: federal_id
        creator_username: creator_username
        instrument_count: 0
        update_date: update_date
        office_id: office_id
        instrument_group_count: 6
        creator_id: creator_id
        name: name
        updater_id: updater_id
        district_id: district_id
        id: id
        create_date: create_date
        slug: slug
      properties:
        create_date:
          type: string
        creator_id:
          type: string
        creator_username:
          type: string
        district_id:
          type: string
        federal_id:
          type: string
        id:
          type: string
        image:
          type: string
        instrument_count:
          type: integer
        instrument_group_count:
          type: integer
        name:
          type: string
        office_id:
          type: string
        slug:
          type: string
        update_date:
          type: string
        updater_id:
          type: string
        updater_username:
          type: string
      type: object
    ProjectCount:
      example:
        project_count: 0
      properties:
        project_count:
          type: integer
      type: object
    ProjectInstrumentAssignments:
      example:
        instrument_ids:
        - instrument_ids
        - instrument_ids
      properties:
        instrument_ids:
          items:
            type: string
          type: array
      type: object
    ProjectMembership:
      example:
        role: role
        role_id: role_id
        profile_id: profile_id
        id: id
        email: email
        username: username
      properties:
        email:
          type: string
        id:
          type: string
        profile_id:
          type: string
        role:
          type: string
        role_id:
          type: string
        username:
          type: string
      type: object
    ReportConfig:
      example:
        updater_username: updater_username
        creator_username: creator_username
        global_overrides:
          date_range:
            value: value
            enabled: true
          show_nonvalidated:
            value: true
            enabled: true
          show_masked:
            value: true
            enabled: true
        description: description
        project_name: project_name
        update_date: update_date
        district_name: district_name
        project_id: project_id
        creator_id: creator_id
        name: name
        updater_id: updater_id
        id: id
        create_date: create_date
        plot_configs:
        - name: name
          id: id
          slug: slug
        - name: name
          id: id
          slug: slug
        slug: slug
      properties:
        create_date:
          type: string
        creator_id:
          type: string
        creator_username:
          type: string
        description:
          type: string
        district_name:
          type: string
        global_overrides:
          $ref: '#/components/schemas/ReportConfigGlobalOverrides'
        id:
          type: string
        name:
          type: string
        plot_configs:
          items:
            $ref: '#/components/schemas/IDSlugName'
          type: array
        project_id:
          type: string
        project_name:
          type: string
        slug:
          type: string
        update_date:
          type: string
        updater_id:
          type: string
        updater_username:
          type: string
      type: object
    ReportConfigGlobalOverrides:
      example:
        date_range:
          value: value
          enabled: true
        show_nonvalidated:
          value: true
          enabled: true
        show_masked:
          value: true
          enabled: true
      properties:
        date_range:
          $ref: '#/components/schemas/TextOption'
        show_masked:
          $ref: '#/components/schemas/ToggleOption'
        show_nonvalidated:
          $ref: '#/components/schemas/ToggleOption'
      type: object
    ReportConfigWithPlotConfigs:
      example:
        updater_username: updater_username
        creator_username: creator_username
        global_overrides:
          date_range:
            value: value
            enabled: true
          show_nonvalidated:
            value: true
            enabled: true
          show_masked:
            value: true
            enabled: true
        description: description
        project_name: project_name
        update_date: update_date
        district_name: district_name
        project_id: project_id
        creator_id: creator_id
        name: name
        updater_id: updater_id
        id: id
        create_date: create_date
        plot_configs:
        - date_range: date_range
          updater_username: updater_username
          creator_username: creator_username
          display:
            layout:
              custom_shapes:
              - color: color
                data_point: 0.8008281904610115
                name: name
                plot_configuration_id: plot_configuration_id
                enabled: true
              - color: color
                data_point: 0.8008281904610115
                name: name
                plot_configuration_id: plot_configuration_id
                enabled: true
              y_axis_title: y_axis_title
              y2_axis_title: y2_axis_title
            traces:
            - trace_type: trace_type
              color: color
              show_markers: true
              timeseries_id: timeseries_id
              y_axis: y_axis
              parameter: parameter
              name: name
              width: 1.4658129805029452
              line_style: line_style
              plot_configuration_id: plot_configuration_id
              trace_order: 6
            - trace_type: trace_type
              color: color
              show_markers: true
              timeseries_id: timeseries_id
              y_axis: y_axis
              parameter: parameter
              name: name
              width: 1.4658129805029452
              line_style: line_style
              plot_configuration_id: plot_configuration_id
              trace_order: 6
          show_comments: true
          report_configs:
          - name: name
            id: id
            slug: slug
          - name: name
            id: id
            slug: slug
          auto_range: true
          show_masked: true
          threshold: 5
          update_date: update_date
          show_nonvalidated: true
          project_id: project_id
          creator_id: creator_id
          name: name
          updater_id: updater_id
          id: id
          create_date: create_date
          plot_type: plot_type
          slug: slug
        - date_range: date_range
          updater_username: updater_username
          creator_username: creator_username
          display:
            layout:
              custom_shapes:
              - color: color
                data_point: 0.8008281904610115
                name: name
                plot_configuration_id: plot_configuration_id
                enabled: true
              - color: color
                data_point: 0.8008281904610115
                name: name
                plot_configuration_id: plot_configuration_id
                enabled: true
              y_axis_title: y_axis_title
              y2_axis_title: y2_axis_title
            traces:
            - trace_type: trace_type
              color: color
              show_markers: true
              timeseries_id: timeseries_id
              y_axis: y_axis
              parameter: parameter
              name: name
              width: 1.4658129805029452
              line_style: line_style
              plot_configuration_id: plot_configuration_id
              trace_order: 6
            - trace_type: trace_type
              color: color
              show_markers: true
              timeseries_id: timeseries_id
              y_axis: y_axis
              parameter: parameter
              name: name
              width: 1.4658129805029452
              line_style: line_style
              plot_configuration_id: plot_configuration_id
              trace_order: 6
          show_comments: true
          report_configs:
          - name: name
            id: id
            slug: slug
          - name: name
            id: id
            slug: slug
          auto_range: true
          show_masked: true
          threshold: 5
          update_date: update_date
          show_nonvalidated: true
          project_id: project_id
          creator_id: creator_id
          name: name
          updater_id: updater_id
          id: id
          create_date: create_date
          plot_type: plot_type
          slug: slug
        slug: slug
      properties:
        create_date:
          type: string
        creator_id:
          type: string
        creator_username:
          type: string
        description:
          type: string
        district_name:
          type: string
        global_overrides:
          $ref: '#/components/schemas/ReportConfigGlobalOverrides'
        id:
          type: string
        name:
          type: string
        plot_configs:
          items:
            $ref: '#/components/schemas/PlotConfigScatterLinePlot'
          type: array
        project_id:
          type: string
        project_name:
          type: string
        slug:
          type: string
        update_date:
          type: string
        updater_id:
          type: string
        updater_username:
          type: string
      type: object
    ReportDownloadJob:
      example:
        file_key: file_key
        creator: creator
        progress_update_date: progress_update_date
        report_config_id: report_config_id
        progress: 0
        file_expiry: file_expiry
        id: id
        create_date: create_date
        status: status
      properties:
        create_date:
          type: string
        creator:
          type: string
        file_expiry:
          type: string
        file_key:
          type: string
        id:
          type: string
        progress:
          type: integer
        progress_update_date:
          type: string
        report_config_id:
          type: string
        status:
          type: string
      type: object
    SaaMeasurements:
      example:
        time: time
        measurements:
        - elevation: 0.8008281904610115
          temp: 1.4658129805029452
          z_cum_dev: 1.2315135367772556
          y_increment: 4.145608029883936
          x_cum_dev: 7.061401241503109
          temp_increment: 5.637376656633329
          z_increment: 1.0246457001441578
          y_cum_dev: 2.027123023002322
          x_increment: 9.301444243932576
          x: 2.3021358869347655
          "y": 3.616076749251911
          z: 7.386281948385884
          segment_id: 6
          temp_cum_dev: 5.962133916683182
        - elevation: 0.8008281904610115
          temp: 1.4658129805029452
          z_cum_dev: 1.2315135367772556
          y_increment: 4.145608029883936
          x_cum_dev: 7.061401241503109
          temp_increment: 5.637376656633329
          z_increment: 1.0246457001441578
          y_cum_dev: 2.027123023002322
          x_increment: 9.301444243932576
          x: 2.3021358869347655
          "y": 3.616076749251911
          z: 7.386281948385884
          segment_id: 6
          temp_cum_dev: 5.962133916683182
      properties:
        measurements:
          items:
            $ref: '#/components/schemas/SaaSegmentMeasurement'
          type: array
        time:
          type: string
      type: object
    SaaSegment:
      example:
        z_timeseries_id: z_timeseries_id
        temp_timeseries_id: temp_timeseries_id
        y_timeseries_id: y_timeseries_id
        x_timeseries_id: x_timeseries_id
        length: 6.027456183070403
        id: 0
        instrument_id: instrument_id
        length_timeseries_id: length_timeseries_id
      properties:
        id:
          type: integer
        instrument_id:
          type: string
        length:
          type: number
        length_timeseries_id:
          type: string
        temp_timeseries_id:
          type: string
        x_timeseries_id:
          type: string
        y_timeseries_id:
          type: string
        z_timeseries_id:
          type: string
      type: object
    SaaSegmentMeasurement:
      example:
        elevation: 0.8008281904610115
        temp: 1.4658129805029452
        z_cum_dev: 1.2315135367772556
        y_increment: 4.145608029883936
        x_cum_dev: 7.061401241503109
        temp_increment: 5.637376656633329
        z_increment: 1.0246457001441578
        y_cum_dev: 2.027123023002322
        x_increment: 9.301444243932576
        x: 2.3021358869347655
        "y": 3.616076749251911
        z: 7.386281948385884
        segment_id: 6
        temp_cum_dev: 5.962133916683182
      properties:
        elevation:
          type: number
        segment_id:
          type: integer
        temp:
          type: number
        temp_cum_dev:
          type: number
        temp_increment:
          type: number
        x:
          type: number
        x_cum_dev:
          type: number
        x_increment:
          type: number
        "y":
          type: number
        y_cum_dev:
          type: number
        y_increment:
          type: number
        z:
          type: number
        z_cum_dev:
          type: number
        z_increment:
          type: number
      type: object
    SearchResult:
      example:
        item: "{}"
        id: id
        type: type
      properties:
        id:
          type: string
        item:
          type: object
        type:
          type: string
      type: object
    Site:
      properties:
        description:
          type: string
        elevation:
          type: string
        elevationUnits:
          type: string
        siteName:
          $ref: '#/components/schemas/SiteName'
      type: object
    SiteName:
      properties:
        id:
          type: string
        nameType:
          type: string
      type: object
    Submittal:
      example:
        alert_type_id: alert_type_id
        alert_config_id: alert_config_id
        due_date: due_date
        alert_config_name: alert_config_name
        submittal_status_id: submittal_status_id
        submittal_status_name: submittal_status_name
        warning_sent: true
        project_id: project_id
        alert_type_name: alert_type_name
        marked_as_missing: true
        completion_date: completion_date
        id: id
        create_date: create_date
      properties:
        alert_config_id:
          type: string
        alert_config_name:
          type: string
        alert_type_id:
          type: string
        alert_type_name:
          type: string
        completion_date:
          type: string
        create_date:
          type: string
        due_date:
          type: string
        id:
          type: string
        marked_as_missing:
          type: boolean
        project_id:
          type: string
        submittal_status_id:
          type: string
        submittal_status_name:
          type: string
        warning_sent:
          type: boolean
      type: object
    Survey123:
      example:
        updater_username: updater_username
        project_id: project_id
        creator_username: creator_username
        creator_id: creator_id
        name: name
        updater_id: updater_id
        id: id
        create_date: create_date
        rows:
        - timeseries_id: timeseries_id
          display_name: display_name
          instrument_id: instrument_id
          field_name: field_name
        - timeseries_id: timeseries_id
          display_name: display_name
          instrument_id: instrument_id
          field_name: field_name
        errors:
        - errors
        - errors
        slug: slug
        update_date: update_date
      properties:
        create_date:
          type: string
        creator_id:
          type: string
        creator_username:
          type: string
        errors:
          items:
            type: string
          type: array
        id:
          type: string
        name:
          type: string
        project_id:
          type: string
        rows:
          items:
            $ref: '#/components/schemas/Survey123EquivalencyTableRow'
          type: array
        slug:
          type: string
        update_date:
          type: string
        updater_id:
          type: string
        updater_username:
          type: string
      type: object
    Survey123EquivalencyTableRow:
      example:
        timeseries_id: timeseries_id
        display_name: display_name
        instrument_id: instrument_id
        field_name: field_name
      properties:
        display_name:
          type: string
        field_name:
          type: string
        instrument_id:
          type: string
        timeseries_id:
          type: string
      type: object
    TextOption:
      example:
        value: value
        enabled: true
      properties:
        enabled:
          type: boolean
        value:
          type: string
      type: object
    Timeseries:
      example:
        values:
        - annotation: annotation
          validated: true
          masked: true
          time: time
          error: error
          value: 0.8008281904610115
        - annotation: annotation
          validated: true
          masked: true
          time: time
          error: error
          value: 0.8008281904610115
        instrument: instrument
        instrument_id: instrument_id
        unit: unit
        parameter: parameter
        name: name
        variable: variable
        id: id
        instrument_slug: instrument_slug
        is_computed: true
        unit_id: unit_id
        slug: slug
        parameter_id: parameter_id
      properties:
        id:
          type: string
        instrument:
          type: string
        instrument_id:
          type: string
        instrument_slug:
          type: string
        is_computed:
          type: boolean
        name:
          type: string
        parameter:
          type: string
        parameter_id:
          type: string
        slug:
          type: string
        unit:
          type: string
        unit_id:
          type: string
        values:
          items:
            $ref: '#/components/schemas/Measurement'
          type: array
        variable:
          type: string
      type: object
    TimeseriesCollectionItems:
      example:
        items:
        - values:
          - annotation: annotation
            validated: true
            masked: true
            time: time
            error: error
            value: 0.8008281904610115
          - annotation: annotation
            validated: true
            masked: true
            time: time
            error: error
            value: 0.8008281904610115
          instrument: instrument
          instrument_id: instrument_id
          unit: unit
          parameter: parameter
          name: name
          variable: variable
          id: id
          instrument_slug: instrument_slug
          is_computed: true
          unit_id: unit_id
          slug: slug
          parameter_id: parameter_id
        - values:
          - annotation: annotation
            validated: true
            masked: true
            time: time
            error: error
            value: 0.8008281904610115
          - annotation: annotation
            validated: true
            masked: true
            time: time
            error: error
            value: 0.8008281904610115
          instrument: instrument
          instrument_id: instrument_id
          unit: unit
          parameter: parameter
          name: name
          variable: variable
          id: id
          instrument_slug: instrument_slug
          is_computed: true
          unit_id: unit_id
          slug: slug
          parameter_id: parameter_id
      properties:
        items:
          items:
            $ref: '#/components/schemas/Timeseries'
          type: array
      type: object
    TimeseriesMeasurementCollectionCollection:
      example:
        items:
        - timeseries_id: timeseries_id
          items:
          - annotation: annotation
            validated: true
            masked: true
            time: time
            error: error
            value: 0.8008281904610115
          - annotation: annotation
            validated: true
            masked: true
            time: time
            error: error
            value: 0.8008281904610115
        - timeseries_id: timeseries_id
          items:
          - annotation: annotation
            validated: true
            masked: true
            time: time
            error: error
            value: 0.8008281904610115
          - annotation: annotation
            validated: true
            masked: true
            time: time
            error: error
            value: 0.8008281904610115
      properties:
        items:
          items:
            $ref: '#/components/schemas/MeasurementCollection'
          type: array
      type: object
    ToggleOption:
      example:
        value: true
        enabled: true
      properties:
        enabled:
          type: boolean
        value:
          type: boolean
      type: object
    Token:
      example:
        token_id: token_id
        profile_id: profile_id
        issued: issued
        secret_token: secret_token
      properties:
        issued:
          type: string
        profile_id:
          type: string
        secret_token:
          type: string
        token_id:
          type: string
      type: object
    TokenInfoProfile:
      example:
        token_id: token_id
        issued: issued
      properties:
        issued:
          type: string
        token_id:
          type: string
      type: object
    Unit:
      example:
        measure: measure
        unit_family_id: unit_family_id
        name: name
        unit_family: unit_family
        id: id
        abbreviation: abbreviation
        measure_id: measure_id
      properties:
        abbreviation:
          type: string
        id:
          type: string
        measure:
          type: string
        measure_id:
          type: string
        name:
          type: string
        unit_family:
          type: string
        unit_family_id:
          type: string
      type: object
    collectionGroupDetailsTimeseries:
      example:
        values:
        - annotation: annotation
          validated: true
          masked: true
          time: time
          error: error
          value: 0.8008281904610115
        - annotation: annotation
          validated: true
          masked: true
          time: time
          error: error
          value: 0.8008281904610115
        instrument: instrument
        instrument_id: instrument_id
        unit: unit
        parameter: parameter
        name: name
        variable: variable
        latest_value: 0.8008281904610115
        id: id
        instrument_slug: instrument_slug
        is_computed: true
        latest_time: latest_time
        unit_id: unit_id
        slug: slug
        parameter_id: parameter_id
      properties:
        id:
          type: string
        instrument:
          type: string
        instrument_id:
          type: string
        instrument_slug:
          type: string
        is_computed:
          type: boolean
        latest_time:
          type: string
        latest_value:
          type: number
        name:
          type: string
        parameter:
          type: string
        parameter_id:
          type: string
        slug:
          type: string
        unit:
          type: string
        unit_id:
          type: string
        values:
          items:
            $ref: '#/components/schemas/Measurement'
          type: array
        variable:
          type: string
      type: object
    pgtype.JSON:
      example:
        bytes:
        - 0
        - 0
        status: null
      properties:
        bytes:
          items:
            type: integer
          type: array
        status:
          $ref: '#/components/schemas/pgtype.Status'
      type: object
    pgtype.Status:
      enum:
      - 0
      - 1
      - 2
      type: integer
      x-enum-varnames:
      - Undefined
      - "Null"
      - Present
  securitySchemes:
    Bearer:
      description: Type "Bearer" followed by a space and access token.
      in: header
      name: Authorization
      type: apiKey
    ClaimsOnly:
      description: CAC-Only routes
      in: header
      name: Authorization
      type: apiKey
x-original-swagger-version: "2.0"
