{
	"info": {
		"_postman_id": "31b19b5b-cef0-41bc-95de-b77fd8e0408d",
		"name": "instrumentation-regression",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Profiles",
			"item": [
				{
					"name": "CreateProfile",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3eb1838c-822a-4065-98b0-5e3f766037f8",
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_new_user}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"testuser\",\n    \"email\": \"test.user@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/profiles",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetMyProfile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"username\": { \"type\": \"string\" },",
									"        \"email\": { \"type\": \"string\" },",
									"    },",
									"    \"required\": [\"id\", \"username\", \"email\"],",
									"    \"additionalProperties\": true",
									"}",
									"",
									"pm.globals.set('PROFILE_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "e3489d24-8371-473e-b643-0abe34f6a178"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/my_profile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"my_profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateToken",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/my_tokens",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"my_tokens"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "ProjectMembership",
			"item": [
				{
					"name": "ListProjectMembers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var obj_schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"profile_id\": { \"type\": \"string\" },",
									"        \"username\": { \"type\": [\"string\"] },",
									"        \"email\": { \"type\": [\"string\"] },",
									"        \"role_id\": { \"type\": [\"string\"] },",
									"        \"role\": { \"type\": [\"string\"] }",
									"    },",
									"    \"required\": [\"id\", \"profile_id\", \"username\", \"email\", \"role_id\", \"role\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"// schema validator",
									"var array_schema = {",
									"    \"type\": \"array\",",
									"    \"items\": obj_schema",
									"}",
									"",
									"pm.globals.set('PROJECT_MEMBERSHIP_OBJECT_SCHEMA', JSON.stringify(obj_schema));",
									"pm.globals.set('PROJECT_MEMBERSHIP_ARRAY_SCHEMA', JSON.stringify(array_schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(array_schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "905017ba-a3ff-455a-ac4c-c5d5d22c99d9"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/members",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"members"
							]
						}
					},
					"response": []
				},
				{
					"name": "RemoveProjectMemberRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "7eea0264-5866-44d1-a63d-2a5fcd6cfa25"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/members/57329df6-9f7a-4dad-9383-4633b452efab/roles/37f14863-8f3b-44ca-8deb-4b74ce8a8a69",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"members",
								"57329df6-9f7a-4dad-9383-4633b452efab",
								"roles",
								"37f14863-8f3b-44ca-8deb-4b74ce8a8a69"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddProjectMemberRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(JSON.parse(pm.globals.get(\"PROJECT_MEMBERSHIP_OBJECT_SCHEMA\")))",
									"});"
								],
								"type": "text/javascript",
								"id": "92a410f5-a35c-4207-85f2-9a0b831f1cce"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/members/57329df6-9f7a-4dad-9383-4633b452efab/roles/37f14863-8f3b-44ca-8deb-4b74ce8a8a69",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"members",
								"57329df6-9f7a-4dad-9383-4633b452efab",
								"roles",
								"37f14863-8f3b-44ca-8deb-4b74ce8a8a69"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Instruments",
			"item": [
				{
					"name": "GetInstrument",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"formula\": { \"type\": [\"string\", \"null\"] },",
									"        \"groups\": {",
									"            \"type\": \"array\",",
									"            \"items\": { \"type\": \"string\" },",
									"        },",
									"        \"constants\": {",
									"            \"type\": \"array\",",
									"            \"items\": { \"type\": \"string\" },",
									"        },",
									"        \"alert_configs\": {",
									"            \"type\": \"array\",",
									"            \"items\": { \"type\": \"string\" },",
									"        },",
									"        \"slug\": { \"type\": \"string\" },",
									"        \"name\": { \"type\": \"string\" },",
									"        \"type_id\": { \"type\": \"string\" },",
									"        \"type\": { \"type\": \"string\" },",
									"        \"status_id\": { \"type\": \"string\" },",
									"        \"status\": { \"type\": \"string\" },",
									"        \"status_time\": { \"type\": \"string\" },",
									"        \"geometry\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"type\": {",
									"                    \"type\": \"string\",",
									"                    \"pattern\": \"Point\"",
									"                },",
									"                \"coordinates\": {",
									"                    \"type\": \"array\",",
									"                    \"minItems\": 2,",
									"                    \"maxItems\": 2,",
									"                    \"items\": { \"type\": \"number\" },",
									"                }",
									"            },",
									"            \"required\": [\"type\", \"coordinates\"]",
									"        },",
									"        \"station\": { \"type\": [\"number\", \"null\"] },",
									"        \"offset\": { \"type\": [\"number\", \"null\"] },",
									"        \"creator\": { \"type\": \"string\" },",
									"        \"create_date\": { \"type\": \"string\", \"format\": \"date-time\" },",
									"        \"updater\": {  \"type\": [\"string\", \"null\"] },",
									"        \"update_date\": { \"type\": [\"string\", \"null\"], \"format\": \"date-time\" },",
									"        \"project_id\": { \"type\": [\"string\", \"null\"] },",
									"        \"nid_id\": { \"type\": [\"string\", \"null\"] },",
									"        \"usgs_id\": { \"type\": [\"string\", \"null\"] }",
									"    },",
									"    \"required\": [\"id\", \"slug\", \"name\", \"type_id\", \"type\", \"status_id\", \"status\", \"status_time\", \"geometry\", \"creator\", \"create_date\", \"updater\", \"update_date\", \"project_id\", \"station\", \"offset\", \"constants\", \"alert_configs\", \"formula\", \"nid_id\", \"usgs_id\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"pm.globals.set('INSTRUMENT_OBJ_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "2fb062d1-7401-4daa-8d0d-7949aff70183"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetInstrumentCount",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"instrument_count\": { \"type\": \"number\" }",
									"    },",
									"    \"required\": [\"instrument_count\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "78012148-05bd-4108-b002-d8de9fa31e83"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/count",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateInstrument",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('INSTRUMENT_OBJ_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "b3f55a6c-c86f-4a2c-963a-a6355729d652"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n    \"status_id\": \"94578354-ffdf-4119-9663-6bd4323e58f5\",\n    \"status\": \"destroyed\",\n    \"status_time\": \"2001-01-01T00:00:00Z\",\n    \"slug\": \"demo-piezometer-1\",\n    \"name\": \"Demo Piezometer 1 Updated Name\",\n    \"type_id\": \"1bb4bf7c-f5f8-44eb-9805-43b07ffadbef\",\n    \"type\": \"Piezometer\",\n    \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            -80.8,\n            26.7\n        ]\n    },\n    \"station\": null,\n    \"offset\": null,\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\n    \"zreference\": 44.5,\n    \"zreference_datum_id\": \"72113f9a-982d-44e5-8fc1-8e595dafd344\",\n    \"zreference_datum\": \"North American Vertical Datum of 1988 (NAVD 88)\",\n    \"zreference_time\": \"2006-06-01T00:00:00Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateInstrumentGeometry",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('INSTRUMENT_OBJ_SCHEMA'))",
									"    )",
									"});",
									"// Assert known updated values of lat/lon",
									"pm.test(\"Response lat/lon matches submitted values\", function () {",
									"  pm.expect(pm.response.json().geometry.coordinates).to.include(-78);",
									"  pm.expect(pm.response.json().geometry.coordinates).to.include(25);",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "7ca3f63c-b991-4d4b-906e-749918fd9009"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"Point\",\n    \"coordinates\": [\n        -78.0,\n        25.0\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/geometry",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"geometry"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListInstruments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// schema validator",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('INSTRUMENT_OBJ_SCHEMA'))",
									"}",
									"",
									"pm.globals.set('INSTRUMENT_ARRAY_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "ec315fb6-0f9c-450f-96ac-bd8c70dc335e"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/instruments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateInstrumentBulk_Array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"id": "b426e509-4d0b-4ac9-b084-c2f21c102c6f"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[{\n    \"status_id\": \"94578354-ffdf-4119-9663-6bd4323e58f5\",\n    \"status\": \"destroyed\",\n    \"status_time\": \"2001-01-01T00:00:00Z\",\n    \"slug\": \"demo-piezometer-2\",\n    \"formula\": null,\n    \"name\": \"Demo Piezometer 2\",\n    \"type_id\": \"1bb4bf7c-f5f8-44eb-9805-43b07ffadbef\",\n    \"type\": \"Piezometer\",\n    \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            -80.8,\n            26.7\n        ]\n    },\n    \"station\": null,\n    \"offset\": null,\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\"\n},\n{\n    \"status_id\": \"94578354-ffdf-4119-9663-6bd4323e58f5\",\n    \"status\": \"destroyed\",\n    \"status_time\": \"2001-01-01T00:00:00Z\",\n    \"slug\": \"demo-piezometer-3\",\n    \"name\": \"Demo Piezometer 3\",\n    \"type_id\": \"1bb4bf7c-f5f8-44eb-9805-43b07ffadbef\",\n    \"type\": \"Piezometer\",\n    \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            -80.8,\n            26.7\n        ]\n    },\n    \"formula\": null,\n    \"station\": null,\n    \"offset\": null,\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\"\n},\n{\n    \"status_id\": \"94578354-ffdf-4119-9663-6bd4323e58f5\",\n    \"status\": \"destroyed\",\n    \"status_time\": \"2001-01-01T00:00:00Z\",\n    \"slug\": \"demo-piezometer-4\",\n    \"name\": \"Demo Piezometer 4\",\n    \"type_id\": \"1bb4bf7c-f5f8-44eb-9805-43b07ffadbef\",\n    \"type\": \"Piezometer\",\n    \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            -80.8,\n            26.7\n        ]\n    },\n    \"station\": null,\n    \"offset\": null,\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\"\n}\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments"
							]
						}
					},
					"response": []
				},
				{
					"name": "ValidateCreateInstrument_Array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "9e7af915-1bf4-45e8-b5b5-e0cf728d090c"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[{\n    \"status_id\": \"94578354-ffdf-4119-9663-6bd4323e58f5\",\n    \"status\": \"destroyed\",\n    \"status_time\": \"2001-01-01T00:00:00Z\",\n    \"slug\": \"demo-piezometer-2\",\n    \"name\": \"Demo Piezometer 2\",\n    \"type_id\": \"1bb4bf7c-f5f8-44eb-9805-43b07ffadbef\",\n    \"type\": \"Piezometer\",\n    \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            -80.8,\n            26.7\n        ]\n    },\n    \"station\": null,\n    \"offset\": null,\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\n    \"zreference\": 44.5,\n    \"zreference_datum_id\": \"72113f9a-982d-44e5-8fc1-8e595dafd344\",\n    \"zreference_datum\": \"North American Vertical Datum of 1988 (NAVD 88)\",\n    \"zreference_time\": \"2006-06-01T00:00:00Z\"\n},\n{\n    \"status_id\": \"94578354-ffdf-4119-9663-6bd4323e58f5\",\n    \"status\": \"destroyed\",\n    \"status_time\": \"2001-01-01T00:00:00Z\",\n    \"slug\": \"demo-piezometer-3\",\n    \"name\": \"Demo Piezometer 3\",\n    \"type_id\": \"1bb4bf7c-f5f8-44eb-9805-43b07ffadbef\",\n    \"type\": \"Piezometer\",\n    \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            -80.8,\n            26.7\n        ]\n    },\n    \"station\": null,\n    \"offset\": null,\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\n    \"zreference\": 44.5,\n    \"zreference_datum_id\": \"72113f9a-982d-44e5-8fc1-8e595dafd344\",\n    \"zreference_datum\": \"North American Vertical Datum of 1988 (NAVD 88)\",\n    \"zreference_time\": \"2006-06-01T00:00:00Z\"\n},\n{\n    \"status_id\": \"94578354-ffdf-4119-9663-6bd4323e58f5\",\n    \"status\": \"destroyed\",\n    \"status_time\": \"2001-01-01T00:00:00Z\",\n    \"slug\": \"demo-piezometer-4\",\n    \"name\": \"Demo Piezometer 4\",\n    \"type_id\": \"1bb4bf7c-f5f8-44eb-9805-43b07ffadbef\",\n    \"type\": \"Piezometer\",\n    \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            -80.8,\n            26.7\n        ]\n    },\n    \"station\": null,\n    \"offset\": null,\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\n    \"zreference\": 44.5,\n    \"zreference_datum_id\": \"72113f9a-982d-44e5-8fc1-8e595dafd344\",\n    \"zreference_datum\": \"North American Vertical Datum of 1988 (NAVD 88)\",\n    \"zreference_time\": \"2006-06-01T00:00:00Z\"\n}\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments?dry_run=true",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments"
							],
							"query": [
								{
									"key": "dry_run",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateInstrumentBulk_Object",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"id": "f62fdb31-b978-4c06-bf38-4181379da5f0"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status_id\": \"94578354-ffdf-4119-9663-6bd4323e58f5\",\n    \"status\": \"destroyed\",\n    \"status_time\": \"2001-01-01T00:00:00Z\",\n    \"slug\": \"demo-piezometer-5\",\n    \"name\": \"Demo Piezometer 5\",\n    \"type_id\": \"1bb4bf7c-f5f8-44eb-9805-43b07ffadbef\",\n    \"type\": \"Piezometer\",\n    \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            -80.8,\n            26.7\n        ]\n    },\n    \"formula\": null,\n    \"station\": null,\n    \"offset\": null,\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments"
							]
						}
					},
					"response": []
				},
				{
					"name": "ValidateCreateInstrument_Object",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "6c4d0021-cde9-4ab1-a53c-a7afa9597722"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status_id\": \"94578354-ffdf-4119-9663-6bd4323e58f5\",\n    \"status\": \"destroyed\",\n    \"status_time\": \"2001-01-01T00:00:00Z\",\n    \"slug\": \"demo-piezometer-5\",\n    \"name\": \"Demo Piezometer 5\",\n    \"type_id\": \"1bb4bf7c-f5f8-44eb-9805-43b07ffadbef\",\n    \"type\": \"Piezometer\",\n    \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            -80.8,\n            26.7\n        ]\n    },\n    \"station\": null,\n    \"offset\": null,\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\n    \"zreference\": 44.5,\n    \"zreference_datum_id\": \"72113f9a-982d-44e5-8fc1-8e595dafd344\",\n    \"zreference_datum\": \"North American Vertical Datum of 1988 (NAVD 88)\",\n    \"zreference_time\": \"2006-06-01T00:00:00Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments?dry_run=true",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments"
							],
							"query": [
								{
									"key": "dry_run",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetInstrumentStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"time\": { \"type\": \"string\" },",
									"        \"status_id\": { \"type\": \"string\" },",
									"        \"status\": { \"type\": \"string\" }",
									"    },",
									"    \"required\": [\"id\", \"time\", \"status_id\", \"status\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"pm.globals.set('INSTRUMENT_STATUS_OBJECT_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "a42843a9-60c4-41eb-9436-d3d1d00324a4"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/status/4ed5e9ac-40dc-4bca-b44f-7b837ec1b0fc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"status",
								"4ed5e9ac-40dc-4bca-b44f-7b837ec1b0fc"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListInstrumentStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// schema validator",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('INSTRUMENT_STATUS_OBJECT_SCHEMA'))",
									"}",
									"",
									"pm.globals.set('INSTRUMENT_STATUS_ARRAY_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "6ca63370-0c45-476c-82d9-3bed60af60e3"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/status",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateInstrumentStatus_Array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"id": "03e4c621-b00b-4e05-b441-2ae1cd10c324"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n{\n    \"time\": \"2002-01-01T00:00:00Z\",\n    \"status_id\": \"03a2bf9a-bbd8-4031-8f4e-13e8c77807f1\"\n},\n{\n    \"time\": \"2003-01-01T00:00:00Z\",\n    \"status_id\": \"c9ee4acb-9623-4fde-bf36-7668afe463d4\"\n},\n{\n    \"time\": \"2004-01-01T00:00:00Z\",\n    \"status_id\": \"e26ba2ef-9b52-4c71-97df-9e4b6cf4174d\"\n},\n{\n    \"time\": \"2005-01-01T00:00:00Z\",\n    \"status_id\": \"94578354-ffdf-4119-9663-6bd4323e58f5\"\n}\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/status",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateInstrumentStatus_Object",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"id": "b8235ee8-b54e-4e9c-b8c3-7d9fec245485"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"time\": \"2018-01-01T00:00:00Z\",\n    \"status_id\": \"03a2bf9a-bbd8-4031-8f4e-13e8c77807f1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/status",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteInstrumentStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "4db05e30-41da-48e0-b580-c7f83e009bc4"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/status/4ed5e9ac-40dc-4bca-b44f-7b837ec1b0fc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"status",
								"4ed5e9ac-40dc-4bca-b44f-7b837ec1b0fc"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteInstrument",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "56776900-c041-4dfe-9680-66e96bc82231"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Instrument Notes",
			"item": [
				{
					"name": "GetInstrumentNote",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"instrument_id\": { \"type\": \"string\" },",
									"        \"title\": { \"type\": \"string\" },",
									"        \"body\": { \"type\": \"string\" },",
									"        \"time\": { \"type\": \"string\" },",
									"        \"creator\": { \"type\": \"string\" },",
									"        \"create_date\": { \"type\": \"string\", \"format\": \"date-time\" },",
									"        \"updater\": {  \"type\": [\"string\", \"null\"] },",
									"        \"update_date\": { \"type\": [\"string\", \"null\"], \"format\": \"date-time\" },",
									"    },",
									"    \"required\": [\"id\", \"instrument_id\", \"title\", \"body\", \"time\", \"creator\", \"create_date\", \"updater\", \"update_date\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"pm.globals.set('INSTRUMENT_NOTE_OBJ_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "c4e1ef5d-f82d-4a39-9153-6f1c54a7efe8"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/notes/90a3f8de-de65-48a7-8286-024c13162958",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"notes",
								"90a3f8de-de65-48a7-8286-024c13162958"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListInstrumentNotes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// schema validator",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('INSTRUMENT_NOTE_OBJ_SCHEMA'))",
									"}",
									"",
									"pm.globals.set('INSTRUMENT_NOTE_ARRAY_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "a7efeff2-00db-4f22-bc96-c898e226f09b"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/notes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								"notes"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListInstrumentInstrumentNotes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('INSTRUMENT_NOTE_ARRAY_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "2096bf70-ce28-4f30-9b7a-fa956519c813"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/notes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"notes"
							]
						}
					},
					"response": []
				},
				{
					"name": "PutInstrumentNote",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('INSTRUMENT_NOTE_OBJ_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "3647c12a-ab4f-4996-8bad-27cfa618ede4"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"90a3f8de-de65-48a7-8286-024c13162958\",\n    \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n    \"title\": \"Instrument Test Note 1\",\n    \"body\": \"Updated instrument note body text.  This is example updated text.\",\n    \"time\": \"2020-06-09T01:49:48.505713Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/9048e7c1-eba2-4888-9048-db63e71e85ef/notes/90a3f8de-de65-48a7-8286-024c13162958",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								"9048e7c1-eba2-4888-9048-db63e71e85ef",
								"notes",
								"90a3f8de-de65-48a7-8286-024c13162958"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateInstrumentNote_Array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('INSTRUMENT_NOTE_ARRAY_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "1bf90c9a-11c5-41cb-8af3-d8564e344a1b"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n        \"title\": \"Instrument Test Note 101\",\n        \"body\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\\n labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\\n nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\\n cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui\\n officia deserunt mollit anim id est laborum.\\n\",\n        \"time\": \"2020-06-09T01:49:48.505713Z\"\n    },\n        {\n        \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n        \"title\": \"Instrument Test Note 102\",\n        \"body\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\\n labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\\n nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\\n cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui\\n officia deserunt mollit anim id est laborum.\\n\",\n        \"time\": \"2020-06-09T01:49:48.505713Z\"\n    },\n        {\n        \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n        \"title\": \"Instrument Test Note 103\",\n        \"body\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\\n labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\\n nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\\n cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui\\n officia deserunt mollit anim id est laborum.\\n\",\n        \"time\": \"2020-06-09T01:49:48.505713Z\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/notes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								"notes"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateInstrumentNote_Object",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('INSTRUMENT_NOTE_ARRAY_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "6f6a27ef-0103-4f78-8d86-f96000ec7816"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n        \"title\": \"Instrument Note from Object Upload\",\n        \"body\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\\n labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\\n nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\\n cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui\\n officia deserunt mollit anim id est laborum.\\n\",\n        \"time\": \"2020-06-09T01:49:48.505713Z\"\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/notes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								"notes"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteInstrumentNote",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "9cce0a80-1380-43de-99bb-6cc79e77df10"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/instruments/notes/90a3f8de-de65-48a7-8286-024c13162958",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								"notes",
								"90a3f8de-de65-48a7-8286-024c13162958"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Instrument Groups",
			"item": [
				{
					"name": "GetInstrumentGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"slug\": { \"type\": \"string\" },",
									"        \"name\": { \"type\": \"string\" },",
									"        \"description\": { \"type\": \"string\" },",
									"        \"creator\": { \"type\": \"string\" },",
									"        \"create_date\": { \"type\": \"string\", \"format\": \"date-time\" },",
									"        \"updater\": {  \"type\": [\"string\", \"null\"] },",
									"        \"update_date\": { \"type\": [\"string\", \"null\"], \"format\": \"date-time\" },",
									"        \"project_id\": { \"type\": [\"string\", \"null\"] },",
									"        \"instrument_count\": { \"type\": \"number\" },",
									"        \"timeseries_count\": { \"type\": \"number\" }",
									"    },",
									"    \"required\": [\"id\", \"slug\", \"name\", \"description\", \"creator\", \"create_date\", \"updater\", \"update_date\", \"project_id\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"pm.globals.set('INSTRUMENTGROUP_OBJ_SCHEMA', JSON.stringify(schema))",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "9289bd03-f5fe-4de1-bbec-5c4bfe6cf2d9"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/instrument_groups/d0916e8a-39a6-4f2f-bd31-879881f8b40c",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instrument_groups",
								"d0916e8a-39a6-4f2f-bd31-879881f8b40c"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListInstrumentGroups",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('INSTRUMENTGROUP_OBJ_SCHEMA'))",
									"}",
									"",
									"pm.globals.set(\"INSTRUMENTGROUP_ARRAY_SCHEMA\", JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "a22ea7d8-d4b2-4ae9-9a97-a0e348f2b143"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/instrument_groups",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instrument_groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateInstrumentGroupBulk_Array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('INSTRUMENTGROUP_ARRAY_SCHEMA'))",
									"    )",
									"});"
								],
								"type": "text/javascript",
								"id": "7297c391-8ad2-45da-95fe-40858983f219"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[{\n    \"name\": \"Test Instrument Group 100\",\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\"\n},\n{\n    \"name\": \"Test Instrument Group 101\",\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\"\n},\n{\n    \"name\": \"Test Instrument Group 102\",\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\"\n}]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instrument_groups",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instrument_groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateInstrumentGroupBulk_Object",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('INSTRUMENTGROUP_ARRAY_SCHEMA'))",
									"    )",
									"});"
								],
								"type": "text/javascript",
								"id": "2fb0d762-f9b7-4876-8384-6a62f702a87a"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Instrument Group 500\",\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\n    \"description\": \"This is a sample instrument group created by integration tests\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instrument_groups",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instrument_groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateInstrumentGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('INSTRUMENTGROUP_OBJ_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "2c5ae44f-a4f9-46db-bfe0-65d9821d2af8"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"d0916e8a-39a6-4f2f-bd31-879881f8b40c\",\n    \"name\": \"Updated Name for Instrument Group 1\",\n    \"description\": \"A sample instrument group created by integration tests\",\n    \"project_id\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instrument_groups/d0916e8a-39a6-4f2f-bd31-879881f8b40c",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instrument_groups",
								"d0916e8a-39a6-4f2f-bd31-879881f8b40c"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteInstrumentGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "5577e01d-9151-4cc5-82dc-45674864bb66"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instrument_groups/d0916e8a-39a6-4f2f-bd31-879881f8b40c",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instrument_groups",
								"d0916e8a-39a6-4f2f-bd31-879881f8b40c"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListInstrumentGroupInstruments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('INSTRUMENT_ARRAY_SCHEMA')))",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "32be5b3f-f1cb-476b-8e2f-5a625d4fcfe2"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/instrument_groups/d0916e8a-39a6-4f2f-bd31-879881f8b40c/instruments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instrument_groups",
								"d0916e8a-39a6-4f2f-bd31-879881f8b40c",
								"instruments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Instrument to InstrumentGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201])",
									"});"
								],
								"type": "text/javascript",
								"id": "b07d5915-6dd6-4ab0-8b04-b9ef015eb583"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"id\": \"9e8f2ca4-4037-45a4-aaca-d9e598877439\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instrument_groups/d0916e8a-39a6-4f2f-bd31-879881f8b40c/instruments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instrument_groups",
								"d0916e8a-39a6-4f2f-bd31-879881f8b40c",
								"instruments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Instrument from InstrumentGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "0a1efe6a-e243-46f6-92c0-502ac41452bb"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instrument_groups/d0916e8a-39a6-4f2f-bd31-879881f8b40c/instruments/9e8f2ca4-4037-45a4-aaca-d9e598877439",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instrument_groups",
								"d0916e8a-39a6-4f2f-bd31-879881f8b40c",
								"instruments",
								"9e8f2ca4-4037-45a4-aaca-d9e598877439"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Plot Configurations",
			"item": [
				{
					"name": "GetPlotConfiguration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"timeseries_id\": {",
									"            \"type\": \"array\",",
									"            \"items\": { \"type\": \"string\" },",
									"        },",
									"        \"slug\": { \"type\": \"string\" },",
									"        \"name\": { \"type\": \"string\" },",
									"        \"creator\": { \"type\": \"string\" },",
									"        \"create_date\": { \"type\": \"string\", \"format\": \"date-time\" },",
									"        \"updater\": {  \"type\": [\"string\", \"null\"] },",
									"        \"update_date\": { \"type\": [\"string\", \"null\"], \"format\": \"date-time\" },",
									"        \"project_id\": { \"type\": [\"string\", \"null\"] },",
									"    },",
									"    \"required\": [\"id\", \"slug\", \"name\", \"creator\", \"create_date\", \"updater\", \"update_date\", \"project_id\", \"timeseries_id\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"pm.globals.set('PLOT_CONFIGURATION_OBJ_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "f903da5e-df6f-446a-9dfd-656dc5147a73"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/plot_configurations/64879f68-6a2c-4d78-8e8b-5e9b9d2e0d6a",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"plot_configurations",
								"64879f68-6a2c-4d78-8e8b-5e9b9d2e0d6a"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListPlotConfigurations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// schema validator",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('PLOT_CONFIGURATION_OBJ_SCHEMA'))",
									"}",
									"",
									"pm.globals.set('PLOT_CONFIGURATION_ARRAY_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "31cb2315-41c9-4c6f-ab3e-d4084a7859ed"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/plot_configurations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"plot_configurations"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdatePlotConfiguration - Remove Timeseries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(JSON.parse(pm.globals.get('PLOT_CONFIGURATION_OBJ_SCHEMA')))",
									"});"
								],
								"type": "text/javascript",
								"id": "9c37784b-33f3-429b-bc93-ec7d20962a67"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"64879f68-6a2c-4d78-8e8b-5e9b9d2e0d6a\",\n    \"name\": \"PZ-1A PLOT\",\n    \"slug\": \"pz-1a-plot\",\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\n    \"timeseries_id\": [\n        \"9a3864a8-8766-4bfa-bad1-0328b166f6a8\"\n    ],\n    \"creator\": \"00000000-0000-0000-0000-000000000000\",\n    \"create_date\": \"2021-02-26T15:54:18.982835Z\",\n    \"updater\": null,\n    \"update_date\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/plot_configurations/64879f68-6a2c-4d78-8e8b-5e9b9d2e0d6a",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"plot_configurations",
								"64879f68-6a2c-4d78-8e8b-5e9b9d2e0d6a"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdatePlotConfiguration - Add Many Timeseries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(JSON.parse(pm.globals.get('PLOT_CONFIGURATION_OBJ_SCHEMA')))",
									"});"
								],
								"type": "text/javascript",
								"id": "38f3028a-7df4-4498-a262-174531bade9d"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"64879f68-6a2c-4d78-8e8b-5e9b9d2e0d6a\",\n    \"name\": \"PZ-1A PLOT\",\n    \"slug\": \"pz-1a-plot\",\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\n    \"timeseries_id\": [\n        \"8f4ca3a3-5971-4597-bd6f-332d1cf5af7c\",\n        \"869465fc-dc1e-445e-81f4-9979b5fadda9\",\n        \"9a3864a8-8766-4bfa-bad1-0328b166f6a8\",\n        \"7ee902a3-56d0-4acf-8956-67ac82c03a96\",\n        \"d9697351-3a38-4194-9ac4-41541927e475\",\n        \"22a734d6-dc24-451d-a462-43a32f335ae8\",\n        \"14247bc8-b264-4857-836f-182d47ebb39d\"\n    ],\n    \"creator\": \"00000000-0000-0000-0000-000000000000\",\n    \"create_date\": \"2021-02-26T16:21:07.925124Z\",\n    \"updater\": null,\n    \"update_date\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/plot_configurations/64879f68-6a2c-4d78-8e8b-5e9b9d2e0d6a",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"plot_configurations",
								"64879f68-6a2c-4d78-8e8b-5e9b9d2e0d6a"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreatePlotConfiguration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(JSON.parse(pm.globals.get('PLOT_CONFIGURATION_OBJ_SCHEMA')))",
									"});"
								],
								"type": "text/javascript",
								"id": "9d696d74-cbf7-4de6-a67f-52b9bffb468c"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Create Plot Configuration\",\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\n    \"timeseries_id\": [\n        \"8f4ca3a3-5971-4597-bd6f-332d1cf5af7c\",\n        \"869465fc-dc1e-445e-81f4-9979b5fadda9\",\n        \"9a3864a8-8766-4bfa-bad1-0328b166f6a8\",\n        \"7ee902a3-56d0-4acf-8956-67ac82c03a96\",\n        \"d9697351-3a38-4194-9ac4-41541927e475\",\n        \"22a734d6-dc24-451d-a462-43a32f335ae8\",\n        \"14247bc8-b264-4857-836f-182d47ebb39d\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/plot_configurations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"plot_configurations"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeletePlotConfiguration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "9f1820c0-3fa5-4933-bd18-5ee4c98c22ef"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/plot_configurations/64879f68-6a2c-4d78-8e8b-5e9b9d2e0d6a",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"plot_configurations",
								"64879f68-6a2c-4d78-8e8b-5e9b9d2e0d6a"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Projects",
			"item": [
				{
					"name": "GetProject",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"image\": { \"type\": [\"string\", \"null\"]},",
									"        \"office_id\": { \"type\": [ \"string\", \"null\" ]},",
									"        \"slug\": { \"type\": \"string\" },",
									"        \"name\": { \"type\": \"string\" },",
									"        \"creator\": { \"type\": \"string\" },",
									"        \"create_date\": { \"type\": \"string\", \"format\": \"date-time\" },",
									"        \"updater\": {  \"type\": [\"string\", \"null\"] },",
									"        \"update_date\": { \"type\": [\"string\", \"null\"], \"format\": \"date-time\" },",
									"        \"instrument_count\": {\"type\": \"number\"},",
									"        \"instrument_group_count\": {\"type\": \"number\"},",
									"        \"timeseries\": {",
									"            \"type\": \"array\",",
									"            \"items\": { \"type\": \"string\" },",
									"        },",
									"    },",
									"    \"required\": [\"id\", \"image\", \"office_id\", \"slug\", \"name\", \"creator\", \"create_date\", \"updater\", \"update_date\", \"instrument_count\", \"instrument_group_count\", \"timeseries\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"pm.globals.set('PROJECT_OBJ_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "bc09c0a2-46e8-4c7d-9832-a2c9d31f2b6f"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateProjectTimeseries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"id": "8dbfda2e-070c-467f-acd9-7dd563e8dae6"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/timeseries/8f4ca3a3-5971-4597-bd6f-332d1cf5af7c",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"timeseries",
								"8f4ca3a3-5971-4597-bd6f-332d1cf5af7c"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteProjectTimeseries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"id": "d749c046-0c40-41df-ac69-a2de69c7be09"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/timeseries/8f4ca3a3-5971-4597-bd6f-332d1cf5af7c",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"timeseries",
								"8f4ca3a3-5971-4597-bd6f-332d1cf5af7c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetProjectCount",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"project_count\": { \"type\": \"number\" }",
									"    },",
									"    \"required\": [\"project_count\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "d0ca287d-50cd-4bcc-8ebb-f3624eb99ada"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/count",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListProjects",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('PROJECT_OBJ_SCHEMA'))",
									"}",
									"",
									"pm.globals.set('PROJECT_ARRAY_SCHEMA', JSON.stringify(schema))",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "57bb4055-fd77-4308-ad2d-07daa7d1c0f4"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateProjectBulk_Array",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7406bcc1-2ffa-452c-b9c7-6525a9abc22e",
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_existing_admin}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[{\n    \"name\": \"Test Project 100000\",\n    \"federal_id\": null\n},\n{\n    \"name\": \"Test Project 100001\",\n    \"federal_id\": null\n},\n{\n    \"name\": \"Test Project 100002\",\n    \"federal_id\": null\n}\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateProjectBulk_Object",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a1f1e6d5-499f-4aa0-b478-49feafdd0fde",
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_existing_admin}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Project 500000\",\n    \"federal_id\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateProject",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('PROJECT_OBJ_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "3ed7a88a-b8f7-44a2-b05b-f77619daae99"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\n    \"federal_id\": null,\n    \"name\": \"Blue Water Reservoir\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteProject",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "90592fdd-a523-45cd-9853-bb81bbd2bc4d"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListProjectInstrumentGroups",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('INSTRUMENTGROUP_ARRAY_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "0041644b-69ea-4d7d-ad19-107b49d8b78d"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instrument_groups",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instrument_groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListProjectInstruments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('INSTRUMENT_ARRAY_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "28d403ea-1a81-4d78-97cb-e64887d8a885"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListProjectInstrumentNames",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": { \"type\": \"string\" }",
									"}",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "427fb707-8897-47cb-b9ae-d40fca1c274a"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments/names",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments",
								"names"
							]
						}
					},
					"response": []
				}
			],
			"description": "Project Endpoint Tests",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Timeseries",
			"item": [
				{
					"name": "GetTimeseries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"slug\": { \"type\": \"string\" },",
									"        \"name\": { \"type\": \"string\" },",
									"        \"variable\": {\"type\": \"string\"},",
									"        \"project_id\": {\"type\": \"string\"},",
									"        \"project\": {\"type\": \"string\"},",
									"        \"project_slug\": {\"type\": \"string\"},",
									"        \"instrument_id\": { \"type\": \"string\" },",
									"        \"instrument\": { \"type\": \"string\"  },",
									"        \"instrument_slug\": {\"type\": \"string\"},",
									"        \"parameter_id\": { \"type\": \"string\" },",
									"        \"parameter\": { \"type\": \"string\"  },",
									"        \"unit_id\": { \"type\": \"string\" },",
									"        \"unit\": { \"type\": \"string\"  },",
									"        \"is_computed\": { \"type\": \"boolean\" }",
									"    },",
									"    \"required\": [\"id\", \"slug\", \"name\", \"variable\", \"instrument_id\", \"parameter_id\", \"unit_id\", \"is_computed\"],",
									"    \"additionalProperties\": false",
									"};",
									"",
									"pm.globals.set('TIMESERIES_OBJ_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});"
								],
								"type": "text/javascript",
								"id": "0aebeba2-7c74-417e-bb39-9cec66529b5e"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/timeseries/869465fc-dc1e-445e-81f4-9979b5fadda9",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"timeseries",
								"869465fc-dc1e-445e-81f4-9979b5fadda9"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListTimeseries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('TIMESERIES_OBJ_SCHEMA'))",
									"}",
									"",
									"pm.globals.set('TIMESERIES_ARRAY_SCHEMA', JSON.stringify(schema))",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "ae7dd664-1e03-40b5-8aab-6a123a7456a6"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/timeseries",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"timeseries"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListProjectTimeseries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('TIMESERIES_OBJ_SCHEMA'))",
									"}",
									"",
									"pm.globals.set('TIMESERIES_ARRAY_SCHEMA', JSON.stringify(schema))",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "ab845e2c-c869-4675-947f-4b38590d0e42"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/timeseries",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"timeseries"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListInstrumentGroupTimeseries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('TIMESERIES_OBJ_SCHEMA'))",
									"}",
									"",
									"pm.globals.set('TIMESERIES_ARRAY_SCHEMA', JSON.stringify(schema))",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "2f21a60e-70c7-4e18-a2af-c06437484fa4"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/instrument_groups/d0916e8a-39a6-4f2f-bd31-879881f8b40c/timeseries",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instrument_groups",
								"d0916e8a-39a6-4f2f-bd31-879881f8b40c",
								"timeseries"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListTimeseriesMeasurements",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"// NOTE: timeseries_measurement may not have id when posted",
									"var timeseries_measurement_schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"time\": { \"type\": \"string\" },",
									"        \"value\": { \"type\": \"number\" }",
									"    },",
									"    \"required\": [\"time\", \"value\"],",
									"    \"additionalProperties\": true",
									"};",
									"",
									"// timeseries_measurement_collection",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"timeseries_id\": {\"type\": \"string\"},",
									"        \"items\": { ",
									"            \"type\": \"array\",",
									"            \"items\": timeseries_measurement_schema",
									"        }",
									"    },",
									"    \"required\": [\"items\", \"timeseries_id\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"var schema2 = {\"type\": \"array\", \"items\": schema}",
									"",
									"pm.globals.set('TIMESERIES_MEASUREMENT_COLLECTION_OBJECT_SCHEMA', JSON.stringify(schema)",
									")",
									"pm.globals.set('TIMESERIES_MEASUREMENT_COLLECTION_ARRAY_SCHEMA', JSON.stringify(schema2)",
									")",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", () => {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "7838a5cb-e7d4-4329-8c0a-07b64561ebca"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/timeseries/869465fc-dc1e-445e-81f4-9979b5fadda9/measurements?after=1900-01-01T00:00:00.00Z&before=2021-01-01T00:00:00.00Z",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"timeseries",
								"869465fc-dc1e-445e-81f4-9979b5fadda9",
								"measurements"
							],
							"query": [
								{
									"key": "after",
									"value": "1900-01-01T00:00:00.00Z"
								},
								{
									"key": "before",
									"value": "2021-01-01T00:00:00.00Z"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateTimeseries_Object",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('TIMESERIES_ARRAY_SCHEMA'))",
									"    )",
									"});"
								],
								"type": "text/javascript",
								"id": "3ef1d1c5-4aa0-4b87-a167-87287e19b27f"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Timeseries 4\",\n    \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n    \"parameter_id\": \"068b59b0-aafb-4c98-ae4b-ed0365a6fbac\",\n    \"unit_id\": \"f777f2e2-5e32-424e-a1ca-19d16cd8abce\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/timeseries",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"timeseries"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateTimeseries_Array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('TIMESERIES_ARRAY_SCHEMA'))",
									"    )",
									"});"
								],
								"type": "text/javascript",
								"id": "4581bf59-fe64-473f-8045-34a1604e4e28"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[{\n    \"name\": \"Test Timeseries 5\",\n    \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n    \"parameter_id\": \"068b59b0-aafb-4c98-ae4b-ed0365a6fbac\",\n    \"unit_id\": \"f777f2e2-5e32-424e-a1ca-19d16cd8abce\"\n},\n{\n    \"name\": \"Test Timeseries 6\",\n    \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n    \"parameter_id\": \"068b59b0-aafb-4c98-ae4b-ed0365a6fbac\",\n    \"unit_id\": \"f777f2e2-5e32-424e-a1ca-19d16cd8abce\"\n},\n{\n    \"name\": \"Test Timeseries 7\",\n    \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n    \"parameter_id\": \"068b59b0-aafb-4c98-ae4b-ed0365a6fbac\",\n    \"unit_id\": \"f777f2e2-5e32-424e-a1ca-19d16cd8abce\"\n}]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/timeseries",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"timeseries"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateTimeseriesMeasurements_Object",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"id": "8200349e-e958-486d-9222-67fd3074f690"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"timeseries_id\": \"869465fc-dc1e-445e-81f4-9979b5fadda9\",\n    \"items\": [\n    \t    {\"time\": \"2020-06-01T00:00:00Z\", \"value\": 10.00},\n            {\"time\": \"2020-06-02T01:00:00Z\", \"value\": 11.10},\n            {\"time\": \"2020-06-03T02:00:00Z\", \"value\": 10.20},\n            {\"time\": \"2020-06-04T03:00:00Z\", \"value\": 10.30},\n            {\"time\": \"2020-06-05T04:00:00Z\", \"value\": 10.40}\n    \t]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/timeseries_measurements",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"timeseries_measurements"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateTimeseriesMeasurements_Array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"id": "9eba1755-68be-417d-914a-7930fe0c27d8"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"timeseries_id\": \"869465fc-dc1e-445e-81f4-9979b5fadda9\",\n        \"items\": [\n\t\t{\"time\": \"2020-06-01T00:00:00Z\", \"value\": 10.00},\n\t        {\"time\": \"2020-06-02T01:00:00Z\", \"value\": 11.10},\n\t        {\"time\": \"2020-06-03T02:00:00Z\", \"value\": 10.20},\n\t        {\"time\": \"2020-06-04T03:00:00Z\", \"value\": 10.30},\n\t        {\"time\": \"2020-06-05T04:00:00Z\", \"value\": 10.40}\n\t]\n    },\n    {\n        \"timeseries_id\": \"9a3864a8-8766-4bfa-bad1-0328b166f6a8\",\n        \"items\": [\n\t\t{\"time\": \"2020-06-01T00:00:00Z\", \"value\": 10.00},\n\t        {\"time\": \"2020-06-02T01:00:00Z\", \"value\": 11.10},\n\t        {\"time\": \"2020-06-03T02:00:00Z\", \"value\": 10.20},\n\t        {\"time\": \"2020-06-04T03:00:00Z\", \"value\": 10.30},\n\t        {\"time\": \"2020-06-05T04:00:00Z\", \"value\": 10.40}\n\t]\n    },\n    {\n        \"timeseries_id\": \"7ee902a3-56d0-4acf-8956-67ac82c03a96\",\n        \"items\": [\n\t\t{\"time\": \"2020-06-01T00:00:00Z\", \"value\": 10.00},\n\t        {\"time\": \"2020-06-02T01:00:00Z\", \"value\": 11.10},\n\t        {\"time\": \"2020-06-03T02:00:00Z\", \"value\": 10.20},\n\t        {\"time\": \"2020-06-04T03:00:00Z\", \"value\": 10.30},\n\t        {\"time\": \"2020-06-05T04:00:00Z\", \"value\": 10.40}\n\t]\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/timeseries_measurements",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"timeseries_measurements"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateTimeseries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('TIMESERIES_OBJ_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "f7d4d524-7446-4f31-84c4-a6d3eba49783"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"869465fc-dc1e-445e-81f4-9979b5fadda9\",\n    \"slug\": \"test-timeseries-1\",\n    \"name\": \"New Name for Test Timeseries 1\",\n    \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n    \"instrument\": \"Demo Piezometer 1\",\n    \"parameter_id\": \"068b59b0-aafb-4c98-ae4b-ed0365a6fbac\",\n    \"parameter\": \"stage\",\n    \"unit_id\": \"f777f2e2-5e32-424e-a1ca-19d16cd8abce\",\n    \"unit\": \"feet\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/timeseries/869465fc-dc1e-445e-81f4-9979b5fadda9",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"timeseries",
								"869465fc-dc1e-445e-81f4-9979b5fadda9"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteTimeseries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "d4df630a-8dbf-41dd-ac1f-4a61e23bda89"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/timeseries/869465fc-dc1e-445e-81f4-9979b5fadda9",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"timeseries",
								"869465fc-dc1e-445e-81f4-9979b5fadda9"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Instrument Constants",
			"item": [
				{
					"name": "ListInstrumentConstants",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "88717df4-d262-4d15-8240-23fa0dfbfc8e"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/constants",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"constants"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateInstrumentConstant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('TIMESERIES_ARRAY_SCHEMA'))",
									"    )",
									"});"
								],
								"type": "text/javascript",
								"id": "0935540a-6273-4832-9dfc-0e8804e0c845"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Instrument Constant\",\n    \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n    \"parameter_id\": \"068b59b0-aafb-4c98-ae4b-ed0365a6fbac\",\n    \"unit_id\": \"f777f2e2-5e32-424e-a1ca-19d16cd8abce\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/constants",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"constants"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteInstrumentConstant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "7073f167-edea-4b6f-b4ae-4e98bb06129e"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/constants/14247bc8-b264-4857-836f-182d47ebb39d",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"constants",
								"14247bc8-b264-4857-836f-182d47ebb39d"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Misc",
			"item": [
				{
					"name": "GetDomains",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": {",
									"        \"type\": \"object\",",
									"        \"properties\": {",
									"            \"id\": { \"type\": \"string\" },",
									"            \"group\": { \"type\": \"string\" },",
									"            \"value\": { \"type\": \"string\" },",
									"            \"description\": { \"type\": [\"string\", \"null\"] },",
									"        },",
									"        \"required\": [\"id\", \"group\", \"value\", \"description\"],",
									"        \"additionalProperties\": false",
									"    }",
									"}",
									"pm.globals.set('DOMAIN_ARRAY_SCHEMA', schema);",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "a135a318-14ad-4d86-89b8-5cce9300c65b"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/domains",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"domains"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetHome",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"instrument_count\": { \"type\": \"number\" },",
									"        \"instrument_group_count\": { \"type\": \"number\" },",
									"        \"project_count\": { \"type\": \"number\" },",
									"        \"new_instruments_7d\": { \"type\": \"number\" },",
									"        \"new_measurements_2h\": { \"type\": \"number\" }",
									"    },",
									"    \"required\": [\"instrument_count\", \"instrument_group_count\", \"project_count\", \"new_instruments_7d\", \"new_measurements_2h\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});"
								],
								"type": "text/javascript",
								"id": "501a78d6-d81e-4554-9291-957d391e60ee"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/home",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"home"
							]
						}
					},
					"response": []
				},
				{
					"name": "DoHeartbeat",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/heartbeat",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"heartbeat"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetLatestHeartbeat",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/heartbeats/latest",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"heartbeats",
								"latest"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Units",
			"item": [
				{
					"name": "ListUnits",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": {",
									"        \"type\": \"object\",",
									"        \"properties\": {",
									"            \"id\": { \"type\": \"string\" },",
									"            \"name\": { \"type\": \"string\" },",
									"            \"abbreviation\": { \"type\": \"string\" },",
									"            \"unit_family_id\": { \"type\": \"string\" },",
									"            \"unit_family\": { \"type\": \"string\" },",
									"            \"measure_id\": { \"type\": \"string\" },",
									"            \"measure\": { \"type\": [\"string\", \"null\"] },",
									"        },",
									"        \"required\": [\"id\", \"name\", \"abbreviation\", \"unit_family_id\", \"unit_family\", \"measure_id\", \"measure\"],",
									"        \"additionalProperties\": false",
									"    }",
									"}",
									"pm.globals.set('UNIT_ARRAY_SCHEMA', schema);",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "9ece258b-a59d-48e1-96d5-726e925d6f87"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/units",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"units"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "explorer",
			"item": [
				{
					"name": "PostExplorer Query By InstrumetID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cbfea955-200f-47aa-ae92-5876b700ebac",
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"9e8f2ca4-4037-45a4-aaca-d9e598877439\", \"a7540f69-c41e-43b3-b655-6e44097edb7e\"]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/explorer",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"explorer"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostExplorer Query By InstrumetID With Date Filters",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d401c121-5ad8-4afb-a66e-06604d8404d1",
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"9e8f2ca4-4037-45a4-aaca-d9e598877439\", \"a7540f69-c41e-43b3-b655-6e44097edb7e\"]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/explorer?after=2020-03-03T00:00:00Z&before=2021-05-27T00:32:45Z",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"explorer"
							],
							"query": [
								{
									"key": "after",
									"value": "2020-03-03T00:00:00Z"
								},
								{
									"key": "before",
									"value": "2021-05-27T00:32:45Z"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "Tests for explorer endpoints",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Alert Configs",
			"item": [
				{
					"name": "GetAlertConfig",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"instrument_id\": { \"type\": \"string\" },",
									"        \"name\": { \"type\": \"string\" },",
									"        \"body\": { \"type\": \"string\" },",
									"        \"formula\": { \"type\": \"string\" },",
									"        \"schedule\": { \"type\": \"string\" },",
									"        \"creator\": { \"type\": \"string\" },",
									"        \"create_date\": { \"type\": \"string\", \"format\": \"date-time\" },",
									"        \"updater\": {  \"type\": [\"string\", \"null\"] },",
									"        \"update_date\": { \"type\": [\"string\", \"null\"], \"format\": \"date-time\" }",
									"    },",
									"    \"required\": [\"id\", \"instrument_id\", \"name\", \"body\", \"formula\", \"schedule\", \"creator\", \"create_date\", \"updater\", \"update_date\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"pm.globals.set('ALERTCONFIG_OBJ_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "1efea82d-ab9a-46aa-b16f-f7c4ea51867c"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/alert_configs/243e9d32-2cba-4f12-9abe-63adc09fc5dd",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"alert_configs",
								"243e9d32-2cba-4f12-9abe-63adc09fc5dd"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListInstrumentAlertConfigs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// schema validator",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('ALERTCONFIG_OBJ_SCHEMA'))",
									"}",
									"",
									"pm.globals.set('ALERTCONFIG_ARRAY_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "0c0cc2dd-4b7a-4d9d-9168-302750acb878"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/alert_configs",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"alert_configs"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateAlertConfig_Array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('ALERTCONFIG_ARRAY_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "d6d4e56a-57f8-467f-9e4f-b135bc263da7"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n    \"name\": \"Test Alert Condition 2\",\n    \"body\": \"Alert Condition 2!  Sincerely, Midas\",\n    \"formula\": \"[distance-to-water] <= 2\",\n    \"schedule\": \"0,10,20,30,40,50 * * * *\"\n},\n{\n    \"name\": \"Test Alert Condition 3\",\n    \"body\": \"Alert Condition 3!  Sincerely, Midas\",\n    \"formula\": \"[distance-to-water] <= 3\",\n    \"schedule\": \"0,10,20,30,40,50 * * * *\"\n},\n{\n    \"name\": \"Test Alert Condition 4\",\n    \"body\": \"Alert Condition 1!  Sincerely, Midas\",\n    \"formula\": \"[distance-to-water] <= 4\",\n    \"schedule\": \"0,10,20,30,40,50 * * * *\"\n}\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/alert_configs",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"alert_configs"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateAlertConfig_Object",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('ALERTCONFIG_ARRAY_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "a8a189da-bd06-460c-a093-69d188f610b5"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n    \"name\": \"Test Alert Condition 1\",\n    \"body\": \"Alert Condition 1!  Sincerely, Midas\",\n    \"formula\": \"[distance-to-water] <= 2\",\n    \"schedule\": \"0,10,20,30,40,50 * * * *\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/alert_configs",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"alert_configs"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateAlertConfig",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('ALERTCONFIG_OBJ_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "f7b0c2eb-d326-4acb-b9fc-b0f035d622ac"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"243e9d32-2cba-4f12-9abe-63adc09fc5dd\",\n    \"name\": \"Test Alert Condition BRAVO\",\n    \"body\": \"Alert Condition BRAVO Has Occurred!  Sincerely, Midas\",\n    \"formula\": \"[distance-to-water] <= 0\",\n    \"schedule\": \"0,10,20,30,40,50 * * * *\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/alert_configs/243e9d32-2cba-4f12-9abe-63adc09fc5dd",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"alert_configs",
								"243e9d32-2cba-4f12-9abe-63adc09fc5dd"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteAlertConfig",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "1d6b3cd2-ff4c-49a0-b404-08eae1fcbed5"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments/9e8f2ca4-4037-45a4-aaca-d9e598877439/alert_configs/1efd2d85-d3ee-4388-85a0-f824a761ff8b",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments",
								"9e8f2ca4-4037-45a4-aaca-d9e598877439",
								"alert_configs",
								"1efd2d85-d3ee-4388-85a0-f824a761ff8b"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Alert Subscriptions",
			"item": [
				{
					"name": "SubscribeProfileToInstrumentAlert",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// schema validation",
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"alert_config_id\": { \"type\": \"string\" },",
									"        \"profile_id\": { \"type\": \"string\" },",
									"        \"mute_ui\": { \"type\": \"boolean\" },",
									"        \"mute_notify\": { \"type\": \"boolean\" }",
									"    },",
									"    \"required\": [\"id\", \"alert_config_id\", \"profile_id\", \"mute_ui\", \"mute_notify\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"pm.globals.set('ALERT_SUBSCRIPTION_OBJECT', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "5f5a3c37-8834-4d9a-8c8c-e4d787fd8d91"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/alert_configs/6f3dfe9f-4664-4c78-931f-32ffac6d2d43/subscribe",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"alert_configs",
								"6f3dfe9f-4664-4c78-931f-32ffac6d2d43",
								"subscribe"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListMyInstrumentAlertSubscriptions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('ALERT_SUBSCRIPTION_OBJECT'))",
									"}",
									"",
									"pm.globals.set('ALERT_SUBSCRIPTION_ARRAY', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});"
								],
								"type": "text/javascript",
								"id": "99792bd1-d586-4784-a611-a055e4e117c8"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/my_alert_subscriptions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"my_alert_subscriptions"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateInstrumentAlertSubscription",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// NOTE: No Test Coverage At Present on this endpoint.",
									"// Revisit at a later date; There are challenges with dynamically created Profile ID and Subscription IDs"
								],
								"type": "text/javascript",
								"id": "de4783e6-3714-4d6b-9acf-eec7110dc943"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"197d6140-f273-4c50-a87f-dec3f809663b\",\n    \"alert_config_id\": \"243e9d32-2cba-4f12-9abe-63adc09fc5dd\",\n    \"profile_id\": \"96c01ff3-edc9-44f0-8690-191cc2281a12\",\n    \"mute_ui\": false,\n    \"mute_notify\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/alert_subscriptions/197d6140-f273-4c50-a87f-dec3f809663b",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"alert_subscriptions",
								"197d6140-f273-4c50-a87f-dec3f809663b"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListAlertsForInstrument",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"alert_config_id\": { \"type\": \"string\" },",
									"        \"project_id\": { \"type\": \"string\" },",
									"        \"instrument_id\": { \"type\": \"string\" },",
									"        \"project_name\": { \"type\": \"string\" },",
									"        \"instrument_name\": { \"type\": \"string\" },",
									"        \"name\": { \"type\": \"string\" },",
									"        \"body\": { \"type\": \"string\" },",
									"        \"create_date\": { \"type\": \"string\", \"format\": \"date-time\" }",
									"    },",
									"    \"required\": [\"id\", \"alert_config_id\", \"project_id\", \"instrument_id\", \"project_name\", \"instrument_name\", \"name\", \"body\", \"create_date\"],",
									"    \"additionalProperties\": true",
									"}",
									"// additionalProperties: true because alert can also contain a property \"read\" when fetched from /my_alerts",
									"",
									"pm.globals.set('ALERT_OBJ_SCHEMA', JSON.stringify(schema));",
									"",
									"var list_schema = {",
									"    \"type\": \"array\",",
									"    \"items\": schema",
									"};",
									"",
									"pm.globals.set('ALERT_ARRAY_SCHEMA', JSON.stringify(list_schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(list_schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "b5f2a1f4-89b5-4c8a-a38a-98bf68690c6b"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/alerts",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"alerts"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListMyAlerts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"     pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('ALERT_ARRAY_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "761a313f-ae16-4d69-93be-2abc4fc996f4"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/my_alerts",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"my_alerts"
							]
						}
					},
					"response": []
				},
				{
					"name": "DoAlertRead",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"     pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('ALERT_OBJ_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "9ae31988-d204-40a2-b0e1-4c63ae1e4c18"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/my_alerts/e070be13-ef17-40f3-99c8-fef3ee1b9fb5/read",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"my_alerts",
								"e070be13-ef17-40f3-99c8-fef3ee1b9fb5",
								"read"
							]
						}
					},
					"response": []
				},
				{
					"name": "DoAlertUnread",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"     pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('ALERT_OBJ_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "d61a6ab8-5c09-45c3-9254-7f8b97219791"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/my_alerts/e070be13-ef17-40f3-99c8-fef3ee1b9fb5/unread",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"my_alerts",
								"e070be13-ef17-40f3-99c8-fef3ee1b9fb5",
								"unread"
							]
						}
					},
					"response": []
				},
				{
					"name": "UnsubscribeProfileToInstrumentAlert",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "43835c35-ff12-4341-a670-d9b218dffa07"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/alert_configs/6f3dfe9f-4664-4c78-931f-32ffac6d2d43/unsubscribe",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"alert_configs",
								"6f3dfe9f-4664-4c78-931f-32ffac6d2d43",
								"unsubscribe"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Collection Groups",
			"item": [
				{
					"name": "ListCollectionGroups",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var obj_schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"project_id\": { \"type\": \"string\" },",
									"        \"slug\": { \"type\": \"string\" },",
									"        \"name\": { \"type\": \"string\" },",
									"        \"creator\": { \"type\": \"string\" },",
									"        \"create_date\": { \"type\": \"string\", \"format\": \"date-time\" },",
									"        \"updater\": {  \"type\": [\"string\", \"null\"] },",
									"        \"update_date\": { \"type\": [\"string\", \"null\"], \"format\": \"date-time\" }",
									"    },",
									"    \"required\": [\"id\", \"project_id\", \"name\", \"slug\", \"creator\", \"create_date\", \"updater\", \"update_date\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"var array_schema = {",
									"    \"type\": \"array\",",
									"    \"items\": obj_schema",
									"}",
									"",
									"pm.globals.set('COLLECTIONGROUP_OBJ_SCHEMA', JSON.stringify(obj_schema));",
									"",
									"pm.globals.set('COLLECTIONGROUP_ARRAY_SCHEMA', JSON.stringify(array_schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(array_schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "76cc1527-d744-4ab0-b663-fc68f67ef048"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/collection_groups",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"collection_groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetCollectionGroupDetails",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"project_id\": { \"type\": \"string\" },",
									"        \"slug\": { \"type\": \"string\" },",
									"        \"name\": { \"type\": \"string\" },",
									"        \"creator\": { \"type\": \"string\" },",
									"        \"create_date\": { \"type\": \"string\", \"format\": \"date-time\" },",
									"        \"updater\": {  \"type\": [\"string\", \"null\"] },",
									"        \"update_date\": { \"type\": [\"string\", \"null\"], \"format\": \"date-time\" },",
									"        \"timeseries\": {",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"                \"type\": \"object\",",
									"                \"properties\": {",
									"                    \"id\": { \"type\": \"string\" },",
									"                    \"slug\": { \"type\": \"string\" },",
									"                    \"name\": { \"type\": \"string\" },",
									"                    \"variable\": {\"type\": \"string\"},",
									"                    \"project_id\": {\"type\": \"string\"},",
									"                    \"project\": {\"type\": \"string\"},",
									"                    \"project_slug\": {\"type\": \"string\"},",
									"                    \"instrument_id\": { \"type\": \"string\" },",
									"                    \"instrument\": { \"type\": \"string\"  },",
									"                    \"instrument_slug\": {\"type\": \"string\"},",
									"                    \"parameter_id\": { \"type\": \"string\" },",
									"                    \"parameter\": { \"type\": \"string\"  },",
									"                    \"unit_id\": { \"type\": \"string\" },",
									"                    \"unit\": { \"type\": \"string\"  },",
									"                    \"latest_time\": {\"type\": \"string\", \"format\": \"date-time\"},",
									"                    \"latest_value\": {\"type\": \"number\"},",
									"                    \"is_computed\": {\"type\": \"boolean\"},",
									"                },",
									"                \"required\": [\"id\", \"slug\", \"name\", \"variable\", \"project_id\", \"project\", \"project_slug\", \"instrument_id\", \"instrument\", \"instrument_slug\", \"parameter_id\", \"parameter\", \"unit_id\", \"unit\", \"latest_time\", \"latest_value\", \"is_computed\"],",
									"                \"additionalProperties\": false",
									"            },",
									"        },",
									"    },",
									"    \"required\": [\"id\", \"project_id\", \"name\", \"slug\", \"creator\", \"create_date\", \"updater\", \"update_date\", \"timeseries\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"pm.globals.set('COLLECTIONGROUP_DETAILS_OBJ_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "836267c1-56ac-4b6a-b1e2-be3062abe3cc"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/collection_groups/30b32cb1-0936-42c4-95d1-63a7832a57db",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"collection_groups",
								"30b32cb1-0936-42c4-95d1-63a7832a57db"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteCollectionGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "246f8099-76cd-45b2-9653-c0af4e5874fa"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/collection_groups/1519eaea-1799-4375-aa37-0e35aa654643",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"collection_groups",
								"1519eaea-1799-4375-aa37-0e35aa654643"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwt_existing_admin}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "06c2a212-d078-44e5-8dc0-3470776c93b7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "065c13d2-37a7-4499-a0d3-a77109e1b025",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}