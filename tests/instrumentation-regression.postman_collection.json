{
	"info": {
		"_postman_id": "ca9f19e5-0130-4d25-b450-1ed4d70df622",
		"name": "instrumentation-regression",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Profiles",
			"item": [
				{
					"name": "CreateProfile",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b86437c1-d919-4896-bdee-583f1728b7dc",
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_new_user}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"testuser\",\n    \"email\": \"test.user@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/profiles",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetMyProfile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"username\": { \"type\": \"string\" },",
									"        \"email\": { \"type\": \"string\" },",
									"    },",
									"    \"required\": [\"id\", \"username\", \"email\"],",
									"    \"additionalProperties\": true",
									"}",
									"",
									"pm.globals.set('PROFILE_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "2d2efd18-66b8-44b3-873b-880e9d3d3432"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/my_profile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"my_profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateToken",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/my_tokens",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"my_tokens"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "ProjectMembership",
			"item": [
				{
					"name": "ListProjectMembers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var obj_schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"profile_id\": { \"type\": \"string\" },",
									"        \"username\": { \"type\": [\"string\"] },",
									"        \"email\": { \"type\": [\"string\"] },",
									"        \"role_id\": { \"type\": [\"string\"] },",
									"        \"role\": { \"type\": [\"string\"] }",
									"    },",
									"    \"required\": [\"id\", \"profile_id\", \"username\", \"email\", \"role_id\", \"role\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"// schema validator",
									"var array_schema = {",
									"    \"type\": \"array\",",
									"    \"items\": obj_schema",
									"}",
									"",
									"pm.globals.set('PROJECT_MEMBERSHIP_OBJECT_SCHEMA', JSON.stringify(obj_schema));",
									"pm.globals.set('PROJECT_MEMBERSHIP_ARRAY_SCHEMA', JSON.stringify(array_schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(array_schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "0abcc01a-653c-4674-9ad7-457feac4c2af"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/members",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"members"
							]
						}
					},
					"response": []
				},
				{
					"name": "RemoveProjectMemberRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "ad2d6902-ffa6-4c13-8836-c190d026dee4"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/members/57329df6-9f7a-4dad-9383-4633b452efab/roles/37f14863-8f3b-44ca-8deb-4b74ce8a8a69",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"members",
								"57329df6-9f7a-4dad-9383-4633b452efab",
								"roles",
								"37f14863-8f3b-44ca-8deb-4b74ce8a8a69"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddProjectMemberRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(JSON.parse(pm.globals.get(\"PROJECT_MEMBERSHIP_OBJECT_SCHEMA\")))",
									"});"
								],
								"type": "text/javascript",
								"id": "989610b0-2501-4e5f-98f8-77d6f25ceb00"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/members/57329df6-9f7a-4dad-9383-4633b452efab/roles/37f14863-8f3b-44ca-8deb-4b74ce8a8a69",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"members",
								"57329df6-9f7a-4dad-9383-4633b452efab",
								"roles",
								"37f14863-8f3b-44ca-8deb-4b74ce8a8a69"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Instruments",
			"item": [
				{
					"name": "GetInstrument",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"groups\": {",
									"            \"type\": \"array\",",
									"            \"items\": { \"type\": \"string\" },",
									"        },",
									"        \"constants\": {",
									"            \"type\": \"array\",",
									"            \"items\": { \"type\": \"string\" },",
									"        },",
									"        \"alert_configs\": {",
									"            \"type\": \"array\",",
									"            \"items\": { \"type\": \"string\" },",
									"        },",
									"        \"slug\": { \"type\": \"string\" },",
									"        \"name\": { \"type\": \"string\" },",
									"        \"type_id\": { \"type\": \"string\" },",
									"        \"type\": { \"type\": \"string\" },",
									"        \"status_id\": { \"type\": \"string\" },",
									"        \"status\": { \"type\": \"string\" },",
									"        \"status_time\": { \"type\": \"string\" },",
									"        \"geometry\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"type\": {",
									"                    \"type\": \"string\",",
									"                    \"pattern\": \"Point\"",
									"                },",
									"                \"coordinates\": {",
									"                    \"type\": \"array\",",
									"                    \"minItems\": 2,",
									"                    \"maxItems\": 2,",
									"                    \"items\": { \"type\": \"number\" },",
									"                }",
									"            },",
									"            \"required\": [\"type\", \"coordinates\"]",
									"        },",
									"        \"station\": { \"type\": [\"number\", \"null\"] },",
									"        \"offset\": { \"type\": [\"number\", \"null\"] },",
									"        \"creator\": { \"type\": \"string\" },",
									"        \"create_date\": { \"type\": \"string\", \"format\": \"date-time\" },",
									"        \"updater\": {  \"type\": [\"string\", \"null\"] },",
									"        \"update_date\": { \"type\": [\"string\", \"null\"], \"format\": \"date-time\" },",
									"        \"project_id\": { \"type\": [\"string\", \"null\"] },",
									"        \"nid_id\": { \"type\": [\"string\", \"null\"] },",
									"        \"usgs_id\": { \"type\": [\"string\", \"null\"] }",
									"    },",
									"    \"required\": [\"id\", \"slug\", \"name\", \"type_id\", \"type\", \"status_id\", \"status\", \"status_time\", \"geometry\", \"creator\", \"create_date\", \"updater\", \"update_date\", \"project_id\", \"station\", \"offset\", \"constants\", \"alert_configs\", \"nid_id\", \"usgs_id\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"pm.globals.set('INSTRUMENT_OBJ_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "dbb03ab9-7da0-4cf8-92e4-32845677e7f0"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetInstrumentCount",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"instrument_count\": { \"type\": \"number\" }",
									"    },",
									"    \"required\": [\"instrument_count\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "8a6cf07e-bdf7-4d7e-b6fd-012efc22f9f8"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/count",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateInstrument",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('INSTRUMENT_OBJ_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "075915b6-6883-4712-8d50-ae6e554ab054"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n    \"status_id\": \"94578354-ffdf-4119-9663-6bd4323e58f5\",\n    \"status\": \"destroyed\",\n    \"status_time\": \"2001-01-01T00:00:00Z\",\n    \"slug\": \"demo-piezometer-1\",\n    \"name\": \"Demo Piezometer 1 Updated Name\",\n    \"type_id\": \"1bb4bf7c-f5f8-44eb-9805-43b07ffadbef\",\n    \"type\": \"Piezometer\",\n    \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            -80.8,\n            26.7\n        ]\n    },\n    \"station\": null,\n    \"offset\": null,\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\n    \"zreference\": 44.5,\n    \"zreference_datum_id\": \"72113f9a-982d-44e5-8fc1-8e595dafd344\",\n    \"zreference_datum\": \"North American Vertical Datum of 1988 (NAVD 88)\",\n    \"zreference_time\": \"2006-06-01T00:00:00Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateInstrumentGeometry",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('INSTRUMENT_OBJ_SCHEMA'))",
									"    )",
									"});",
									"// Assert known updated values of lat/lon",
									"pm.test(\"Response lat/lon matches submitted values\", function () {",
									"  pm.expect(pm.response.json().geometry.coordinates).to.include(-78);",
									"  pm.expect(pm.response.json().geometry.coordinates).to.include(25);",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "59c201b4-efee-4eac-ad5d-239e7a2db64d"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"Point\",\n    \"coordinates\": [\n        -78.0,\n        25.0\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/geometry",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"geometry"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListInstruments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// schema validator",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('INSTRUMENT_OBJ_SCHEMA'))",
									"}",
									"",
									"pm.globals.set('INSTRUMENT_ARRAY_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "670dd2f2-54dc-4660-997f-9cbf27170a7c"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/instruments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateInstrumentBulk_Array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"id": "ca07e63e-1df5-4a77-87ba-f28d5f8e03ff"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[{\n    \"status_id\": \"94578354-ffdf-4119-9663-6bd4323e58f5\",\n    \"status\": \"destroyed\",\n    \"status_time\": \"2001-01-01T00:00:00Z\",\n    \"slug\": \"demo-piezometer-2\",\n    \"formula\": null,\n    \"name\": \"Demo Piezometer 2\",\n    \"type_id\": \"1bb4bf7c-f5f8-44eb-9805-43b07ffadbef\",\n    \"type\": \"Piezometer\",\n    \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            -80.8,\n            26.7\n        ]\n    },\n    \"station\": null,\n    \"offset\": null,\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\"\n},\n{\n    \"status_id\": \"94578354-ffdf-4119-9663-6bd4323e58f5\",\n    \"status\": \"destroyed\",\n    \"status_time\": \"2001-01-01T00:00:00Z\",\n    \"slug\": \"demo-piezometer-3\",\n    \"name\": \"Demo Piezometer 3\",\n    \"type_id\": \"1bb4bf7c-f5f8-44eb-9805-43b07ffadbef\",\n    \"type\": \"Piezometer\",\n    \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            -80.8,\n            26.7\n        ]\n    },\n    \"formula\": null,\n    \"station\": null,\n    \"offset\": null,\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\"\n},\n{\n    \"status_id\": \"94578354-ffdf-4119-9663-6bd4323e58f5\",\n    \"status\": \"destroyed\",\n    \"status_time\": \"2001-01-01T00:00:00Z\",\n    \"slug\": \"demo-piezometer-4\",\n    \"name\": \"Demo Piezometer 4\",\n    \"type_id\": \"1bb4bf7c-f5f8-44eb-9805-43b07ffadbef\",\n    \"type\": \"Piezometer\",\n    \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            -80.8,\n            26.7\n        ]\n    },\n    \"station\": null,\n    \"offset\": null,\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\"\n}\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments"
							]
						}
					},
					"response": []
				},
				{
					"name": "ValidateCreateInstrument_Array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "dea01b12-02d8-4ff7-9db7-93c3e14b89a1"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[{\n    \"status_id\": \"94578354-ffdf-4119-9663-6bd4323e58f5\",\n    \"status\": \"destroyed\",\n    \"status_time\": \"2001-01-01T00:00:00Z\",\n    \"slug\": \"demo-piezometer-2\",\n    \"name\": \"Demo Piezometer 2\",\n    \"type_id\": \"1bb4bf7c-f5f8-44eb-9805-43b07ffadbef\",\n    \"type\": \"Piezometer\",\n    \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            -80.8,\n            26.7\n        ]\n    },\n    \"station\": null,\n    \"offset\": null,\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\n    \"zreference\": 44.5,\n    \"zreference_datum_id\": \"72113f9a-982d-44e5-8fc1-8e595dafd344\",\n    \"zreference_datum\": \"North American Vertical Datum of 1988 (NAVD 88)\",\n    \"zreference_time\": \"2006-06-01T00:00:00Z\"\n},\n{\n    \"status_id\": \"94578354-ffdf-4119-9663-6bd4323e58f5\",\n    \"status\": \"destroyed\",\n    \"status_time\": \"2001-01-01T00:00:00Z\",\n    \"slug\": \"demo-piezometer-3\",\n    \"name\": \"Demo Piezometer 3\",\n    \"type_id\": \"1bb4bf7c-f5f8-44eb-9805-43b07ffadbef\",\n    \"type\": \"Piezometer\",\n    \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            -80.8,\n            26.7\n        ]\n    },\n    \"station\": null,\n    \"offset\": null,\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\n    \"zreference\": 44.5,\n    \"zreference_datum_id\": \"72113f9a-982d-44e5-8fc1-8e595dafd344\",\n    \"zreference_datum\": \"North American Vertical Datum of 1988 (NAVD 88)\",\n    \"zreference_time\": \"2006-06-01T00:00:00Z\"\n},\n{\n    \"status_id\": \"94578354-ffdf-4119-9663-6bd4323e58f5\",\n    \"status\": \"destroyed\",\n    \"status_time\": \"2001-01-01T00:00:00Z\",\n    \"slug\": \"demo-piezometer-4\",\n    \"name\": \"Demo Piezometer 4\",\n    \"type_id\": \"1bb4bf7c-f5f8-44eb-9805-43b07ffadbef\",\n    \"type\": \"Piezometer\",\n    \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            -80.8,\n            26.7\n        ]\n    },\n    \"station\": null,\n    \"offset\": null,\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\n    \"zreference\": 44.5,\n    \"zreference_datum_id\": \"72113f9a-982d-44e5-8fc1-8e595dafd344\",\n    \"zreference_datum\": \"North American Vertical Datum of 1988 (NAVD 88)\",\n    \"zreference_time\": \"2006-06-01T00:00:00Z\"\n}\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments?dry_run=true",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments"
							],
							"query": [
								{
									"key": "dry_run",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateInstrumentBulk_Object",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"id": "bbde692e-cff1-44c1-b920-890b9fbc25fb"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status_id\": \"94578354-ffdf-4119-9663-6bd4323e58f5\",\n    \"status\": \"destroyed\",\n    \"status_time\": \"2001-01-01T00:00:00Z\",\n    \"slug\": \"demo-piezometer-5\",\n    \"name\": \"Demo Piezometer 5\",\n    \"type_id\": \"1bb4bf7c-f5f8-44eb-9805-43b07ffadbef\",\n    \"type\": \"Piezometer\",\n    \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            -80.8,\n            26.7\n        ]\n    },\n    \"formula\": null,\n    \"station\": null,\n    \"offset\": null,\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments"
							]
						}
					},
					"response": []
				},
				{
					"name": "ValidateCreateInstrument_Object",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "96046aef-d29b-43df-be69-d9fa875d6fe3"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status_id\": \"94578354-ffdf-4119-9663-6bd4323e58f5\",\n    \"status\": \"destroyed\",\n    \"status_time\": \"2001-01-01T00:00:00Z\",\n    \"slug\": \"demo-piezometer-5\",\n    \"name\": \"Demo Piezometer 5\",\n    \"type_id\": \"1bb4bf7c-f5f8-44eb-9805-43b07ffadbef\",\n    \"type\": \"Piezometer\",\n    \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            -80.8,\n            26.7\n        ]\n    },\n    \"station\": null,\n    \"offset\": null,\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\n    \"zreference\": 44.5,\n    \"zreference_datum_id\": \"72113f9a-982d-44e5-8fc1-8e595dafd344\",\n    \"zreference_datum\": \"North American Vertical Datum of 1988 (NAVD 88)\",\n    \"zreference_time\": \"2006-06-01T00:00:00Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments?dry_run=true",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments"
							],
							"query": [
								{
									"key": "dry_run",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetInstrumentStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"time\": { \"type\": \"string\" },",
									"        \"status_id\": { \"type\": \"string\" },",
									"        \"status\": { \"type\": \"string\" }",
									"    },",
									"    \"required\": [\"id\", \"time\", \"status_id\", \"status\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"pm.globals.set('INSTRUMENT_STATUS_OBJECT_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "dcd6119b-1f68-4a94-a99e-ecc388999f28"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/status/4ed5e9ac-40dc-4bca-b44f-7b837ec1b0fc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"status",
								"4ed5e9ac-40dc-4bca-b44f-7b837ec1b0fc"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListInstrumentStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// schema validator",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('INSTRUMENT_STATUS_OBJECT_SCHEMA'))",
									"}",
									"",
									"pm.globals.set('INSTRUMENT_STATUS_ARRAY_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "37332af4-8681-4df0-99a6-a829e376f76e"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/status",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateInstrumentStatus_Array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"id": "195b14bb-3077-4ea6-adf2-9c561f6d3f8b"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n{\n    \"time\": \"2002-01-01T00:00:00Z\",\n    \"status_id\": \"03a2bf9a-bbd8-4031-8f4e-13e8c77807f1\"\n},\n{\n    \"time\": \"2003-01-01T00:00:00Z\",\n    \"status_id\": \"c9ee4acb-9623-4fde-bf36-7668afe463d4\"\n},\n{\n    \"time\": \"2004-01-01T00:00:00Z\",\n    \"status_id\": \"e26ba2ef-9b52-4c71-97df-9e4b6cf4174d\"\n},\n{\n    \"time\": \"2005-01-01T00:00:00Z\",\n    \"status_id\": \"94578354-ffdf-4119-9663-6bd4323e58f5\"\n}\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/status",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateInstrumentStatus_Object",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"id": "5bb465c9-9963-45cb-8f45-99515aea12f3"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"time\": \"2018-01-01T00:00:00Z\",\n    \"status_id\": \"03a2bf9a-bbd8-4031-8f4e-13e8c77807f1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/status",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteInstrumentStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "219e2340-8994-4328-aeba-8e28275eb89b"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/status/4ed5e9ac-40dc-4bca-b44f-7b837ec1b0fc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"status",
								"4ed5e9ac-40dc-4bca-b44f-7b837ec1b0fc"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteInstrument",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "bf9b2762-2f4c-4d1a-a3bb-eac960aba3da"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Instrument Notes",
			"item": [
				{
					"name": "GetInstrumentNote",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"instrument_id\": { \"type\": \"string\" },",
									"        \"title\": { \"type\": \"string\" },",
									"        \"body\": { \"type\": \"string\" },",
									"        \"time\": { \"type\": \"string\" },",
									"        \"creator\": { \"type\": \"string\" },",
									"        \"create_date\": { \"type\": \"string\", \"format\": \"date-time\" },",
									"        \"updater\": {  \"type\": [\"string\", \"null\"] },",
									"        \"update_date\": { \"type\": [\"string\", \"null\"], \"format\": \"date-time\" },",
									"    },",
									"    \"required\": [\"id\", \"instrument_id\", \"title\", \"body\", \"time\", \"creator\", \"create_date\", \"updater\", \"update_date\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"pm.globals.set('INSTRUMENT_NOTE_OBJ_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "fef9f3dc-dbd2-4553-b00c-f84f7c05f1e7"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/notes/90a3f8de-de65-48a7-8286-024c13162958",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"notes",
								"90a3f8de-de65-48a7-8286-024c13162958"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListInstrumentNotes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// schema validator",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('INSTRUMENT_NOTE_OBJ_SCHEMA'))",
									"}",
									"",
									"pm.globals.set('INSTRUMENT_NOTE_ARRAY_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "887ecbc2-1cec-4199-baf4-5589f86a0a12"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/notes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								"notes"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListInstrumentInstrumentNotes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('INSTRUMENT_NOTE_ARRAY_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "8f8d195d-080b-4bcd-bbad-824da58d6961"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/notes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"notes"
							]
						}
					},
					"response": []
				},
				{
					"name": "PutInstrumentNote",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('INSTRUMENT_NOTE_OBJ_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "dca252e9-143c-477d-9cc7-040a956e011a"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"90a3f8de-de65-48a7-8286-024c13162958\",\n    \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n    \"title\": \"Instrument Test Note 1\",\n    \"body\": \"Updated instrument note body text.  This is example updated text.\",\n    \"time\": \"2020-06-09T01:49:48.505713Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/9048e7c1-eba2-4888-9048-db63e71e85ef/notes/90a3f8de-de65-48a7-8286-024c13162958",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								"9048e7c1-eba2-4888-9048-db63e71e85ef",
								"notes",
								"90a3f8de-de65-48a7-8286-024c13162958"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateInstrumentNote_Array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('INSTRUMENT_NOTE_ARRAY_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "1b4eac0d-c7f4-4e28-a7fc-7a434d353ef1"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n        \"title\": \"Instrument Test Note 101\",\n        \"body\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\\n labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\\n nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\\n cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui\\n officia deserunt mollit anim id est laborum.\\n\",\n        \"time\": \"2020-06-09T01:49:48.505713Z\"\n    },\n        {\n        \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n        \"title\": \"Instrument Test Note 102\",\n        \"body\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\\n labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\\n nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\\n cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui\\n officia deserunt mollit anim id est laborum.\\n\",\n        \"time\": \"2020-06-09T01:49:48.505713Z\"\n    },\n        {\n        \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n        \"title\": \"Instrument Test Note 103\",\n        \"body\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\\n labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\\n nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\\n cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui\\n officia deserunt mollit anim id est laborum.\\n\",\n        \"time\": \"2020-06-09T01:49:48.505713Z\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/notes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								"notes"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateInstrumentNote_Object",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('INSTRUMENT_NOTE_ARRAY_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "441d8299-4e7c-46ca-9524-7dc85cd5a27d"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n        \"title\": \"Instrument Note from Object Upload\",\n        \"body\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\\n labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\\n nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\\n cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui\\n officia deserunt mollit anim id est laborum.\\n\",\n        \"time\": \"2020-06-09T01:49:48.505713Z\"\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/notes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								"notes"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteInstrumentNote",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "3eaaee2d-5609-4f14-81be-52431488c955"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/instruments/notes/90a3f8de-de65-48a7-8286-024c13162958",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								"notes",
								"90a3f8de-de65-48a7-8286-024c13162958"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Instrument Groups",
			"item": [
				{
					"name": "GetInstrumentGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"slug\": { \"type\": \"string\" },",
									"        \"name\": { \"type\": \"string\" },",
									"        \"description\": { \"type\": \"string\" },",
									"        \"creator\": { \"type\": \"string\" },",
									"        \"create_date\": { \"type\": \"string\", \"format\": \"date-time\" },",
									"        \"updater\": {  \"type\": [\"string\", \"null\"] },",
									"        \"update_date\": { \"type\": [\"string\", \"null\"], \"format\": \"date-time\" },",
									"        \"project_id\": { \"type\": [\"string\", \"null\"] },",
									"        \"instrument_count\": { \"type\": \"number\" },",
									"        \"timeseries_count\": { \"type\": \"number\" }",
									"    },",
									"    \"required\": [\"id\", \"slug\", \"name\", \"description\", \"creator\", \"create_date\", \"updater\", \"update_date\", \"project_id\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"pm.globals.set('INSTRUMENTGROUP_OBJ_SCHEMA', JSON.stringify(schema))",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "8ce09294-b858-497e-8603-2465356ade48"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/instrument_groups/d0916e8a-39a6-4f2f-bd31-879881f8b40c",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instrument_groups",
								"d0916e8a-39a6-4f2f-bd31-879881f8b40c"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListInstrumentGroups",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('INSTRUMENTGROUP_OBJ_SCHEMA'))",
									"}",
									"",
									"pm.globals.set(\"INSTRUMENTGROUP_ARRAY_SCHEMA\", JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "632d20d0-2cbb-437e-807d-17c74a54753c"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/instrument_groups",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instrument_groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateInstrumentGroupBulk_Array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('INSTRUMENTGROUP_ARRAY_SCHEMA'))",
									"    )",
									"});"
								],
								"type": "text/javascript",
								"id": "708dded9-5cf7-4196-af7e-56aa62d87783"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[{\n    \"name\": \"Test Instrument Group 100\",\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\"\n},\n{\n    \"name\": \"Test Instrument Group 101\",\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\"\n},\n{\n    \"name\": \"Test Instrument Group 102\",\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\"\n}]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instrument_groups",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instrument_groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateInstrumentGroupBulk_Object",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('INSTRUMENTGROUP_ARRAY_SCHEMA'))",
									"    )",
									"});"
								],
								"type": "text/javascript",
								"id": "26b77acc-e3d3-4b3f-9051-af13e83ae333"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Instrument Group 500\",\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\n    \"description\": \"This is a sample instrument group created by integration tests\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instrument_groups",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instrument_groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateInstrumentGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('INSTRUMENTGROUP_OBJ_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "4a547476-bfb4-4adc-8d61-101e1dc615a9"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"d0916e8a-39a6-4f2f-bd31-879881f8b40c\",\n    \"name\": \"Updated Name for Instrument Group 1\",\n    \"description\": \"A sample instrument group created by integration tests\",\n    \"project_id\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instrument_groups/d0916e8a-39a6-4f2f-bd31-879881f8b40c",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instrument_groups",
								"d0916e8a-39a6-4f2f-bd31-879881f8b40c"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteInstrumentGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "e7eed839-6e34-41b3-8dee-acb48584b12f"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instrument_groups/d0916e8a-39a6-4f2f-bd31-879881f8b40c",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instrument_groups",
								"d0916e8a-39a6-4f2f-bd31-879881f8b40c"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListInstrumentGroupInstruments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('INSTRUMENT_ARRAY_SCHEMA')))",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "0e01b7d1-7952-45d5-bb87-440295daef24"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/instrument_groups/d0916e8a-39a6-4f2f-bd31-879881f8b40c/instruments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instrument_groups",
								"d0916e8a-39a6-4f2f-bd31-879881f8b40c",
								"instruments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Instrument to InstrumentGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201])",
									"});"
								],
								"type": "text/javascript",
								"id": "82e870ce-3b4b-425c-94e6-0429a64002af"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"id\": \"9e8f2ca4-4037-45a4-aaca-d9e598877439\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instrument_groups/d0916e8a-39a6-4f2f-bd31-879881f8b40c/instruments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instrument_groups",
								"d0916e8a-39a6-4f2f-bd31-879881f8b40c",
								"instruments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Instrument from InstrumentGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "9bc8e5dc-18f9-42ec-9846-a84f89f494b3"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instrument_groups/d0916e8a-39a6-4f2f-bd31-879881f8b40c/instruments/9e8f2ca4-4037-45a4-aaca-d9e598877439",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instrument_groups",
								"d0916e8a-39a6-4f2f-bd31-879881f8b40c",
								"instruments",
								"9e8f2ca4-4037-45a4-aaca-d9e598877439"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Plot Configurations",
			"item": [
				{
					"name": "GetPlotConfiguration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"timeseries_id\": {",
									"            \"type\": \"array\",",
									"            \"items\": { \"type\": \"string\" },",
									"        },",
									"        \"slug\": { \"type\": \"string\" },",
									"        \"name\": { \"type\": \"string\" },",
									"        \"creator\": { \"type\": \"string\" },",
									"        \"create_date\": { \"type\": \"string\", \"format\": \"date-time\" },",
									"        \"updater\": {  \"type\": [\"string\", \"null\"] },",
									"        \"update_date\": { \"type\": [\"string\", \"null\"], \"format\": \"date-time\" },",
									"        \"project_id\": { \"type\": [\"string\", \"null\"] },",
									"        \"show_masked\": { \"type\": [\"boolean\", \"null\"] },",
									"        \"show_nonvalidated\": { \"type\": [\"boolean\", \"null\"] },",
									"        \"show_comments\": { \"type\": [\"boolean\", \"null\"] },",
									"    },",
									"    \"required\": [\"id\", \"slug\", \"name\", \"creator\", \"create_date\", \"updater\", \"update_date\", \"project_id\", \"timeseries_id\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"pm.globals.set('PLOT_CONFIGURATION_OBJ_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "b145cf23-4f33-4d46-84c0-51ba72d4a324"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/plot_configurations/64879f68-6a2c-4d78-8e8b-5e9b9d2e0d6a",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"plot_configurations",
								"64879f68-6a2c-4d78-8e8b-5e9b9d2e0d6a"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListPlotConfigurations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// schema validator",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('PLOT_CONFIGURATION_OBJ_SCHEMA'))",
									"}",
									"",
									"pm.globals.set('PLOT_CONFIGURATION_ARRAY_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "307fc465-0ef9-47e0-a97b-5f1fcdec5b5a"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/plot_configurations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"plot_configurations"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdatePlotConfiguration - Remove Timeseries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(JSON.parse(pm.globals.get('PLOT_CONFIGURATION_OBJ_SCHEMA')))",
									"});"
								],
								"type": "text/javascript",
								"id": "7999a4f0-ed3d-41ed-b93e-5152207b9d37"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"64879f68-6a2c-4d78-8e8b-5e9b9d2e0d6a\",\n    \"name\": \"PZ-1A PLOT\",\n    \"slug\": \"pz-1a-plot\",\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\n    \"timeseries_id\": [\n        \"9a3864a8-8766-4bfa-bad1-0328b166f6a8\"\n    ],\n    \"creator\": \"00000000-0000-0000-0000-000000000000\",\n    \"create_date\": \"2021-02-26T15:54:18.982835Z\",\n    \"updater\": null,\n    \"update_date\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/plot_configurations/64879f68-6a2c-4d78-8e8b-5e9b9d2e0d6a",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"plot_configurations",
								"64879f68-6a2c-4d78-8e8b-5e9b9d2e0d6a"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdatePlotConfiguration - Add Many Timeseries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(JSON.parse(pm.globals.get('PLOT_CONFIGURATION_OBJ_SCHEMA')))",
									"});"
								],
								"type": "text/javascript",
								"id": "b3d53c28-ca28-4a8c-b31c-8d69161598f0"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"64879f68-6a2c-4d78-8e8b-5e9b9d2e0d6a\",\n    \"name\": \"PZ-1A PLOT\",\n    \"slug\": \"pz-1a-plot\",\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\n    \"timeseries_id\": [\n        \"8f4ca3a3-5971-4597-bd6f-332d1cf5af7c\",\n        \"869465fc-dc1e-445e-81f4-9979b5fadda9\",\n        \"9a3864a8-8766-4bfa-bad1-0328b166f6a8\",\n        \"7ee902a3-56d0-4acf-8956-67ac82c03a96\",\n        \"d9697351-3a38-4194-9ac4-41541927e475\",\n        \"22a734d6-dc24-451d-a462-43a32f335ae8\",\n        \"14247bc8-b264-4857-836f-182d47ebb39d\"\n    ],\n    \"creator\": \"00000000-0000-0000-0000-000000000000\",\n    \"create_date\": \"2021-02-26T16:21:07.925124Z\",\n    \"updater\": null,\n    \"update_date\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/plot_configurations/64879f68-6a2c-4d78-8e8b-5e9b9d2e0d6a",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"plot_configurations",
								"64879f68-6a2c-4d78-8e8b-5e9b9d2e0d6a"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreatePlotConfiguration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(JSON.parse(pm.globals.get('PLOT_CONFIGURATION_OBJ_SCHEMA')))",
									"});"
								],
								"type": "text/javascript",
								"id": "ede05e01-65c3-4e86-93d2-e8ea91b3139f"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Create Plot Configuration\",\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\n    \"timeseries_id\": [\n        \"8f4ca3a3-5971-4597-bd6f-332d1cf5af7c\",\n        \"869465fc-dc1e-445e-81f4-9979b5fadda9\",\n        \"9a3864a8-8766-4bfa-bad1-0328b166f6a8\",\n        \"7ee902a3-56d0-4acf-8956-67ac82c03a96\",\n        \"d9697351-3a38-4194-9ac4-41541927e475\",\n        \"22a734d6-dc24-451d-a462-43a32f335ae8\",\n        \"14247bc8-b264-4857-836f-182d47ebb39d\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/plot_configurations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"plot_configurations"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeletePlotConfiguration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "cf52eebd-2e5b-4b3a-b6c5-150eb38eb113"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/plot_configurations/64879f68-6a2c-4d78-8e8b-5e9b9d2e0d6a",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"plot_configurations",
								"64879f68-6a2c-4d78-8e8b-5e9b9d2e0d6a"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Projects",
			"item": [
				{
					"name": "GetProject",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bf3d2145-6181-4a2f-9465-009d7267724b",
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"federal_id\": { \"type\": [\"string\", \"null\"] },",
									"        \"image\": { \"type\": [\"string\", \"null\"]},",
									"        \"office_id\": { \"type\": [ \"string\", \"null\" ]},",
									"        \"slug\": { \"type\": \"string\" },",
									"        \"name\": { \"type\": \"string\" },",
									"        \"creator\": { \"type\": \"string\" },",
									"        \"create_date\": { \"type\": \"string\", \"format\": \"date-time\" },",
									"        \"updater\": {  \"type\": [\"string\", \"null\"] },",
									"        \"update_date\": { \"type\": [\"string\", \"null\"], \"format\": \"date-time\" },",
									"        \"instrument_count\": {\"type\": \"number\"},",
									"        \"instrument_group_count\": {\"type\": \"number\"},",
									"        \"timeseries\": {",
									"            \"type\": \"array\",",
									"            \"items\": { \"type\": \"string\" },",
									"        },",
									"    },",
									"    \"required\": [\"id\", \"federal_id\", \"image\", \"office_id\", \"slug\", \"name\", \"creator\", \"create_date\", \"updater\", \"update_date\", \"instrument_count\", \"instrument_group_count\", \"timeseries\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"pm.globals.set('PROJECT_OBJ_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateProjectTimeseries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"id": "2c9d4e47-bd39-47b1-8b7a-4efbc3f41a2f"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/timeseries/8f4ca3a3-5971-4597-bd6f-332d1cf5af7c",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"timeseries",
								"8f4ca3a3-5971-4597-bd6f-332d1cf5af7c"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteProjectTimeseries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"id": "715b134d-82c1-407b-b6bb-d0392de2a886"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/timeseries/8f4ca3a3-5971-4597-bd6f-332d1cf5af7c",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"timeseries",
								"8f4ca3a3-5971-4597-bd6f-332d1cf5af7c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetProjectCount",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"project_count\": { \"type\": \"number\" }",
									"    },",
									"    \"required\": [\"project_count\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "ba4f80f7-a9c0-482c-b089-5dfa752a5198"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/count",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListProjects",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('PROJECT_OBJ_SCHEMA'))",
									"}",
									"",
									"pm.globals.set('PROJECT_ARRAY_SCHEMA', JSON.stringify(schema))",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "5e6b8060-0586-4dbb-a428-3f1fb5c5e8fa"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateProjectBulk_Array",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "76ef7de8-26df-4872-82a0-ab5cc75b86af",
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_existing_admin}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[{\n    \"name\": \"Test Project 100000\",\n    \"federal_id\": null\n},\n{\n    \"name\": \"Test Project 100001\",\n    \"federal_id\": null\n},\n{\n    \"name\": \"Test Project 100002\",\n    \"federal_id\": null\n}\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateProjectBulk_Object",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e896d1eb-0346-49f1-95e6-bd66e5a4d38f",
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_existing_admin}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Project 500000\",\n    \"federal_id\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateProject",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('PROJECT_OBJ_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "e8cb9a25-45cd-4c88-b9f6-84ceae8c1581"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\n    \"federal_id\": null,\n    \"name\": \"Blue Water Reservoir\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteProject",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "5fc3629c-899b-4352-b703-a657049a7347"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListProjectInstrumentGroups",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('INSTRUMENTGROUP_ARRAY_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "02935a9f-70c7-4b60-980c-3f5d58322ea4"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instrument_groups",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instrument_groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListProjectInstruments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('INSTRUMENT_ARRAY_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "065b65f3-a4a6-42f1-bf10-a9d67cb8e43e"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListProjectInstrumentNames",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": { \"type\": \"string\" }",
									"}",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "1cc61b8c-ab26-400d-8cbf-99a5c0c8a549"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments/names",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments",
								"names"
							]
						}
					},
					"response": []
				}
			],
			"description": "Project Endpoint Tests",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Timeseries",
			"item": [
				{
					"name": "GetTimeseries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"slug\": { \"type\": \"string\" },",
									"        \"name\": { \"type\": \"string\" },",
									"        \"variable\": {\"type\": \"string\"},",
									"        \"project_id\": {\"type\": \"string\"},",
									"        \"project\": {\"type\": \"string\"},",
									"        \"project_slug\": {\"type\": \"string\"},",
									"        \"instrument_id\": { \"type\": \"string\" },",
									"        \"instrument\": { \"type\": \"string\"  },",
									"        \"instrument_slug\": {\"type\": \"string\"},",
									"        \"parameter_id\": { \"type\": \"string\" },",
									"        \"parameter\": { \"type\": \"string\"  },",
									"        \"unit_id\": { \"type\": \"string\" },",
									"        \"unit\": { \"type\": \"string\"  },",
									"        \"is_computed\": { \"type\": \"boolean\" }",
									"    },",
									"    \"required\": [\"id\", \"slug\", \"name\", \"variable\", \"instrument_id\", \"parameter_id\", \"unit_id\", \"is_computed\"],",
									"    \"additionalProperties\": false",
									"};",
									"",
									"pm.globals.set('TIMESERIES_OBJ_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});"
								],
								"type": "text/javascript",
								"id": "aa82e101-18c0-4866-9677-533d259ef6ab"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/timeseries/869465fc-dc1e-445e-81f4-9979b5fadda9",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"timeseries",
								"869465fc-dc1e-445e-81f4-9979b5fadda9"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListTimeseries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('TIMESERIES_OBJ_SCHEMA'))",
									"}",
									"",
									"pm.globals.set('TIMESERIES_ARRAY_SCHEMA', JSON.stringify(schema))",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "f8035780-6a11-4cc3-a8ba-504145157d16"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/timeseries",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"timeseries"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListProjectTimeseries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('TIMESERIES_OBJ_SCHEMA'))",
									"}",
									"",
									"pm.globals.set('TIMESERIES_ARRAY_SCHEMA', JSON.stringify(schema))",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "a4591801-0534-42e5-9895-c1341da18f10"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/timeseries",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"timeseries"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListInstrumentGroupTimeseries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('TIMESERIES_OBJ_SCHEMA'))",
									"}",
									"",
									"pm.globals.set('TIMESERIES_ARRAY_SCHEMA', JSON.stringify(schema))",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "024a83a6-9679-4742-b600-4a1d4d2b0630"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/instrument_groups/d0916e8a-39a6-4f2f-bd31-879881f8b40c/timeseries",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instrument_groups",
								"d0916e8a-39a6-4f2f-bd31-879881f8b40c",
								"timeseries"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListTimeseriesMeasurements",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"// NOTE: timeseries_measurement may not have id when posted",
									"var timeseries_measurement_schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"time\": { \"type\": \"string\" },",
									"        \"value\": { \"type\": \"number\" }",
									"    },",
									"    \"required\": [\"time\", \"value\"],",
									"    \"additionalProperties\": true",
									"};",
									"",
									"// timeseries_measurement_collection",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"timeseries_id\": {\"type\": \"string\"},",
									"        \"items\": { ",
									"            \"type\": \"array\",",
									"            \"items\": timeseries_measurement_schema",
									"        }",
									"    },",
									"    \"required\": [\"items\", \"timeseries_id\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"var schema2 = {\"type\": \"array\", \"items\": schema}",
									"",
									"pm.globals.set('TIMESERIES_MEASUREMENT_COLLECTION_OBJECT_SCHEMA', JSON.stringify(schema)",
									")",
									"pm.globals.set('TIMESERIES_MEASUREMENT_COLLECTION_ARRAY_SCHEMA', JSON.stringify(schema2)",
									")",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", () => {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "077192cd-67a2-467f-85af-52a463d83f43"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/timeseries/869465fc-dc1e-445e-81f4-9979b5fadda9/measurements?after=1900-01-01T00:00:00.00Z&before=2021-01-01T00:00:00.00Z",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"timeseries",
								"869465fc-dc1e-445e-81f4-9979b5fadda9",
								"measurements"
							],
							"query": [
								{
									"key": "after",
									"value": "1900-01-01T00:00:00.00Z"
								},
								{
									"key": "before",
									"value": "2021-01-01T00:00:00.00Z"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateTimeseries_Object",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('TIMESERIES_ARRAY_SCHEMA'))",
									"    )",
									"});"
								],
								"type": "text/javascript",
								"id": "8691873c-b0c2-494c-80b5-73cb890ceb45"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Timeseries 4\",\n    \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n    \"parameter_id\": \"068b59b0-aafb-4c98-ae4b-ed0365a6fbac\",\n    \"unit_id\": \"f777f2e2-5e32-424e-a1ca-19d16cd8abce\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/timeseries",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"timeseries"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateTimeseries_Array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('TIMESERIES_ARRAY_SCHEMA'))",
									"    )",
									"});"
								],
								"type": "text/javascript",
								"id": "f9a37f51-4644-4ee3-93e0-4767b3e07d53"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[{\n    \"name\": \"Test Timeseries 5\",\n    \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n    \"parameter_id\": \"068b59b0-aafb-4c98-ae4b-ed0365a6fbac\",\n    \"unit_id\": \"f777f2e2-5e32-424e-a1ca-19d16cd8abce\"\n},\n{\n    \"name\": \"Test Timeseries 6\",\n    \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n    \"parameter_id\": \"068b59b0-aafb-4c98-ae4b-ed0365a6fbac\",\n    \"unit_id\": \"f777f2e2-5e32-424e-a1ca-19d16cd8abce\"\n},\n{\n    \"name\": \"Test Timeseries 7\",\n    \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n    \"parameter_id\": \"068b59b0-aafb-4c98-ae4b-ed0365a6fbac\",\n    \"unit_id\": \"f777f2e2-5e32-424e-a1ca-19d16cd8abce\"\n}]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/timeseries",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"timeseries"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateTimeseriesMeasurements_Object",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"id": "4848bb2c-2a9c-43c7-a583-76149b1b2c64"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"timeseries_id\": \"869465fc-dc1e-445e-81f4-9979b5fadda9\",\n    \"items\": [\n    \t    {\"time\": \"2020-06-01T00:00:00Z\", \"value\": 10.00},\n            {\"time\": \"2020-06-02T01:00:00Z\", \"value\": 11.10},\n            {\"time\": \"2020-06-03T02:00:00Z\", \"value\": 10.20},\n            {\"time\": \"2020-06-04T03:00:00Z\", \"value\": 10.30},\n            {\"time\": \"2020-06-05T04:00:00Z\", \"value\": 10.40}\n    \t]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/timeseries_measurements",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"timeseries_measurements"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateTimeseriesMeasurements_Array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"id": "8091c9a5-0bd2-40a3-8b15-2a99b9b8ad19"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"timeseries_id\": \"869465fc-dc1e-445e-81f4-9979b5fadda9\",\n        \"items\": [\n\t\t{\"time\": \"2020-06-01T00:00:00Z\", \"value\": 10.00},\n\t        {\"time\": \"2020-06-02T01:00:00Z\", \"value\": 11.10},\n\t        {\"time\": \"2020-06-03T02:00:00Z\", \"value\": 10.20},\n\t        {\"time\": \"2020-06-04T03:00:00Z\", \"value\": 10.30},\n\t        {\"time\": \"2020-06-05T04:00:00Z\", \"value\": 10.40}\n\t]\n    },\n    {\n        \"timeseries_id\": \"9a3864a8-8766-4bfa-bad1-0328b166f6a8\",\n        \"items\": [\n\t\t{\"time\": \"2020-06-01T00:00:00Z\", \"value\": 10.00},\n\t        {\"time\": \"2020-06-02T01:00:00Z\", \"value\": 11.10},\n\t        {\"time\": \"2020-06-03T02:00:00Z\", \"value\": 10.20},\n\t        {\"time\": \"2020-06-04T03:00:00Z\", \"value\": 10.30},\n\t        {\"time\": \"2020-06-05T04:00:00Z\", \"value\": 10.40}\n\t]\n    },\n    {\n        \"timeseries_id\": \"7ee902a3-56d0-4acf-8956-67ac82c03a96\",\n        \"items\": [\n\t\t{\"time\": \"2020-06-01T00:00:00Z\", \"value\": 10.00},\n\t        {\"time\": \"2020-06-02T01:00:00Z\", \"value\": 11.10},\n\t        {\"time\": \"2020-06-03T02:00:00Z\", \"value\": 10.20},\n\t        {\"time\": \"2020-06-04T03:00:00Z\", \"value\": 10.30},\n\t        {\"time\": \"2020-06-05T04:00:00Z\", \"value\": 10.40}\n\t]\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/timeseries_measurements",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"timeseries_measurements"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateTimeseries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('TIMESERIES_OBJ_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "1db3da1e-66ec-4b61-9699-07a4094074e0"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"869465fc-dc1e-445e-81f4-9979b5fadda9\",\n    \"slug\": \"test-timeseries-1\",\n    \"name\": \"New Name for Test Timeseries 1\",\n    \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n    \"instrument\": \"Demo Piezometer 1\",\n    \"parameter_id\": \"068b59b0-aafb-4c98-ae4b-ed0365a6fbac\",\n    \"parameter\": \"stage\",\n    \"unit_id\": \"f777f2e2-5e32-424e-a1ca-19d16cd8abce\",\n    \"unit\": \"feet\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/timeseries/869465fc-dc1e-445e-81f4-9979b5fadda9",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"timeseries",
								"869465fc-dc1e-445e-81f4-9979b5fadda9"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteTimeseries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "b104775f-8c83-495d-8991-b620e0d59319"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/timeseries/869465fc-dc1e-445e-81f4-9979b5fadda9",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"timeseries",
								"869465fc-dc1e-445e-81f4-9979b5fadda9"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Instrument Constants",
			"item": [
				{
					"name": "ListInstrumentConstants",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "3f353217-9f5c-46e8-a6d4-3063602ce145"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/constants",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"constants"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateInstrumentConstant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('TIMESERIES_ARRAY_SCHEMA'))",
									"    )",
									"});"
								],
								"type": "text/javascript",
								"id": "f5d5f6af-efdc-4b9c-a3af-2ecab78634ee"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Instrument Constant\",\n    \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n    \"parameter_id\": \"068b59b0-aafb-4c98-ae4b-ed0365a6fbac\",\n    \"unit_id\": \"f777f2e2-5e32-424e-a1ca-19d16cd8abce\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/constants",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"constants"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteInstrumentConstant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "02180568-7028-4502-9a2d-17d13e539444"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/constants/14247bc8-b264-4857-836f-182d47ebb39d",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"constants",
								"14247bc8-b264-4857-836f-182d47ebb39d"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Misc",
			"item": [
				{
					"name": "GetDomains",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": {",
									"        \"type\": \"object\",",
									"        \"properties\": {",
									"            \"id\": { \"type\": \"string\" },",
									"            \"group\": { \"type\": \"string\" },",
									"            \"value\": { \"type\": \"string\" },",
									"            \"description\": { \"type\": [\"string\", \"null\"] },",
									"        },",
									"        \"required\": [\"id\", \"group\", \"value\", \"description\"],",
									"        \"additionalProperties\": false",
									"    }",
									"}",
									"pm.globals.set('DOMAIN_ARRAY_SCHEMA', schema);",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "50e20bcb-9090-4d25-a697-59c2d07c9461"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/domains",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"domains"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetHome",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"instrument_count\": { \"type\": \"number\" },",
									"        \"instrument_group_count\": { \"type\": \"number\" },",
									"        \"project_count\": { \"type\": \"number\" },",
									"        \"new_instruments_7d\": { \"type\": \"number\" },",
									"        \"new_measurements_2h\": { \"type\": \"number\" }",
									"    },",
									"    \"required\": [\"instrument_count\", \"instrument_group_count\", \"project_count\", \"new_instruments_7d\", \"new_measurements_2h\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});"
								],
								"type": "text/javascript",
								"id": "7aecbe5b-e8ed-480f-a057-586967ea34ee"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/home",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"home"
							]
						}
					},
					"response": []
				},
				{
					"name": "DoHeartbeat",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/heartbeat",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"heartbeat"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetLatestHeartbeat",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/heartbeats/latest",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"heartbeats",
								"latest"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Units",
			"item": [
				{
					"name": "ListUnits",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": {",
									"        \"type\": \"object\",",
									"        \"properties\": {",
									"            \"id\": { \"type\": \"string\" },",
									"            \"name\": { \"type\": \"string\" },",
									"            \"abbreviation\": { \"type\": \"string\" },",
									"            \"unit_family_id\": { \"type\": \"string\" },",
									"            \"unit_family\": { \"type\": \"string\" },",
									"            \"measure_id\": { \"type\": \"string\" },",
									"            \"measure\": { \"type\": [\"string\", \"null\"] },",
									"        },",
									"        \"required\": [\"id\", \"name\", \"abbreviation\", \"unit_family_id\", \"unit_family\", \"measure_id\", \"measure\"],",
									"        \"additionalProperties\": false",
									"    }",
									"}",
									"pm.globals.set('UNIT_ARRAY_SCHEMA', schema);",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "c896c525-d63e-429d-9b6b-f35fd13d3a81"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/units",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"units"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "explorer",
			"item": [
				{
					"name": "PostExplorer Query By InstrumetID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d5469cf7-5cc7-49ff-a913-6f38ac26bb3e",
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"9e8f2ca4-4037-45a4-aaca-d9e598877439\", \"a7540f69-c41e-43b3-b655-6e44097edb7e\"]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/explorer",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"explorer"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostExplorer Query By InstrumetID With Date Filters",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "68575349-4b2d-4233-be22-675ef5024a8c",
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"9e8f2ca4-4037-45a4-aaca-d9e598877439\", \"a7540f69-c41e-43b3-b655-6e44097edb7e\"]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/explorer?after=2020-03-03T00:00:00Z&before=2021-05-27T00:32:45Z",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"explorer"
							],
							"query": [
								{
									"key": "after",
									"value": "2020-03-03T00:00:00Z"
								},
								{
									"key": "before",
									"value": "2021-05-27T00:32:45Z"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "Tests for explorer endpoints",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Alert Configs",
			"item": [
				{
					"name": "GetAlertConfig",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"instrument_id\": { \"type\": \"string\" },",
									"        \"name\": { \"type\": \"string\" },",
									"        \"body\": { \"type\": \"string\" },",
									"        \"formula\": { \"type\": \"string\" },",
									"        \"schedule\": { \"type\": \"string\" },",
									"        \"creator\": { \"type\": \"string\" },",
									"        \"create_date\": { \"type\": \"string\", \"format\": \"date-time\" },",
									"        \"updater\": {  \"type\": [\"string\", \"null\"] },",
									"        \"update_date\": { \"type\": [\"string\", \"null\"], \"format\": \"date-time\" }",
									"    },",
									"    \"required\": [\"id\", \"instrument_id\", \"name\", \"body\", \"formula\", \"schedule\", \"creator\", \"create_date\", \"updater\", \"update_date\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"pm.globals.set('ALERTCONFIG_OBJ_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "181d4e78-d3d7-4087-9a89-e87c0655012b"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/alert_configs/243e9d32-2cba-4f12-9abe-63adc09fc5dd",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"alert_configs",
								"243e9d32-2cba-4f12-9abe-63adc09fc5dd"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListInstrumentAlertConfigs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// schema validator",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('ALERTCONFIG_OBJ_SCHEMA'))",
									"}",
									"",
									"pm.globals.set('ALERTCONFIG_ARRAY_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "6186a748-bfa8-4cca-a65b-54fb942ec035"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/alert_configs",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"alert_configs"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateAlertConfig_Array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('ALERTCONFIG_ARRAY_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "860ec3d7-dcaf-4756-8da6-821cd6b9584c"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n    \"name\": \"Test Alert Condition 2\",\n    \"body\": \"Alert Condition 2!  Sincerely, Midas\",\n    \"formula\": \"[distance-to-water] <= 2\",\n    \"schedule\": \"0,10,20,30,40,50 * * * *\"\n},\n{\n    \"name\": \"Test Alert Condition 3\",\n    \"body\": \"Alert Condition 3!  Sincerely, Midas\",\n    \"formula\": \"[distance-to-water] <= 3\",\n    \"schedule\": \"0,10,20,30,40,50 * * * *\"\n},\n{\n    \"name\": \"Test Alert Condition 4\",\n    \"body\": \"Alert Condition 1!  Sincerely, Midas\",\n    \"formula\": \"[distance-to-water] <= 4\",\n    \"schedule\": \"0,10,20,30,40,50 * * * *\"\n}\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/alert_configs",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"alert_configs"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateAlertConfig_Object",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('ALERTCONFIG_ARRAY_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "18b6735c-b445-4ed1-83ed-cafb2b38b596"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n    \"name\": \"Test Alert Condition 1\",\n    \"body\": \"Alert Condition 1!  Sincerely, Midas\",\n    \"formula\": \"[distance-to-water] <= 2\",\n    \"schedule\": \"0,10,20,30,40,50 * * * *\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/alert_configs",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"alert_configs"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateAlertConfig",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('ALERTCONFIG_OBJ_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "a8978d0f-cdc8-4e03-bb52-de2fd71209b2"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"243e9d32-2cba-4f12-9abe-63adc09fc5dd\",\n    \"name\": \"Test Alert Condition BRAVO\",\n    \"body\": \"Alert Condition BRAVO Has Occurred!  Sincerely, Midas\",\n    \"formula\": \"[distance-to-water] <= 0\",\n    \"schedule\": \"0,10,20,30,40,50 * * * *\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/alert_configs/243e9d32-2cba-4f12-9abe-63adc09fc5dd",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"alert_configs",
								"243e9d32-2cba-4f12-9abe-63adc09fc5dd"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteAlertConfig",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "3df57fa2-5752-4ba0-a92e-19bb89259042"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments/9e8f2ca4-4037-45a4-aaca-d9e598877439/alert_configs/1efd2d85-d3ee-4388-85a0-f824a761ff8b",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments",
								"9e8f2ca4-4037-45a4-aaca-d9e598877439",
								"alert_configs",
								"1efd2d85-d3ee-4388-85a0-f824a761ff8b"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Alert Subscriptions",
			"item": [
				{
					"name": "SubscribeProfileToInstrumentAlert",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// schema validation",
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"alert_config_id\": { \"type\": \"string\" },",
									"        \"profile_id\": { \"type\": \"string\" },",
									"        \"mute_ui\": { \"type\": \"boolean\" },",
									"        \"mute_notify\": { \"type\": \"boolean\" }",
									"    },",
									"    \"required\": [\"id\", \"alert_config_id\", \"profile_id\", \"mute_ui\", \"mute_notify\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"pm.globals.set('ALERT_SUBSCRIPTION_OBJECT', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "2f787f22-4e51-430f-b463-62baa33e6c99"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/alert_configs/6f3dfe9f-4664-4c78-931f-32ffac6d2d43/subscribe",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"alert_configs",
								"6f3dfe9f-4664-4c78-931f-32ffac6d2d43",
								"subscribe"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListMyInstrumentAlertSubscriptions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('ALERT_SUBSCRIPTION_OBJECT'))",
									"}",
									"",
									"pm.globals.set('ALERT_SUBSCRIPTION_ARRAY', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});"
								],
								"type": "text/javascript",
								"id": "0d81dc28-b250-4758-aee8-2fa20f2cbd3a"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/my_alert_subscriptions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"my_alert_subscriptions"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateInstrumentAlertSubscription",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// NOTE: No Test Coverage At Present on this endpoint.",
									"// Revisit at a later date; There are challenges with dynamically created Profile ID and Subscription IDs"
								],
								"type": "text/javascript",
								"id": "545a206e-bb29-4c70-8249-b644669f74c1"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"197d6140-f273-4c50-a87f-dec3f809663b\",\n    \"alert_config_id\": \"243e9d32-2cba-4f12-9abe-63adc09fc5dd\",\n    \"profile_id\": \"96c01ff3-edc9-44f0-8690-191cc2281a12\",\n    \"mute_ui\": false,\n    \"mute_notify\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/alert_subscriptions/197d6140-f273-4c50-a87f-dec3f809663b",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"alert_subscriptions",
								"197d6140-f273-4c50-a87f-dec3f809663b"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListAlertsForInstrument",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"alert_config_id\": { \"type\": \"string\" },",
									"        \"project_id\": { \"type\": \"string\" },",
									"        \"instrument_id\": { \"type\": \"string\" },",
									"        \"project_name\": { \"type\": \"string\" },",
									"        \"instrument_name\": { \"type\": \"string\" },",
									"        \"name\": { \"type\": \"string\" },",
									"        \"body\": { \"type\": \"string\" },",
									"        \"create_date\": { \"type\": \"string\", \"format\": \"date-time\" }",
									"    },",
									"    \"required\": [\"id\", \"alert_config_id\", \"project_id\", \"instrument_id\", \"project_name\", \"instrument_name\", \"name\", \"body\", \"create_date\"],",
									"    \"additionalProperties\": true",
									"}",
									"// additionalProperties: true because alert can also contain a property \"read\" when fetched from /my_alerts",
									"",
									"pm.globals.set('ALERT_OBJ_SCHEMA', JSON.stringify(schema));",
									"",
									"var list_schema = {",
									"    \"type\": \"array\",",
									"    \"items\": schema",
									"};",
									"",
									"pm.globals.set('ALERT_ARRAY_SCHEMA', JSON.stringify(list_schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(list_schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "f4f74f04-6944-4c44-aad9-0406606b993b"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/alerts",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"alerts"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListMyAlerts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"     pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('ALERT_ARRAY_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "f2adcad0-1d88-4e70-ab48-ccc485771e33"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/my_alerts",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"my_alerts"
							]
						}
					},
					"response": []
				},
				{
					"name": "DoAlertRead",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"     pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('ALERT_OBJ_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "754328a4-f8bd-407a-a79b-27f4f02286e8"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/my_alerts/e070be13-ef17-40f3-99c8-fef3ee1b9fb5/read",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"my_alerts",
								"e070be13-ef17-40f3-99c8-fef3ee1b9fb5",
								"read"
							]
						}
					},
					"response": []
				},
				{
					"name": "DoAlertUnread",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"     pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('ALERT_OBJ_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "de146ffc-dbaf-4707-b386-220d072322bc"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/my_alerts/e070be13-ef17-40f3-99c8-fef3ee1b9fb5/unread",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"my_alerts",
								"e070be13-ef17-40f3-99c8-fef3ee1b9fb5",
								"unread"
							]
						}
					},
					"response": []
				},
				{
					"name": "UnsubscribeProfileToInstrumentAlert",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "4785bf38-8524-4ae2-b41d-52a53d5d5af5"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/instruments/a7540f69-c41e-43b3-b655-6e44097edb7e/alert_configs/6f3dfe9f-4664-4c78-931f-32ffac6d2d43/unsubscribe",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"instruments",
								"a7540f69-c41e-43b3-b655-6e44097edb7e",
								"alert_configs",
								"6f3dfe9f-4664-4c78-931f-32ffac6d2d43",
								"unsubscribe"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Collection Groups",
			"item": [
				{
					"name": "ListCollectionGroups",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var obj_schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"project_id\": { \"type\": \"string\" },",
									"        \"slug\": { \"type\": \"string\" },",
									"        \"name\": { \"type\": \"string\" },",
									"        \"creator\": { \"type\": \"string\" },",
									"        \"create_date\": { \"type\": \"string\", \"format\": \"date-time\" },",
									"        \"updater\": {  \"type\": [\"string\", \"null\"] },",
									"        \"update_date\": { \"type\": [\"string\", \"null\"], \"format\": \"date-time\" }",
									"    },",
									"    \"required\": [\"id\", \"project_id\", \"name\", \"slug\", \"creator\", \"create_date\", \"updater\", \"update_date\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"var array_schema = {",
									"    \"type\": \"array\",",
									"    \"items\": obj_schema",
									"}",
									"",
									"pm.globals.set('COLLECTIONGROUP_OBJ_SCHEMA', JSON.stringify(obj_schema));",
									"",
									"pm.globals.set('COLLECTIONGROUP_ARRAY_SCHEMA', JSON.stringify(array_schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(array_schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "913c8cfd-3ced-49da-b43f-07ffaf365023"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/collection_groups",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"collection_groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetCollectionGroupDetails",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"project_id\": { \"type\": \"string\" },",
									"        \"slug\": { \"type\": \"string\" },",
									"        \"name\": { \"type\": \"string\" },",
									"        \"creator\": { \"type\": \"string\" },",
									"        \"create_date\": { \"type\": \"string\", \"format\": \"date-time\" },",
									"        \"updater\": {  \"type\": [\"string\", \"null\"] },",
									"        \"update_date\": { \"type\": [\"string\", \"null\"], \"format\": \"date-time\" },",
									"        \"timeseries\": {",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"                \"type\": \"object\",",
									"                \"properties\": {",
									"                    \"id\": { \"type\": \"string\" },",
									"                    \"slug\": { \"type\": \"string\" },",
									"                    \"name\": { \"type\": \"string\" },",
									"                    \"variable\": {\"type\": \"string\"},",
									"                    \"project_id\": {\"type\": \"string\"},",
									"                    \"project\": {\"type\": \"string\"},",
									"                    \"project_slug\": {\"type\": \"string\"},",
									"                    \"instrument_id\": { \"type\": \"string\" },",
									"                    \"instrument\": { \"type\": \"string\"  },",
									"                    \"instrument_slug\": {\"type\": \"string\"},",
									"                    \"parameter_id\": { \"type\": \"string\" },",
									"                    \"parameter\": { \"type\": \"string\"  },",
									"                    \"unit_id\": { \"type\": \"string\" },",
									"                    \"unit\": { \"type\": \"string\"  },",
									"                    \"latest_time\": {\"type\": \"string\", \"format\": \"date-time\"},",
									"                    \"latest_value\": {\"type\": \"number\"},",
									"                    \"is_computed\": {\"type\": \"boolean\"},",
									"                },",
									"                \"required\": [\"id\", \"slug\", \"name\", \"variable\", \"project_id\", \"project\", \"project_slug\", \"instrument_id\", \"instrument\", \"instrument_slug\", \"parameter_id\", \"parameter\", \"unit_id\", \"unit\", \"latest_time\", \"latest_value\", \"is_computed\"],",
									"                \"additionalProperties\": false",
									"            },",
									"        },",
									"    },",
									"    \"required\": [\"id\", \"project_id\", \"name\", \"slug\", \"creator\", \"create_date\", \"updater\", \"update_date\", \"timeseries\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"pm.globals.set('COLLECTIONGROUP_DETAILS_OBJ_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "c063a710-4210-4404-8012-b019dd8e4a10"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/collection_groups/30b32cb1-0936-42c4-95d1-63a7832a57db",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"collection_groups",
								"30b32cb1-0936-42c4-95d1-63a7832a57db"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteCollectionGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "3fbbd64d-59d5-4c86-9b24-c39e9885c4cf"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/5b6f4f37-7755-4cf9-bd02-94f1e9bc5984/collection_groups/1519eaea-1799-4375-aa37-0e35aa654643",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
								"collection_groups",
								"1519eaea-1799-4375-aa37-0e35aa654643"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Computations",
			"item": [
				{
					"name": "GetComputation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"calculation schema matches\", () => {\r",
									"    pm.response.to.have.jsonSchema({\r",
									"        \"type\": \"array\",\r",
									"        \"properties\": {\r",
									"            \"id\": { \"type\": \"string\" },\r",
									"            \"instrument_id\": { \"type\": \"string\" },\r",
									"            \"parameter_id\": { \"type\": \"string\" },\r",
									"            \"unit_id\": { \"type\": \"string\" },\r",
									"            \"slug\": { \"type\": \"string\" },\r",
									"            \"name\": { \"type\": \"string\" },\r",
									"            \"contents\": { \"type\": \"string\" },\r",
									"        },\r",
									"        \"required\": [\r",
									"            \"id\",\r",
									"            \"instrument_id\",\r",
									"            \"parameter_id\",\r",
									"            \"unit_id\",\r",
									"            \"slug\",\r",
									"            \"name\",\r",
									"            \"contents\",\r",
									"        ]\r",
									"    });\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/calculations/:instrument_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"calculations",
								":instrument_id"
							],
							"variable": [
								{
									"key": "instrument_id",
									"value": "a7540f69-c41e-43b3-b655-6e44097edb7e",
									"description": "Instrument to fetch calculation formulas for."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateComputation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"calculation id exists\", () => {\r",
									"    pm.response.to.have.jsonSchema({\r",
									"        \"type\": \"object\",\r",
									"        \"properties\": {\r",
									"            \"id\": { \"type\": \"string\" },\r",
									"        },\r",
									"        \"required\": [\"id\"]\r",
									"    });\r",
									"});\r",
									"var calculation_id = pm.response.json().calculation_id;\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\r\n    \"parameter_id\": \"068b59b0-aafb-4c98-ae4b-ed0365a6fbac\",\r\n    \"unit_id\": \"f777f2e2-5e32-424e-a1ca-19d16cd8abce\",\r\n    \"slug\": \"test_calculation\",\r\n    \"name\": \"test calculation\",\r\n    \"contents\": \"a + b\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/calculations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"calculations"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateComputation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"calculation id exists\", () => {\r",
									"    pm.response.to.have.jsonSchema({\r",
									"        \"type\": \"object\",\r",
									"        \"properties\": {\r",
									"            \"id\": { \"type\": \"string\" },\r",
									"        },\r",
									"        \"required\": [\"id\"]\r",
									"    });\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\r\n    \"formula_name\": \"NEW NAME\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/calculations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"calculations"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteComputation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/calculations/:calculation_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"calculations",
								":calculation_id"
							],
							"variable": [
								{
									"key": "calculation_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Calculation to remove."
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwt_existing_admin}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b4da183b-b2a5-419f-9d8a-97ac9436471d",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "7b749830-7ef3-4e8e-a384-bb0046dbb0b1",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}