{
	"info": {
		"_postman_id": "03a9272d-e484-46b7-8403-94d6bcf5e6f5",
		"name": "instrumentation-regression",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Profiles",
			"item": [
				{
					"name": "CreateProfile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_new_user}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"testuser\",\n    \"email\": \"test.user@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/profiles",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetMyProfile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"username\": { \"type\": \"string\" },",
									"        \"email\": { \"type\": \"string\" },",
									"    },",
									"    \"required\": [\"id\", \"username\", \"email\"],",
									"    \"additionalProperties\": true",
									"}",
									"",
									"pm.globals.set('PROFILE_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/my_profile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"my_profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateToken",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/my_tokens",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"my_tokens"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Project Membership",
			"item": [
				{
					"name": "ListProjectMembers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var obj_schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"profile_id\": { \"type\": \"string\" },",
									"        \"username\": { \"type\": [\"string\"] },",
									"        \"email\": { \"type\": [\"string\"] },",
									"        \"role_id\": { \"type\": [\"string\"] },",
									"        \"role\": { \"type\": [\"string\"] }",
									"    },",
									"    \"required\": [\"id\", \"profile_id\", \"username\", \"email\", \"role_id\", \"role\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"// schema validator",
									"var array_schema = {",
									"    \"type\": \"array\",",
									"    \"items\": obj_schema",
									"}",
									"",
									"pm.globals.set('PROJECT_MEMBERSHIP_OBJECT_SCHEMA', JSON.stringify(obj_schema));",
									"pm.globals.set('PROJECT_MEMBERSHIP_ARRAY_SCHEMA', JSON.stringify(array_schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(array_schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/:project_id/members",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"members"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "RemoveProjectMemberRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/:project_id/members/:member_id/roles/:role_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"members",
								":member_id",
								"roles",
								":role_id"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								},
								{
									"key": "member_id",
									"value": "57329df6-9f7a-4dad-9383-4633b452efab",
									"description": "Member uuid"
								},
								{
									"key": "role_id",
									"value": "37f14863-8f3b-44ca-8deb-4b74ce8a8a69",
									"description": "Role uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "AddProjectMemberRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(JSON.parse(pm.globals.get(\"PROJECT_MEMBERSHIP_OBJECT_SCHEMA\")))",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/:project_id/members/:member_id/roles/:role_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"members",
								":member_id",
								"roles",
								":role_id"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								},
								{
									"key": "member_id",
									"value": "57329df6-9f7a-4dad-9383-4633b452efab",
									"description": "Member uuid"
								},
								{
									"key": "role_id",
									"value": "37f14863-8f3b-44ca-8deb-4b74ce8a8a69",
									"description": "Role uuid"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Instruments",
			"item": [
				{
					"name": "GetInstrument",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"groups\": {",
									"            \"type\": \"array\",",
									"            \"items\": { \"type\": \"string\" },",
									"        },",
									"        \"constants\": {",
									"            \"type\": \"array\",",
									"            \"items\": { \"type\": \"string\" },",
									"        },",
									"        \"alert_configs\": {",
									"            \"type\": \"array\",",
									"            \"items\": { \"type\": \"string\" },",
									"        },",
									"        \"slug\": { \"type\": \"string\" },",
									"        \"name\": { \"type\": \"string\" },",
									"        \"type_id\": { \"type\": \"string\" },",
									"        \"type\": { \"type\": \"string\" },",
									"        \"status_id\": { \"type\": \"string\" },",
									"        \"status\": { \"type\": \"string\" },",
									"        \"status_time\": { \"type\": \"string\" },",
									"        \"geometry\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"type\": {",
									"                    \"type\": \"string\",",
									"                    \"pattern\": \"Point\"",
									"                },",
									"                \"coordinates\": {",
									"                    \"type\": \"array\",",
									"                    \"minItems\": 2,",
									"                    \"maxItems\": 2,",
									"                    \"items\": { \"type\": \"number\" },",
									"                }",
									"            },",
									"            \"required\": [\"type\", \"coordinates\"]",
									"        },",
									"        \"station\": { \"type\": [\"number\", \"null\"] },",
									"        \"offset\": { \"type\": [\"number\", \"null\"] },",
									"        \"creator\": { \"type\": \"string\" },",
									"        \"create_date\": { \"type\": \"string\", \"format\": \"date-time\" },",
									"        \"updater\": {  \"type\": [\"string\", \"null\"] },",
									"        \"update_date\": { \"type\": [\"string\", \"null\"], \"format\": \"date-time\" },",
									"        \"project_id\": { \"type\": [\"string\", \"null\"] },",
									"        \"nid_id\": { \"type\": [\"string\", \"null\"] },",
									"        \"usgs_id\": { \"type\": [\"string\", \"null\"] }",
									"    },",
									"    \"required\": [\"id\", \"slug\", \"name\", \"type_id\", \"type\", \"status_id\", \"status\", \"status_time\", \"geometry\", \"creator\", \"create_date\", \"updater\", \"update_date\", \"project_id\", \"station\", \"offset\", \"constants\", \"alert_configs\", \"nid_id\", \"usgs_id\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"pm.globals.set('INSTRUMENT_OBJ_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/:instrument_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								":instrument_id"
							],
							"variable": [
								{
									"key": "instrument_id",
									"value": "a7540f69-c41e-43b3-b655-6e44097edb7e",
									"description": "Instrument uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetInstrumentCount",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"instrument_count\": { \"type\": \"number\" }",
									"    },",
									"    \"required\": [\"instrument_count\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/count",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateInstrument",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('INSTRUMENT_OBJ_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n    \"status_id\": \"94578354-ffdf-4119-9663-6bd4323e58f5\",\n    \"status\": \"destroyed\",\n    \"status_time\": \"2001-01-01T00:00:00Z\",\n    \"slug\": \"demo-piezometer-1\",\n    \"name\": \"Demo Piezometer 1 Updated Name\",\n    \"type_id\": \"1bb4bf7c-f5f8-44eb-9805-43b07ffadbef\",\n    \"type\": \"Piezometer\",\n    \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            -80.8,\n            26.7\n        ]\n    },\n    \"station\": null,\n    \"offset\": null,\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\n    \"zreference\": 44.5,\n    \"zreference_datum_id\": \"72113f9a-982d-44e5-8fc1-8e595dafd344\",\n    \"zreference_datum\": \"North American Vertical Datum of 1988 (NAVD 88)\",\n    \"zreference_time\": \"2006-06-01T00:00:00Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/:project_id/instruments/:instrument_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"instruments",
								":instrument_id"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								},
								{
									"key": "instrument_id",
									"value": "a7540f69-c41e-43b3-b655-6e44097edb7e",
									"description": "Instrument uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateInstrumentGeometry",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('INSTRUMENT_OBJ_SCHEMA'))",
									"    )",
									"});",
									"// Assert known updated values of lat/lon",
									"pm.test(\"Response lat/lon matches submitted values\", function () {",
									"  pm.expect(pm.response.json().geometry.coordinates).to.include(-78);",
									"  pm.expect(pm.response.json().geometry.coordinates).to.include(25);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"Point\",\n    \"coordinates\": [\n        -78.0,\n        25.0\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/:project_id/instruments/:instrument_id/geometry",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"instruments",
								":instrument_id",
								"geometry"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								},
								{
									"key": "instrument_id",
									"value": "a7540f69-c41e-43b3-b655-6e44097edb7e",
									"description": "Instrument uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ListInstruments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// schema validator",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('INSTRUMENT_OBJ_SCHEMA'))",
									"}",
									"",
									"pm.globals.set('INSTRUMENT_ARRAY_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/instruments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateInstrumentBulk_Array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[{\n    \"status_id\": \"94578354-ffdf-4119-9663-6bd4323e58f5\",\n    \"status\": \"destroyed\",\n    \"status_time\": \"2001-01-01T00:00:00Z\",\n    \"slug\": \"demo-piezometer-2\",\n    \"formula\": null,\n    \"name\": \"Demo Piezometer 2\",\n    \"type_id\": \"1bb4bf7c-f5f8-44eb-9805-43b07ffadbef\",\n    \"type\": \"Piezometer\",\n    \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            -80.8,\n            26.7\n        ]\n    },\n    \"station\": null,\n    \"offset\": null,\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\"\n},\n{\n    \"status_id\": \"94578354-ffdf-4119-9663-6bd4323e58f5\",\n    \"status\": \"destroyed\",\n    \"status_time\": \"2001-01-01T00:00:00Z\",\n    \"slug\": \"demo-piezometer-3\",\n    \"name\": \"Demo Piezometer 3\",\n    \"type_id\": \"1bb4bf7c-f5f8-44eb-9805-43b07ffadbef\",\n    \"type\": \"Piezometer\",\n    \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            -80.8,\n            26.7\n        ]\n    },\n    \"formula\": null,\n    \"station\": null,\n    \"offset\": null,\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\"\n},\n{\n    \"status_id\": \"94578354-ffdf-4119-9663-6bd4323e58f5\",\n    \"status\": \"destroyed\",\n    \"status_time\": \"2001-01-01T00:00:00Z\",\n    \"slug\": \"demo-piezometer-4\",\n    \"name\": \"Demo Piezometer 4\",\n    \"type_id\": \"1bb4bf7c-f5f8-44eb-9805-43b07ffadbef\",\n    \"type\": \"Piezometer\",\n    \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            -80.8,\n            26.7\n        ]\n    },\n    \"station\": null,\n    \"offset\": null,\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\"\n}\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/:project_id/instruments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"instruments"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ValidateCreateInstrument_Array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[{\n    \"status_id\": \"94578354-ffdf-4119-9663-6bd4323e58f5\",\n    \"status\": \"destroyed\",\n    \"status_time\": \"2001-01-01T00:00:00Z\",\n    \"slug\": \"demo-piezometer-2\",\n    \"name\": \"Demo Piezometer 2\",\n    \"type_id\": \"1bb4bf7c-f5f8-44eb-9805-43b07ffadbef\",\n    \"type\": \"Piezometer\",\n    \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            -80.8,\n            26.7\n        ]\n    },\n    \"station\": null,\n    \"offset\": null,\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\n    \"zreference\": 44.5,\n    \"zreference_datum_id\": \"72113f9a-982d-44e5-8fc1-8e595dafd344\",\n    \"zreference_datum\": \"North American Vertical Datum of 1988 (NAVD 88)\",\n    \"zreference_time\": \"2006-06-01T00:00:00Z\"\n},\n{\n    \"status_id\": \"94578354-ffdf-4119-9663-6bd4323e58f5\",\n    \"status\": \"destroyed\",\n    \"status_time\": \"2001-01-01T00:00:00Z\",\n    \"slug\": \"demo-piezometer-3\",\n    \"name\": \"Demo Piezometer 3\",\n    \"type_id\": \"1bb4bf7c-f5f8-44eb-9805-43b07ffadbef\",\n    \"type\": \"Piezometer\",\n    \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            -80.8,\n            26.7\n        ]\n    },\n    \"station\": null,\n    \"offset\": null,\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\n    \"zreference\": 44.5,\n    \"zreference_datum_id\": \"72113f9a-982d-44e5-8fc1-8e595dafd344\",\n    \"zreference_datum\": \"North American Vertical Datum of 1988 (NAVD 88)\",\n    \"zreference_time\": \"2006-06-01T00:00:00Z\"\n},\n{\n    \"status_id\": \"94578354-ffdf-4119-9663-6bd4323e58f5\",\n    \"status\": \"destroyed\",\n    \"status_time\": \"2001-01-01T00:00:00Z\",\n    \"slug\": \"demo-piezometer-4\",\n    \"name\": \"Demo Piezometer 4\",\n    \"type_id\": \"1bb4bf7c-f5f8-44eb-9805-43b07ffadbef\",\n    \"type\": \"Piezometer\",\n    \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            -80.8,\n            26.7\n        ]\n    },\n    \"station\": null,\n    \"offset\": null,\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\n    \"zreference\": 44.5,\n    \"zreference_datum_id\": \"72113f9a-982d-44e5-8fc1-8e595dafd344\",\n    \"zreference_datum\": \"North American Vertical Datum of 1988 (NAVD 88)\",\n    \"zreference_time\": \"2006-06-01T00:00:00Z\"\n}\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/:project_id/instruments?dry_run=true",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"instruments"
							],
							"query": [
								{
									"key": "dry_run",
									"value": "true"
								}
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateInstrumentBulk_Object",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status_id\": \"94578354-ffdf-4119-9663-6bd4323e58f5\",\n    \"status\": \"destroyed\",\n    \"status_time\": \"2001-01-01T00:00:00Z\",\n    \"slug\": \"demo-piezometer-5\",\n    \"name\": \"Demo Piezometer 5\",\n    \"type_id\": \"1bb4bf7c-f5f8-44eb-9805-43b07ffadbef\",\n    \"type\": \"Piezometer\",\n    \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            -80.8,\n            26.7\n        ]\n    },\n    \"formula\": null,\n    \"station\": null,\n    \"offset\": null,\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/:project_id/instruments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"instruments"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ValidateCreateInstrument_Object",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status_id\": \"94578354-ffdf-4119-9663-6bd4323e58f5\",\n    \"status\": \"destroyed\",\n    \"status_time\": \"2001-01-01T00:00:00Z\",\n    \"slug\": \"demo-piezometer-5\",\n    \"name\": \"Demo Piezometer 5\",\n    \"type_id\": \"1bb4bf7c-f5f8-44eb-9805-43b07ffadbef\",\n    \"type\": \"Piezometer\",\n    \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            -80.8,\n            26.7\n        ]\n    },\n    \"station\": null,\n    \"offset\": null,\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\n    \"zreference\": 44.5,\n    \"zreference_datum_id\": \"72113f9a-982d-44e5-8fc1-8e595dafd344\",\n    \"zreference_datum\": \"North American Vertical Datum of 1988 (NAVD 88)\",\n    \"zreference_time\": \"2006-06-01T00:00:00Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/:project_id/instruments?dry_run=true",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"instruments"
							],
							"query": [
								{
									"key": "dry_run",
									"value": "true"
								}
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetInstrumentStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"time\": { \"type\": \"string\" },",
									"        \"status_id\": { \"type\": \"string\" },",
									"        \"status\": { \"type\": \"string\" }",
									"    },",
									"    \"required\": [\"id\", \"time\", \"status_id\", \"status\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"pm.globals.set('INSTRUMENT_STATUS_OBJECT_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/:instrument_id/status/:status_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								":instrument_id",
								"status",
								":status_id"
							],
							"variable": [
								{
									"key": "instrument_id",
									"value": "a7540f69-c41e-43b3-b655-6e44097edb7e",
									"description": "Instrument uuid"
								},
								{
									"key": "status_id",
									"value": "4ed5e9ac-40dc-4bca-b44f-7b837ec1b0fc",
									"description": "Status uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ListInstrumentStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// schema validator",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('INSTRUMENT_STATUS_OBJECT_SCHEMA'))",
									"}",
									"",
									"pm.globals.set('INSTRUMENT_STATUS_ARRAY_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/:instrument_id/status",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								":instrument_id",
								"status"
							],
							"variable": [
								{
									"key": "instrument_id",
									"value": "a7540f69-c41e-43b3-b655-6e44097edb7e",
									"description": "Instrument uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateInstrumentStatus_Array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n{\n    \"time\": \"2002-01-01T00:00:00Z\",\n    \"status_id\": \"03a2bf9a-bbd8-4031-8f4e-13e8c77807f1\"\n},\n{\n    \"time\": \"2003-01-01T00:00:00Z\",\n    \"status_id\": \"c9ee4acb-9623-4fde-bf36-7668afe463d4\"\n},\n{\n    \"time\": \"2004-01-01T00:00:00Z\",\n    \"status_id\": \"e26ba2ef-9b52-4c71-97df-9e4b6cf4174d\"\n},\n{\n    \"time\": \"2005-01-01T00:00:00Z\",\n    \"status_id\": \"94578354-ffdf-4119-9663-6bd4323e58f5\"\n}\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/:instrument_id/status",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								":instrument_id",
								"status"
							],
							"variable": [
								{
									"key": "instrument_id",
									"value": "a7540f69-c41e-43b3-b655-6e44097edb7e",
									"description": "Instrument uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateInstrumentStatus_Object",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"time\": \"2018-01-01T00:00:00Z\",\n    \"status_id\": \"03a2bf9a-bbd8-4031-8f4e-13e8c77807f1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/:instrument_id/status",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								":instrument_id",
								"status"
							],
							"variable": [
								{
									"key": "instrument_id",
									"value": "a7540f69-c41e-43b3-b655-6e44097edb7e",
									"description": "Instrument uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteInstrumentStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/:instrument_id/status/:status_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								":instrument_id",
								"status",
								":status_id"
							],
							"variable": [
								{
									"key": "instrument_id",
									"value": "a7540f69-c41e-43b3-b655-6e44097edb7e",
									"description": "Instrument uuid"
								},
								{
									"key": "status_id",
									"value": "4ed5e9ac-40dc-4bca-b44f-7b837ec1b0fc",
									"description": "Status uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteInstrument",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/:project_id/instruments/:instrument_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"instruments",
								":instrument_id"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								},
								{
									"key": "instrument_id",
									"value": "a7540f69-c41e-43b3-b655-6e44097edb7e",
									"description": "Instrument uuid"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Instrument Notes",
			"item": [
				{
					"name": "GetInstrumentNote",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"instrument_id\": { \"type\": \"string\" },",
									"        \"title\": { \"type\": \"string\" },",
									"        \"body\": { \"type\": \"string\" },",
									"        \"time\": { \"type\": \"string\" },",
									"        \"creator\": { \"type\": \"string\" },",
									"        \"create_date\": { \"type\": \"string\", \"format\": \"date-time\" },",
									"        \"updater\": {  \"type\": [\"string\", \"null\"] },",
									"        \"update_date\": { \"type\": [\"string\", \"null\"], \"format\": \"date-time\" },",
									"    },",
									"    \"required\": [\"id\", \"instrument_id\", \"title\", \"body\", \"time\", \"creator\", \"create_date\", \"updater\", \"update_date\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"pm.globals.set('INSTRUMENT_NOTE_OBJ_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/:instrument_id/notes/:note_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								":instrument_id",
								"notes",
								":note_id"
							],
							"variable": [
								{
									"key": "instrument_id",
									"value": "a7540f69-c41e-43b3-b655-6e44097edb7e",
									"description": "Instrument uuid"
								},
								{
									"key": "note_id",
									"value": "90a3f8de-de65-48a7-8286-024c13162958",
									"description": "Note uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ListInstrumentNotes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// schema validator",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('INSTRUMENT_NOTE_OBJ_SCHEMA'))",
									"}",
									"",
									"pm.globals.set('INSTRUMENT_NOTE_ARRAY_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/notes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								"notes"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListInstrumentInstrumentNotes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('INSTRUMENT_NOTE_ARRAY_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/:instrument_id/notes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								":instrument_id",
								"notes"
							],
							"variable": [
								{
									"key": "instrument_id",
									"value": "a7540f69-c41e-43b3-b655-6e44097edb7e",
									"description": "Instrument uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PutInstrumentNote",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('INSTRUMENT_NOTE_OBJ_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"90a3f8de-de65-48a7-8286-024c13162958\",\n    \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n    \"title\": \"Instrument Test Note 1\",\n    \"body\": \"Updated instrument note body text.  This is example updated text.\",\n    \"time\": \"2020-06-09T01:49:48.505713Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/:instrument_id/notes/:note_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								":instrument_id",
								"notes",
								":note_id"
							],
							"variable": [
								{
									"key": "instrument_id",
									"value": "9048e7c1-eba2-4888-9048-db63e71e85ef",
									"description": "Instrument uuid"
								},
								{
									"key": "note_id",
									"value": "90a3f8de-de65-48a7-8286-024c13162958",
									"description": "Note uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateInstrumentNote_Array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('INSTRUMENT_NOTE_ARRAY_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n        \"title\": \"Instrument Test Note 101\",\n        \"body\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\\n labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\\n nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\\n cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui\\n officia deserunt mollit anim id est laborum.\\n\",\n        \"time\": \"2020-06-09T01:49:48.505713Z\"\n    },\n        {\n        \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n        \"title\": \"Instrument Test Note 102\",\n        \"body\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\\n labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\\n nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\\n cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui\\n officia deserunt mollit anim id est laborum.\\n\",\n        \"time\": \"2020-06-09T01:49:48.505713Z\"\n    },\n        {\n        \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n        \"title\": \"Instrument Test Note 103\",\n        \"body\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\\n labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\\n nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\\n cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui\\n officia deserunt mollit anim id est laborum.\\n\",\n        \"time\": \"2020-06-09T01:49:48.505713Z\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/notes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								"notes"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateInstrumentNote_Object",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('INSTRUMENT_NOTE_ARRAY_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n        \"title\": \"Instrument Note from Object Upload\",\n        \"body\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\\n labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\\n nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\\n cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui\\n officia deserunt mollit anim id est laborum.\\n\",\n        \"time\": \"2020-06-09T01:49:48.505713Z\"\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instruments/notes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								"notes"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteInstrumentNote",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/instruments/notes/:note_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								"notes",
								":note_id"
							],
							"variable": [
								{
									"key": "note_id",
									"value": "90a3f8de-de65-48a7-8286-024c13162958",
									"description": "Note uuid"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Instrument Groups",
			"item": [
				{
					"name": "GetInstrumentGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"slug\": { \"type\": \"string\" },",
									"        \"name\": { \"type\": \"string\" },",
									"        \"description\": { \"type\": \"string\" },",
									"        \"creator\": { \"type\": \"string\" },",
									"        \"create_date\": { \"type\": \"string\", \"format\": \"date-time\" },",
									"        \"updater\": {  \"type\": [\"string\", \"null\"] },",
									"        \"update_date\": { \"type\": [\"string\", \"null\"], \"format\": \"date-time\" },",
									"        \"project_id\": { \"type\": [\"string\", \"null\"] },",
									"        \"instrument_count\": { \"type\": \"number\" },",
									"        \"timeseries_count\": { \"type\": \"number\" }",
									"    },",
									"    \"required\": [\"id\", \"slug\", \"name\", \"description\", \"creator\", \"create_date\", \"updater\", \"update_date\", \"project_id\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"pm.globals.set('INSTRUMENTGROUP_OBJ_SCHEMA', JSON.stringify(schema))",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/instrument_groups/:instrument_group_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instrument_groups",
								":instrument_group_id"
							],
							"variable": [
								{
									"key": "instrument_group_id",
									"value": "d0916e8a-39a6-4f2f-bd31-879881f8b40c",
									"description": "Instrument Group uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ListInstrumentGroups",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('INSTRUMENTGROUP_OBJ_SCHEMA'))",
									"}",
									"",
									"pm.globals.set(\"INSTRUMENTGROUP_ARRAY_SCHEMA\", JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/instrument_groups",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instrument_groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateInstrumentGroupBulk_Array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('INSTRUMENTGROUP_ARRAY_SCHEMA'))",
									"    )",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[{\n    \"name\": \"Test Instrument Group 100\",\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\"\n},\n{\n    \"name\": \"Test Instrument Group 101\",\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\"\n},\n{\n    \"name\": \"Test Instrument Group 102\",\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\"\n}]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instrument_groups",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instrument_groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateInstrumentGroupBulk_Object",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('INSTRUMENTGROUP_ARRAY_SCHEMA'))",
									"    )",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Instrument Group 500\",\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\n    \"description\": \"This is a sample instrument group created by integration tests\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instrument_groups",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instrument_groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateInstrumentGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('INSTRUMENTGROUP_OBJ_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"d0916e8a-39a6-4f2f-bd31-879881f8b40c\",\n    \"name\": \"Updated Name for Instrument Group 1\",\n    \"description\": \"A sample instrument group created by integration tests\",\n    \"project_id\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instrument_groups/:instrument_group_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instrument_groups",
								":instrument_group_id"
							],
							"variable": [
								{
									"key": "instrument_group_id",
									"value": "d0916e8a-39a6-4f2f-bd31-879881f8b40c",
									"description": "Instrument Group uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteInstrumentGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instrument_groups/:instrument_group_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instrument_groups",
								":instrument_group_id"
							],
							"variable": [
								{
									"key": "instrument_group_id",
									"value": "d0916e8a-39a6-4f2f-bd31-879881f8b40c",
									"description": "Instrument Group uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ListInstrumentGroupInstruments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('INSTRUMENT_ARRAY_SCHEMA')))",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/instrument_groups/:instrument_group_id/instruments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instrument_groups",
								":instrument_group_id",
								"instruments"
							],
							"variable": [
								{
									"key": "instrument_group_id",
									"value": "d0916e8a-39a6-4f2f-bd31-879881f8b40c",
									"description": "Instrument Group uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ListInstrumentGroupMeasurements",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/instrument_groups/:instrument_group_id/timeseries_measurements?after=1900-01-01T00:00:00.00Z&before=2025-12-31T00:00:00.00Z&interval=",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instrument_groups",
								":instrument_group_id",
								"timeseries_measurements"
							],
							"query": [
								{
									"key": "after",
									"value": "1900-01-01T00:00:00.00Z"
								},
								{
									"key": "before",
									"value": "2025-12-31T00:00:00.00Z"
								},
								{
									"key": "interval",
									"value": ""
								}
							],
							"variable": [
								{
									"key": "instrument_group_id",
									"value": "d0916e8a-39a6-4f2f-bd31-879881f8b40c",
									"description": "instrument group uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Instrument to InstrumentGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201])",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"id\": \"9e8f2ca4-4037-45a4-aaca-d9e598877439\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instrument_groups/:instrument_group_id/instruments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instrument_groups",
								":instrument_group_id",
								"instruments"
							],
							"variable": [
								{
									"key": "instrument_group_id",
									"value": "d0916e8a-39a6-4f2f-bd31-879881f8b40c",
									"description": "Instrument Group uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Instrument from InstrumentGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/instrument_groups/:instrument_group_id/instruments/:instrument_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instrument_groups",
								":instrument_group_id",
								"instruments",
								":instrument_id"
							],
							"variable": [
								{
									"key": "instrument_group_id",
									"value": "d0916e8a-39a6-4f2f-bd31-879881f8b40c",
									"description": "Instrument Group uuid"
								},
								{
									"key": "instrument_id",
									"value": "9e8f2ca4-4037-45a4-aaca-d9e598877439",
									"description": "Instrument uuid"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Plot Configurations",
			"item": [
				{
					"name": "GetPlotConfiguration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"timeseries_id\": {",
									"            \"type\": \"array\",",
									"            \"items\": { \"type\": \"string\" },",
									"        },",
									"        \"slug\": { \"type\": \"string\" },",
									"        \"name\": { \"type\": \"string\" },",
									"        \"creator\": { \"type\": \"string\" },",
									"        \"create_date\": { \"type\": \"string\", \"format\": \"date-time\" },",
									"        \"updater\": {  \"type\": [\"string\", \"null\"] },",
									"        \"update_date\": { \"type\": [\"string\", \"null\"], \"format\": \"date-time\" },",
									"        \"project_id\": { \"type\": [\"string\", \"null\"] },",
									"        \"show_masked\": { \"type\": \"boolean\" },",
									"        \"show_nonvalidated\": { \"type\": \"boolean\" },",
									"        \"show_comments\": { \"type\": \"boolean\" },",
									"        \"auto_range\": { \"type\": \"boolean\" },",
									"        \"date_range\": { \"type\": \"string\" },",
									"    },",
									"    \"required\": [\"id\", \"slug\", \"name\", \"creator\", \"create_date\", \"updater\", \"update_date\", \"project_id\", \"timeseries_id\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"pm.globals.set('PLOT_CONFIGURATION_OBJ_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/:project_id/plot_configurations/:plot_configuration_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"plot_configurations",
								":plot_configuration_id"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								},
								{
									"key": "plot_configuration_id",
									"value": "64879f68-6a2c-4d78-8e8b-5e9b9d2e0d6a",
									"description": "Plot Configuration uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ListPlotConfigurations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// schema validator",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('PLOT_CONFIGURATION_OBJ_SCHEMA'))",
									"}",
									"",
									"pm.globals.set('PLOT_CONFIGURATION_ARRAY_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/:project_id/plot_configurations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"plot_configurations"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdatePlotConfiguration - Remove Timeseries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(JSON.parse(pm.globals.get('PLOT_CONFIGURATION_OBJ_SCHEMA')))",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"64879f68-6a2c-4d78-8e8b-5e9b9d2e0d6a\",\n    \"name\": \"PZ-1A PLOT\",\n    \"slug\": \"pz-1a-plot\",\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\n    \"timeseries_id\": [\n        \"9a3864a8-8766-4bfa-bad1-0328b166f6a8\"\n    ],\n    \"creator\": \"00000000-0000-0000-0000-000000000000\",\n    \"create_date\": \"2021-02-26T15:54:18.982835Z\",\n    \"updater\": null,\n    \"update_date\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/:project_id/plot_configurations/:plot_configuration_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"plot_configurations",
								":plot_configuration_id"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								},
								{
									"key": "plot_configuration_id",
									"value": "64879f68-6a2c-4d78-8e8b-5e9b9d2e0d6a",
									"description": "Plot Configuration uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdatePlotConfiguration - Add Many Timeseries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(JSON.parse(pm.globals.get('PLOT_CONFIGURATION_OBJ_SCHEMA')))",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"64879f68-6a2c-4d78-8e8b-5e9b9d2e0d6a\",\n    \"name\": \"PZ-1A PLOT\",\n    \"slug\": \"pz-1a-plot\",\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\n    \"timeseries_id\": [\n        \"8f4ca3a3-5971-4597-bd6f-332d1cf5af7c\",\n        \"869465fc-dc1e-445e-81f4-9979b5fadda9\",\n        \"9a3864a8-8766-4bfa-bad1-0328b166f6a8\",\n        \"7ee902a3-56d0-4acf-8956-67ac82c03a96\",\n        \"d9697351-3a38-4194-9ac4-41541927e475\",\n        \"22a734d6-dc24-451d-a462-43a32f335ae8\",\n        \"14247bc8-b264-4857-836f-182d47ebb39d\"\n    ],\n    \"creator\": \"00000000-0000-0000-0000-000000000000\",\n    \"create_date\": \"2021-02-26T16:21:07.925124Z\",\n    \"updater\": null,\n    \"update_date\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/:project_id/plot_configurations/:plot_configuration_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"plot_configurations",
								":plot_configuration_id"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								},
								{
									"key": "plot_configuration_id",
									"value": "64879f68-6a2c-4d78-8e8b-5e9b9d2e0d6a",
									"description": "Plot configuration uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CreatePlotConfiguration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(JSON.parse(pm.globals.get('PLOT_CONFIGURATION_OBJ_SCHEMA')))",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Create Plot Configuration\",\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\n    \"timeseries_id\": [\n        \"8f4ca3a3-5971-4597-bd6f-332d1cf5af7c\",\n        \"869465fc-dc1e-445e-81f4-9979b5fadda9\",\n        \"9a3864a8-8766-4bfa-bad1-0328b166f6a8\",\n        \"7ee902a3-56d0-4acf-8956-67ac82c03a96\",\n        \"d9697351-3a38-4194-9ac4-41541927e475\",\n        \"22a734d6-dc24-451d-a462-43a32f335ae8\",\n        \"14247bc8-b264-4857-836f-182d47ebb39d\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/:project_id/plot_configurations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"plot_configurations"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DeletePlotConfiguration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/:project_id/plot_configurations/:plot_configuration_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"plot_configurations",
								":plot_configuration_id"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								},
								{
									"key": "plot_configuration_id",
									"value": "64879f68-6a2c-4d78-8e8b-5e9b9d2e0d6a",
									"description": "Plot Configuration uuid"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Projects",
			"item": [
				{
					"name": "ListDistricts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var districtSchema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"name\": { \"type\": \"string\" },",
									"        \"initials\": { \"type\": \"string\" },",
									"        \"division_name\": { \"type\": \"string\" },",
									"        \"division_initials\": { \"type\": \"string\" },",
									"        \"office_id\": { \"type\": [\"string\", \"null\"] }",
									"    },",
									"    \"additionalProperties\": false",
									"}",
									"",
									"pm.globals.set('DISTRICT_OBJ_SCHEMA', JSON.stringify(districtSchema));",
									"",
									"// schema validator",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('DISTRICT_OBJ_SCHEMA'))",
									"}",
									"",
									"pm.globals.set('DISTRICT_ARRAY_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/districts",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"districts"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetProject",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"federal_id\": { \"type\": [\"string\", \"null\"] },",
									"        \"image\": { \"type\": [\"string\", \"null\"]},",
									"        \"office_id\": { \"type\": [ \"string\", \"null\" ]},",
									"        \"slug\": { \"type\": \"string\" },",
									"        \"name\": { \"type\": \"string\" },",
									"        \"creator\": { \"type\": \"string\" },",
									"        \"create_date\": { \"type\": \"string\", \"format\": \"date-time\" },",
									"        \"updater\": {  \"type\": [\"string\", \"null\"] },",
									"        \"update_date\": { \"type\": [\"string\", \"null\"], \"format\": \"date-time\" },",
									"        \"instrument_count\": {\"type\": \"number\"},",
									"        \"instrument_group_count\": {\"type\": \"number\"},",
									"        \"timeseries\": {",
									"            \"type\": \"array\",",
									"            \"items\": { \"type\": \"string\" },",
									"        },",
									"    },",
									"    \"required\": [\"id\", \"federal_id\", \"image\", \"office_id\", \"slug\", \"name\", \"creator\", \"create_date\", \"updater\", \"update_date\", \"instrument_count\", \"instrument_group_count\", \"timeseries\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"pm.globals.set('PROJECT_OBJ_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/:project_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project Id"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateProjectTimeseries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/:project_id/timeseries/:timeseries_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"timeseries",
								":timeseries_id"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								},
								{
									"key": "timeseries_id",
									"value": "8f4ca3a3-5971-4597-bd6f-332d1cf5af7c",
									"description": "Timeseries uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteProjectTimeseries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/:project_id/timeseries/:timeseries_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"timeseries",
								":timeseries_id"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								},
								{
									"key": "timeseries_id",
									"value": "8f4ca3a3-5971-4597-bd6f-332d1cf5af7c",
									"description": "Timeseries uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetProjectCount",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"project_count\": { \"type\": \"number\" }",
									"    },",
									"    \"required\": [\"project_count\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/count",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListProjects",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('PROJECT_OBJ_SCHEMA'))",
									"}",
									"",
									"pm.globals.set('PROJECT_ARRAY_SCHEMA', JSON.stringify(schema))",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListProjectsByFederalID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('PROJECT_OBJ_SCHEMA'))",
									"}",
									"",
									"pm.globals.set('PROJECT_ARRAY_SCHEMA', JSON.stringify(schema))",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects?federal_id=NIST001",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects"
							],
							"query": [
								{
									"key": "federal_id",
									"value": "NIST001",
									"description": "Project Federal ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateProjectBulk_Array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_existing_admin}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[{\n    \"name\": \"Test Project 100000\",\n    \"federal_id\": null\n},\n{\n    \"name\": \"Test Project 100001\",\n    \"federal_id\": null\n},\n{\n    \"name\": \"Test Project 100002\",\n    \"federal_id\": null\n}\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateProjectBulk_Object",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_existing_admin}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Project 500000\",\n    \"federal_id\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateProject",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('PROJECT_OBJ_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\n    \"federal_id\": null,\n    \"name\": \"Blue Water Reservoir\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/:project_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteProject",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/:project_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ListProjectInstrumentGroups",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('INSTRUMENTGROUP_ARRAY_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/:project_id/instrument_groups",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"instrument_groups"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ListProjectInstruments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('INSTRUMENT_ARRAY_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/:project_id/instruments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"instruments"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ListProjectInstrumentNames",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": { \"type\": \"string\" }",
									"}",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/:project_id/instruments/names",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"instruments",
								"names"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Timeseries",
			"item": [
				{
					"name": "GetTimeseries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"slug\": { \"type\": \"string\" },",
									"        \"name\": { \"type\": \"string\" },",
									"        \"variable\": {\"type\": \"string\"},",
									"        \"project_id\": {\"type\": \"string\"},",
									"        \"project\": {\"type\": \"string\"},",
									"        \"project_slug\": {\"type\": \"string\"},",
									"        \"instrument_id\": { \"type\": \"string\" },",
									"        \"instrument\": { \"type\": \"string\"  },",
									"        \"instrument_slug\": {\"type\": \"string\"},",
									"        \"parameter_id\": { \"type\": \"string\" },",
									"        \"parameter\": { \"type\": \"string\"  },",
									"        \"unit_id\": { \"type\": \"string\" },",
									"        \"unit\": { \"type\": \"string\"  },",
									"        \"is_computed\": { \"type\": \"boolean\" }",
									"    },",
									"    \"required\": [\"id\", \"slug\", \"name\", \"variable\", \"instrument_id\", \"parameter_id\", \"unit_id\", \"is_computed\"],",
									"    \"additionalProperties\": false",
									"};",
									"",
									"pm.globals.set('TIMESERIES_OBJ_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/timeseries/:timeseries_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"timeseries",
								":timeseries_id"
							],
							"variable": [
								{
									"key": "timeseries_id",
									"value": "869465fc-dc1e-445e-81f4-9979b5fadda9",
									"description": "Timeseries uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ListTimeseries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('TIMESERIES_OBJ_SCHEMA'))",
									"}",
									"",
									"pm.globals.set('TIMESERIES_ARRAY_SCHEMA', JSON.stringify(schema))",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/timeseries",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"timeseries"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListProjectTimeseries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('TIMESERIES_OBJ_SCHEMA'))",
									"}",
									"",
									"pm.globals.set('TIMESERIES_ARRAY_SCHEMA', JSON.stringify(schema))",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/:project_id/timeseries",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"timeseries"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ListInstrumentGroupTimeseries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('TIMESERIES_OBJ_SCHEMA'))",
									"}",
									"",
									"pm.globals.set('TIMESERIES_ARRAY_SCHEMA', JSON.stringify(schema))",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/instrument_groups/:instrument_group_id/timeseries",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instrument_groups",
								":instrument_group_id",
								"timeseries"
							],
							"variable": [
								{
									"key": "instrument_group_id",
									"value": "d0916e8a-39a6-4f2f-bd31-879881f8b40c",
									"description": "Instrument Group uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ListTimeseriesMeasurements",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"// NOTE: timeseries_measurement may not have id when posted",
									"var timeseries_measurement_schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"time\": { \"type\": \"string\" },",
									"        \"value\": { \"type\": \"number\" }",
									"    },",
									"    \"required\": [\"time\", \"value\"],",
									"    \"additionalProperties\": true",
									"};",
									"",
									"// timeseries_measurement_collection",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"timeseries_id\": {\"type\": \"string\"},",
									"        \"items\": { ",
									"            \"type\": \"array\",",
									"            \"items\": timeseries_measurement_schema",
									"        }",
									"    },",
									"    \"required\": [\"items\", \"timeseries_id\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"var schema2 = {\"type\": \"array\", \"items\": schema}",
									"",
									"pm.globals.set('TIMESERIES_MEASUREMENT_COLLECTION_OBJECT_SCHEMA', JSON.stringify(schema)",
									")",
									"pm.globals.set('TIMESERIES_MEASUREMENT_COLLECTION_ARRAY_SCHEMA', JSON.stringify(schema2)",
									")",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", () => {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/timeseries/:timeseries_id/measurements?after=1900-01-01T00:00:00.00Z&before=2021-01-01T00:00:00.00Z",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"timeseries",
								":timeseries_id",
								"measurements"
							],
							"query": [
								{
									"key": "after",
									"value": "1900-01-01T00:00:00.00Z"
								},
								{
									"key": "before",
									"value": "2021-01-01T00:00:00.00Z"
								}
							],
							"variable": [
								{
									"key": "timeseries_id",
									"value": "869465fc-dc1e-445e-81f4-9979b5fadda9",
									"description": "Timeseries uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateTimeseries_Object",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('TIMESERIES_ARRAY_SCHEMA'))",
									"    )",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Timeseries 4\",\n    \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n    \"parameter_id\": \"068b59b0-aafb-4c98-ae4b-ed0365a6fbac\",\n    \"unit_id\": \"f777f2e2-5e32-424e-a1ca-19d16cd8abce\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/timeseries",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"timeseries"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateTimeseries_Array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('TIMESERIES_ARRAY_SCHEMA'))",
									"    )",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[{\n    \"name\": \"Test Timeseries 5\",\n    \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n    \"parameter_id\": \"068b59b0-aafb-4c98-ae4b-ed0365a6fbac\",\n    \"unit_id\": \"f777f2e2-5e32-424e-a1ca-19d16cd8abce\"\n},\n{\n    \"name\": \"Test Timeseries 6\",\n    \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n    \"parameter_id\": \"068b59b0-aafb-4c98-ae4b-ed0365a6fbac\",\n    \"unit_id\": \"f777f2e2-5e32-424e-a1ca-19d16cd8abce\"\n},\n{\n    \"name\": \"Test Timeseries 7\",\n    \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n    \"parameter_id\": \"068b59b0-aafb-4c98-ae4b-ed0365a6fbac\",\n    \"unit_id\": \"f777f2e2-5e32-424e-a1ca-19d16cd8abce\"\n}]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/timeseries",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"timeseries"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateTimeseriesMeasurements_Object",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"timeseries_id\": \"869465fc-dc1e-445e-81f4-9979b5fadda9\",\n    \"items\": [\n    \t    {\"time\": \"2020-06-01T00:00:00Z\", \"value\": 10.00},\n            {\"time\": \"2020-06-02T01:00:00Z\", \"value\": 11.10},\n            {\"time\": \"2020-06-03T02:00:00Z\", \"value\": 10.20},\n            {\"time\": \"2020-06-04T03:00:00Z\", \"value\": 10.30},\n            {\"time\": \"2020-06-05T04:00:00Z\", \"value\": 10.40}\n    \t]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/:project_id/timeseries_measurements",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"timeseries_measurements"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateTimeseriesMeasurements_Array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"timeseries_id\": \"869465fc-dc1e-445e-81f4-9979b5fadda9\",\n        \"items\": [\n\t\t{\"time\": \"2020-06-01T00:00:00Z\", \"value\": 10.00},\n\t        {\"time\": \"2020-06-02T01:00:00Z\", \"value\": 11.10},\n\t        {\"time\": \"2020-06-03T02:00:00Z\", \"value\": 10.20},\n\t        {\"time\": \"2020-06-04T03:00:00Z\", \"value\": 10.30},\n\t        {\"time\": \"2020-06-05T04:00:00Z\", \"value\": 10.40}\n\t]\n    },\n    {\n        \"timeseries_id\": \"9a3864a8-8766-4bfa-bad1-0328b166f6a8\",\n        \"items\": [\n\t\t{\"time\": \"2020-06-01T00:00:00Z\", \"value\": 10.00},\n\t        {\"time\": \"2020-06-02T01:00:00Z\", \"value\": 11.10},\n\t        {\"time\": \"2020-06-03T02:00:00Z\", \"value\": 10.20},\n\t        {\"time\": \"2020-06-04T03:00:00Z\", \"value\": 10.30},\n\t        {\"time\": \"2020-06-05T04:00:00Z\", \"value\": 10.40}\n\t]\n    },\n    {\n        \"timeseries_id\": \"7ee902a3-56d0-4acf-8956-67ac82c03a96\",\n        \"items\": [\n\t\t{\"time\": \"2020-06-01T00:00:00Z\", \"value\": 10.00},\n\t        {\"time\": \"2020-06-02T01:00:00Z\", \"value\": 11.10},\n\t        {\"time\": \"2020-06-03T02:00:00Z\", \"value\": 10.20},\n\t        {\"time\": \"2020-06-04T03:00:00Z\", \"value\": 10.30},\n\t        {\"time\": \"2020-06-05T04:00:00Z\", \"value\": 10.40}\n\t]\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/:project_id/timeseries_measurements",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"timeseries_measurements"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateTimeseriesMeasurements",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_existing_admin}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"timeseries_id\": \"869465fc-dc1e-445e-81f4-9979b5fadda9\",\n    \"items\": [\n        {\n            \"time\": \"2020-01-23T00:00:00Z\",\n            \"value\": 130.05,\n            \"masked\": true,\n            \"validated\": true,\n            \"annotation\": \"test\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/:project_id/timeseries_measurements?after=1900-01-01T00:00:00.00Z&before=2021-01-01T00:00:00.00Z",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"timeseries_measurements"
							],
							"query": [
								{
									"key": "after",
									"value": "1900-01-01T00:00:00.00Z",
									"description": "Default timestamp 7 days prior to now"
								},
								{
									"key": "before",
									"value": "2021-01-01T00:00:00.00Z",
									"description": "Default timestamp now"
								}
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								}
							]
						},
						"description": "Overwrites measurements with the supplied payload within a time window (> after, < before)"
					},
					"response": []
				},
				{
					"name": "UpdateTimeseries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('TIMESERIES_OBJ_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"869465fc-dc1e-445e-81f4-9979b5fadda9\",\n    \"slug\": \"test-timeseries-1\",\n    \"name\": \"New Name for Test Timeseries 1\",\n    \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n    \"instrument\": \"Demo Piezometer 1\",\n    \"parameter_id\": \"068b59b0-aafb-4c98-ae4b-ed0365a6fbac\",\n    \"parameter\": \"stage\",\n    \"unit_id\": \"f777f2e2-5e32-424e-a1ca-19d16cd8abce\",\n    \"unit\": \"feet\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/timeseries/:timeseries_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"timeseries",
								":timeseries_id"
							],
							"variable": [
								{
									"key": "timeseries_id",
									"value": "869465fc-dc1e-445e-81f4-9979b5fadda9",
									"description": "Timeseries uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteTimeseries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/timeseries/:timeseries_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"timeseries",
								":timeseries_id"
							],
							"variable": [
								{
									"key": "timeseries_id",
									"value": "869465fc-dc1e-445e-81f4-9979b5fadda9",
									"description": "Timeseries uuid"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Instrument Constants",
			"item": [
				{
					"name": "ListInstrumentConstants",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/:project_id/instruments/:instrument_id/constants",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"instruments",
								":instrument_id",
								"constants"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								},
								{
									"key": "instrument_id",
									"value": "a7540f69-c41e-43b3-b655-6e44097edb7e",
									"description": "Instrument uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateInstrumentConstant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('TIMESERIES_ARRAY_SCHEMA'))",
									"    )",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Instrument Constant\",\n    \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n    \"parameter_id\": \"068b59b0-aafb-4c98-ae4b-ed0365a6fbac\",\n    \"unit_id\": \"f777f2e2-5e32-424e-a1ca-19d16cd8abce\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/:project_id/instruments/:instrument_id/constants",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"instruments",
								":instrument_id",
								"constants"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								},
								{
									"key": "instrument_id",
									"value": "a7540f69-c41e-43b3-b655-6e44097edb7e",
									"description": "Instrument uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateInstrumentContant",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"22a734d6-dc24-451d-a462-43a32f335ae8\",\n    \"name\": \"Tip Depth Updated Name\",\n    \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n    \"parameter_id\": \"068b59b0-aafb-4c98-ae4b-ed0365a6fbac\",\n    \"unit_id\": \"f777f2e2-5e32-424e-a1ca-19d16cd8abce\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/:project_id/instruments/:instrument_id/constants/:timeseries_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"instruments",
								":instrument_id",
								"constants",
								":timeseries_id"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984"
								},
								{
									"key": "instrument_id",
									"value": "a7540f69-c41e-43b3-b655-6e44097edb7e"
								},
								{
									"key": "timeseries_id",
									"value": "22a734d6-dc24-451d-a462-43a32f335ae8"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteInstrumentConstant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/:project_id/instruments/:instrument_id/constants/:timeseries_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"instruments",
								":instrument_id",
								"constants",
								":timeseries_id"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								},
								{
									"key": "instrument_id",
									"value": "a7540f69-c41e-43b3-b655-6e44097edb7e",
									"description": "Instrument uuid"
								},
								{
									"key": "timeseries_id",
									"value": "14247bc8-b264-4857-836f-182d47ebb39d",
									"description": "Timeseries uuid"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Misc",
			"item": [
				{
					"name": "GetDomains",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": {",
									"        \"type\": \"object\",",
									"        \"properties\": {",
									"            \"id\": { \"type\": \"string\" },",
									"            \"group\": { \"type\": \"string\" },",
									"            \"value\": { \"type\": \"string\" },",
									"            \"description\": { \"type\": [\"string\", \"null\"] },",
									"        },",
									"        \"required\": [\"id\", \"group\", \"value\", \"description\"],",
									"        \"additionalProperties\": false",
									"    }",
									"}",
									"pm.globals.set('DOMAIN_ARRAY_SCHEMA', schema);",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/domains",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"domains"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetHome",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"instrument_count\": { \"type\": \"number\" },",
									"        \"instrument_group_count\": { \"type\": \"number\" },",
									"        \"project_count\": { \"type\": \"number\" },",
									"        \"new_instruments_7d\": { \"type\": \"number\" },",
									"        \"new_measurements_2h\": { \"type\": \"number\" }",
									"    },",
									"    \"required\": [\"instrument_count\", \"instrument_group_count\", \"project_count\", \"new_instruments_7d\", \"new_measurements_2h\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/home",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"home"
							]
						}
					},
					"response": []
				},
				{
					"name": "DoHeartbeat",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/heartbeat",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"heartbeat"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetLatestHeartbeat",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/heartbeats/latest",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"heartbeats",
								"latest"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Units",
			"item": [
				{
					"name": "ListUnits",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": {",
									"        \"type\": \"object\",",
									"        \"properties\": {",
									"            \"id\": { \"type\": \"string\" },",
									"            \"name\": { \"type\": \"string\" },",
									"            \"abbreviation\": { \"type\": \"string\" },",
									"            \"unit_family_id\": { \"type\": \"string\" },",
									"            \"unit_family\": { \"type\": \"string\" },",
									"            \"measure_id\": { \"type\": \"string\" },",
									"            \"measure\": { \"type\": [\"string\", \"null\"] },",
									"        },",
									"        \"required\": [\"id\", \"name\", \"abbreviation\", \"unit_family_id\", \"unit_family\", \"measure_id\", \"measure\"],",
									"        \"additionalProperties\": false",
									"    }",
									"}",
									"pm.globals.set('UNIT_ARRAY_SCHEMA', schema);",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/units",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"units"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Explorer",
			"item": [
				{
					"name": "PostExplorer Query By InstrumetID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"9e8f2ca4-4037-45a4-aaca-d9e598877439\", \"a7540f69-c41e-43b3-b655-6e44097edb7e\"]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/explorer",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"explorer"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostExplorer Query By InstrumetID With Date Filters",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"9e8f2ca4-4037-45a4-aaca-d9e598877439\", \"a7540f69-c41e-43b3-b655-6e44097edb7e\"]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/explorer?after=2020-03-03T00:00:00Z&before=2021-05-27T00:32:45Z",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"explorer"
							],
							"query": [
								{
									"key": "after",
									"value": "2020-03-03T00:00:00Z"
								},
								{
									"key": "before",
									"value": "2021-05-27T00:32:45Z"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "Tests for explorer endpoints"
		},
		{
			"name": "Evaluation",
			"item": [
				{
					"name": "GetEvaluation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var instrumentsEvaluationsSchema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"instrument_id\": { \"type\": \"string\" },",
									"        \"instrument_name\": { \"type\": \"string\" }",
									"    }",
									"}",
									"",
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"name\": { \"type\": \"string\" },",
									"        \"body\": { \"type\": \"string\" },",
									"        \"project_id\": { \"type\": \"string\" },",
									"        \"project_name\": { \"type\": \"string\" },",
									"        \"alert_config_id\": { \"type\": [\"string\", \"null\"] },",
									"        \"submittal_id\": { \"type\": [\"string\", \"null\"] },",
									"        \"alert_config_name\": { \"type\": [\"string\", \"null\"] },",
									"        \"start_date\": { \"type\": \"string\", \"format\": \"date-time\" },",
									"        \"end_date\": { \"type\": \"string\", \"format\": \"date-time\" },",
									"        \"instruments\": { \"type\": \"array\", \"items\": instrumentsEvaluationsSchema },",
									"        \"creator\": { \"type\": \"string\" },",
									"        \"creator_username\": { \"type\": \"string\" },",
									"        \"create_date\": { \"type\": \"string\", \"format\": \"date-time\" },",
									"        \"updater\": { \"type\": [\"string\", \"null\"] },",
									"        \"updater_username\": { \"type\": [\"string\", \"null\"] },",
									"        \"update_date\": { \"type\": [\"string\", \"null\"], \"format\": \"date-time\" }",
									"    },",
									"    \"additionalProperties\": false",
									"}",
									"",
									"pm.globals.set('EVALUATION_OBJ_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/:project_id/evaluations/:evaluation_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"evaluations",
								":evaluation_id"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								},
								{
									"key": "evaluation_id",
									"value": "f7169aca-aa5f-4a0b-9fcc-609bb5c2bd7b"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ListInstrumentEvaluations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// schema validator",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('EVALUATION_OBJ_SCHEMA'))",
									"}",
									"",
									"pm.globals.set('EVALUATION_ARRAY_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/:project_id/instruments/:instrument_id/evaluations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"instruments",
								":instrument_id",
								"evaluations"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								},
								{
									"key": "instrument_id",
									"value": "a7540f69-c41e-43b3-b655-6e44097edb7e",
									"description": "Instrument uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ListProjectEvaluations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// schema validator",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('EVALUATION_OBJ_SCHEMA'))",
									"}",
									"",
									"pm.globals.set('EVALUATION_ARRAY_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/:project_id/evaluations?alert_config_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"evaluations"
							],
							"query": [
								{
									"key": "alert_config_id",
									"value": null
								}
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateEvaluation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('EVALUATION_OBJ_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\n    \"name\": \"New Test Evaluation\",\n    \"body\": \"New Test Evaluation Description\",\n    \"start_date\": \"2023-05-16T13:19:41.441328Z\",\n    \"end_date\": \"2023-06-16T13:19:41.441328Z\",\n    \"submittal_id\": \"f8189297-f1a6-489d-9ea7-f1a0ffc30153\",\n    \"instruments\": [\n        {\"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\"}\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/:project_id/evaluations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"evaluations"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateEvaluation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('EVALUATION_OBJ_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"add252bf-2fa7-4824-b129-e4d0ff42dffa\",\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\n    \"name\": \"Updated Test Evaluation\",\n    \"body\": \"Updated Test Evaluation Description\",\n    \"start_date\": \"2023-07-16T13:19:41.441328Z\",\n    \"end_date\": \"2023-08-16T13:19:41.441328Z\",\n    \"instruments\": []\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/:project_id/evaluations/:evaluation_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"evaluations",
								":evaluation_id"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								},
								{
									"key": "evaluation_id",
									"value": "f7169aca-aa5f-4a0b-9fcc-609bb5c2bd7b"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteEvaluation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/:project_id/evaluations/:evaluation_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"evaluations",
								":evaluation_id"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								},
								{
									"key": "evaluation_id",
									"value": "f7169aca-aa5f-4a0b-9fcc-609bb5c2bd7b"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Alert Configs",
			"item": [
				{
					"name": "GetAlertConfig",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var alertConfigInstrumentSchema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"instrument_id\": { \"type\": \"string\" },",
									"        \"instrument_name\": { \"type\": \"string\" }",
									"    }",
									"}",
									"",
									"var alertConfigEmailSubSchema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"user_type\": { \"type\": \"string\" },",
									"        \"username\": { \"type\": [\"string\", \"null\"] },",
									"        \"email\": { \"type\": \"string\" }",
									"    }",
									"}",
									"",
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"name\": { \"type\": \"string\" },",
									"        \"body\": { \"type\": \"string\" },",
									"        \"project_id\": { \"type\": \"string\" },",
									"        \"alert_type_id\": { \"type\": \"string\" },",
									"        \"alert_type\": { \"type\": \"string\" },",
									"        \"start_date\": { \"type\": \"string\" },",
									"        \"schedule_interval\": { \"type\": \"string\" },",
									"        \"mute_consecutive_alerts\": { \"type\": \"boolean\" },",
									"        \"remind_interval\": { \"type\": [\"string\", \"null\"] },",
									"        \"warning_interval\": { \"type\": [\"string\", \"null\"] },",
									"        \"last_checked\": { \"type\": [\"string\", \"null\"], \"format\": \"date-time\" },",
									"        \"last_reminded\": { \"type\": [\"string\", \"null\"], \"format\": \"date-time\" },",
									"        \"instruments\": { \"type\": \"array\", \"items\": alertConfigInstrumentSchema },",
									"        \"alert_email_subscriptions\": { \"type\": \"array\", \"items\": alertConfigEmailSubSchema },",
									"        \"alert_status\": { \"type\": \"string\" },",
									"        \"creator\": { \"type\": \"string\" },",
									"        \"creator_username\": { \"type\": \"string\" },",
									"        \"create_date\": { \"type\": \"string\", \"format\": \"date-time\" },",
									"        \"updater\": { \"type\": [\"string\", \"null\"] },",
									"        \"updater_username\": { \"type\": [\"string\", \"null\"] },",
									"        \"update_date\": { \"type\": [\"string\", \"null\"], \"format\": \"date-time\" }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"",
									"pm.globals.set('ALERTCONFIG_OBJ_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/:project_id/alert_configs/:alert_config_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"alert_configs",
								":alert_config_id"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								},
								{
									"key": "alert_config_id",
									"value": "1efd2d85-d3ee-4388-85a0-f824a761ff8b",
									"description": "Alert Config uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ListInstrumentAlertConfigs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// schema validator",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('ALERTCONFIG_OBJ_SCHEMA'))",
									"}",
									"",
									"pm.globals.set('ALERTCONFIG_ARRAY_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/:project_id/instruments/:instrument_id/alert_configs",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"instruments",
								":instrument_id",
								"alert_configs"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								},
								{
									"key": "instrument_id",
									"value": "9e8f2ca4-4037-45a4-aaca-d9e598877439",
									"description": "Instrument uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ListProjectAlertConfigs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// schema validator",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('ALERTCONFIG_OBJ_SCHEMA'))",
									"}",
									"",
									"pm.globals.set('ALERTCONFIG_ARRAY_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/:project_id/alert_configs?alert_type_id=",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"alert_configs"
							],
							"query": [
								{
									"key": "alert_type_id",
									"value": ""
								}
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateAlertConfig",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('ALERTCONFIG_OBJ_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\n    \"name\": \"New Test Alert Config\",\n    \"body\": \"New Test Alert Config Description\",\n    \"alert_type_id\": \"97e7a25c-d5c7-4ded-b272-1bb6e5914fe3\",\n    \"start_date\": \"2023-05-16T13:19:41.441328Z\",\n    \"schedule_interval\": \"P1D\",\n    \"mute_consecutive_alerts\": true,\n    \"warning_interval\": \"PT1H\",\n    \"instruments\": [\n        {\n            \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\"\n        }\n    ],\n    \"alert_email_subscriptions\": [\n        {   \"id\": \"1ebf9e14-2b1c-404e-9535-6c2ee24944b6\",\n            \"user_type\": \"email\",\n            \"username\": null,\n            \"email\": \"no.profile@fake.usace.army.mil\"\n        },\n        {\n            \"id\": \"57329df6-9f7a-4dad-9383-4633b452efab\",\n            \"user_type\": \"profile\",\n            \"username\": \"AnthonyLambert\",\n            \"email\": \"anthony.lambert@fake.usace.army.mil\"\n        },\n        {\n            \"id\": null,\n            \"user_type\": null,\n            \"username\": null,\n            \"email\": \"noprofile.newemail@fake.usace.army.mil\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/:project_id/alert_configs",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"alert_configs"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateAlertConfig",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('ALERTCONFIG_OBJ_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Test Alert 1\",\n    \"body\": \"Updated Alert for demonstration purposes.\",\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\n    \"start_date\": \"2023-05-16T13:19:41.441328Z\",\n    \"schedule_interval\": \"P3D\",\n    \"mute_consecutive_alerts\": false,\n    \"remind_interval\": \"P1D\",\n    \"instruments\": [],\n    \"alert_email_subscriptions\": [\n        {\n            \"id\": \"57329df6-9f7a-4dad-9383-4633b452efab\",\n            \"user_type\": \"profile\",\n            \"username\": \"AnthonyLambert\",\n            \"email\": \"anthony.lambert@fake.usace.army.mil\"\n        }\n    ]\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/:project_id/alert_configs/:alert_config_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"alert_configs",
								":alert_config_id"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								},
								{
									"key": "alert_config_id",
									"value": "90ff91d6-ab39-40db-9160-34ce17416281",
									"description": "Alert Config uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteAlertConfig",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/:project_id/alert_configs/:alert_config_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"alert_configs",
								":alert_config_id"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								},
								{
									"key": "alert_config_id",
									"value": "90ff91d6-ab39-40db-9160-34ce17416281",
									"description": "Alert Config uuid"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Submittals",
			"item": [
				{
					"name": "ListProjectSubmittals",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var submittalSchema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"alert_config_id\": { \"type\": \"string\" },",
									"        \"alert_config_name\": { \"type\": \"string\" },",
									"        \"alert_type_id\": { \"type\": \"string\" },",
									"        \"alert_type_name\": { \"type\": \"string\" },",
									"        \"project_id\": { \"type\": \"string\" },",
									"        \"submittal_status_id\": { \"type\": \"string\" },",
									"        \"submittal_status_name\": { \"type\": \"string\" },",
									"        \"create_date\": { \"type\": \"string\", \"format\": \"date-time\" },",
									"        \"due_date\": { \"type\": \"string\", \"format\": \"date-time\" },",
									"        \"completion_date\": { \"type\": [\"string\", \"null\"], \"format\": \"date-time\" },",
									"        \"marked_as_missing\": { \"type\": \"boolean\" },",
									"        \"warning_sent\": { \"type\": \"boolean\" }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"",
									"pm.globals.set('SUBMITTAL_OBJ_SCHEMA', JSON.stringify(submittalSchema));",
									"",
									"// schema validator",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('SUBMITTAL_OBJ_SCHEMA'))",
									"}",
									"",
									"pm.globals.set('SUBMITTAL_ARRAY_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/:project_id/submittals?missing=false",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"submittals"
							],
							"query": [
								{
									"key": "missing",
									"value": "false",
									"description": "Only show \"unverified missing\" submnittals"
								}
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "project uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ListInstrumentSubmittals",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// schema validator",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('SUBMITTAL_OBJ_SCHEMA'))",
									"}",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/instruments/:instrument_id/submittals?missing=false",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instruments",
								":instrument_id",
								"submittals"
							],
							"query": [
								{
									"key": "missing",
									"value": "false",
									"description": "Only show \"unverified missing\" submnittals"
								}
							],
							"variable": [
								{
									"key": "instrument_id",
									"value": "9e8f2ca4-4037-45a4-aaca-d9e598877439"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ListAlertConfigSubmittals",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// schema validator",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('SUBMITTAL_OBJ_SCHEMA'))",
									"}",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/alert_configs/:alert_config_id/submittals?missing=false",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"alert_configs",
								":alert_config_id",
								"submittals"
							],
							"query": [
								{
									"key": "missing",
									"value": "false",
									"description": "Only show \"unverified missing\" submnittals"
								}
							],
							"variable": [
								{
									"key": "alert_config_id",
									"value": "1efd2d85-d3ee-4388-85a0-f824a761ff8b"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "VerifyMissingSubmittal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{base_url}}/submittals/:submittal_id/verify_missing",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"submittals",
								":submittal_id",
								"verify_missing"
							],
							"variable": [
								{
									"key": "submittal_id",
									"value": "b8c1c297-d1d5-4cee-b949-72299b330617"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "VerifyMissingAlertConfigSubmittals",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{base_url}}/alert_configs/:alert_config_id/submittals/verify_missing",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"alert_configs",
								":alert_config_id",
								"submittals",
								"verify_missing"
							],
							"variable": [
								{
									"key": "alert_config_id",
									"value": "1efd2d85-d3ee-4388-85a0-f824a761ff8b"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "District Rollup",
			"item": [
				{
					"name": "ListProjectEvaluationDistrictRollup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var rollupSchema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"alert_type_id\": { \"type\": \"string\" },",
									"        \"office_id\": { \"type\": [\"string\", \"null\"] },",
									"        \"district_initials\": { \"type\": [\"string\", \"null\"] },",
									"        \"project_name\": { \"type\": \"string\" },",
									"        \"project_id\": { \"type\": \"string\" },",
									"        \"month\": { \"type\": \"string\", \"format\": \"date-time\" },",
									"        \"expected_total_submittals\": { \"type\": \"number\" },",
									"        \"actual_total_submittals\": { \"type\": \"number\" },",
									"        \"red_submittals\": { \"type\": \"number\" },",
									"        \"yellow_submittals\": { \"type\": \"number\" },",
									"        \"green_submittals\": { \"type\": \"number\" }",
									"    },",
									"    \"additionalProperties\": false",
									"}",
									"",
									"pm.globals.set('DISTROLLUP_OBJ_SCHEMA', JSON.stringify(rollupSchema));",
									"",
									"// schema validator",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('DISTROLLUP_OBJ_SCHEMA'))",
									"}",
									"",
									"pm.globals.set('DISTROLLUP_ARRAY_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/:project_id/district_rollup/evaluation_submittals?from_timestamp_month&to_timestamp_month",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"district_rollup",
								"evaluation_submittals"
							],
							"query": [
								{
									"key": "from_timestamp_month",
									"value": null,
									"description": "ISO timestamp with first requested month (inclusive)"
								},
								{
									"key": "to_timestamp_month",
									"value": null,
									"description": "ISO timestamp with last requested month (inclusive)"
								}
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ListProjectMeasurementDistrictRollup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('DISTROLLUP_OBJ_SCHEMA'))",
									"}",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/:project_id/district_rollup/measurement_submittals?from_timestamp_month&to_timestamp_month",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"district_rollup",
								"measurement_submittals"
							],
							"query": [
								{
									"key": "from_timestamp_month",
									"value": null,
									"description": "ISO timestamp with first requested month (inclusive)"
								},
								{
									"key": "to_timestamp_month",
									"value": null,
									"description": "ISO timestamp with last requested month (inclusive)"
								}
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Alert Subscriptions",
			"item": [
				{
					"name": "SubscribeProfileToInstrumentAlert",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// schema validation",
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"alert_config_id\": { \"type\": \"string\" },",
									"        \"profile_id\": { \"type\": \"string\" },",
									"        \"mute_ui\": { \"type\": \"boolean\" },",
									"        \"mute_notify\": { \"type\": \"boolean\" }",
									"    },",
									"    \"required\": [\"id\", \"alert_config_id\", \"profile_id\", \"mute_ui\", \"mute_notify\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"pm.globals.set('ALERT_SUBSCRIPTION_OBJECT', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/:project_id/instruments/:instrument_id/alert_configs/:alert_config_id/subscribe",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"instruments",
								":instrument_id",
								"alert_configs",
								":alert_config_id",
								"subscribe"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								},
								{
									"key": "instrument_id",
									"value": "a7540f69-c41e-43b3-b655-6e44097edb7e",
									"description": "Instrument uuid"
								},
								{
									"key": "alert_config_id",
									"value": "6f3dfe9f-4664-4c78-931f-32ffac6d2d43",
									"description": "Alert Config uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ListMyInstrumentAlertSubscriptions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": JSON.parse(pm.globals.get('ALERT_SUBSCRIPTION_OBJECT'))",
									"}",
									"",
									"pm.globals.set('ALERT_SUBSCRIPTION_ARRAY', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/my_alert_subscriptions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"my_alert_subscriptions"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateInstrumentAlertSubscription",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// NOTE: No Test Coverage At Present on this endpoint.",
									"// Revisit at a later date; There are challenges with dynamically created Profile ID and Subscription IDs"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"197d6140-f273-4c50-a87f-dec3f809663b\",\n    \"alert_config_id\": \"243e9d32-2cba-4f12-9abe-63adc09fc5dd\",\n    \"profile_id\": \"96c01ff3-edc9-44f0-8690-191cc2281a12\",\n    \"mute_ui\": false,\n    \"mute_notify\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/alert_subscriptions/:alert_subscription_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"alert_subscriptions",
								":alert_subscription_id"
							],
							"variable": [
								{
									"key": "alert_subscription_id",
									"value": "197d6140-f273-4c50-a87f-dec3f809663b",
									"description": "Alert Subscription uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ListAlertsForInstrument",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var alertConfigInstrumentSchema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"instrument_id\": { \"type\": \"string\" },",
									"        \"instrument_name\": { \"type\": \"string\" }",
									"    }",
									"}",
									"",
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"alert_config_id\": { \"type\": \"string\" },",
									"        \"project_id\": { \"type\": \"string\" },",
									"        \"project_name\": { \"type\": \"string\" },",
									"        \"instruments\": { \"type\": \"array\", \"items\": alertConfigInstrumentSchema },",
									"        \"name\": { \"type\": \"string\" },",
									"        \"body\": { \"type\": \"string\" },",
									"        \"create_date\": { \"type\": \"string\", \"format\": \"date-time\" }",
									"    },",
									"    \"required\": [\"id\", \"alert_config_id\", \"project_id\", \"project_name\", \"instruments\", \"name\", \"body\", \"create_date\"],",
									"    \"additionalProperties\": true",
									"}",
									"// additionalProperties: true because alert can also contain a property \"read\" when fetched from /my_alerts",
									"",
									"pm.globals.set('ALERT_OBJ_SCHEMA', JSON.stringify(schema));",
									"",
									"var list_schema = {",
									"    \"type\": \"array\",",
									"    \"items\": schema",
									"};",
									"",
									"pm.globals.set('ALERT_ARRAY_SCHEMA', JSON.stringify(list_schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(list_schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/:project_id/instruments/:instrument_id/alerts",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"instruments",
								":instrument_id",
								"alerts"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								},
								{
									"key": "instrument_id",
									"value": "a7540f69-c41e-43b3-b655-6e44097edb7e",
									"description": "Instrument uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ListMyAlerts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"     pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('ALERT_ARRAY_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/my_alerts",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"my_alerts"
							]
						}
					},
					"response": []
				},
				{
					"name": "DoAlertRead",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"     pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('ALERT_OBJ_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/my_alerts/:alert_id/read",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"my_alerts",
								":alert_id",
								"read"
							],
							"variable": [
								{
									"key": "alert_id",
									"value": "e070be13-ef17-40f3-99c8-fef3ee1b9fb5",
									"description": "Alert uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DoAlertUnread",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// schema validation",
									"pm.test(\"Schema validation\", function () {",
									"     pm.response.to.have.jsonSchema(",
									"        JSON.parse(pm.globals.get('ALERT_OBJ_SCHEMA'))",
									"    )",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/my_alerts/:alert_id/unread",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"my_alerts",
								":alert_id",
								"unread"
							],
							"variable": [
								{
									"key": "alert_id",
									"value": "e070be13-ef17-40f3-99c8-fef3ee1b9fb5",
									"description": "Alert uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "UnsubscribeProfileToInstrumentAlert",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 201",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/:project_id/instruments/:instrument_id/alert_configs/:alert_config_id/unsubscribe",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"instruments",
								":instrument_id",
								"alert_configs",
								":alert_config_id",
								"unsubscribe"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								},
								{
									"key": "instrument_id",
									"value": "a7540f69-c41e-43b3-b655-6e44097edb7e",
									"description": "Instrument uuid"
								},
								{
									"key": "alert_config_id",
									"value": "6f3dfe9f-4664-4c78-931f-32ffac6d2d43",
									"description": "Alert Config uuid"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Collection Groups",
			"item": [
				{
					"name": "ListCollectionGroups",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var obj_schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"project_id\": { \"type\": \"string\" },",
									"        \"slug\": { \"type\": \"string\" },",
									"        \"name\": { \"type\": \"string\" },",
									"        \"creator\": { \"type\": \"string\" },",
									"        \"create_date\": { \"type\": \"string\", \"format\": \"date-time\" },",
									"        \"updater\": {  \"type\": [\"string\", \"null\"] },",
									"        \"update_date\": { \"type\": [\"string\", \"null\"], \"format\": \"date-time\" }",
									"    },",
									"    \"required\": [\"id\", \"project_id\", \"name\", \"slug\", \"creator\", \"create_date\", \"updater\", \"update_date\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"var array_schema = {",
									"    \"type\": \"array\",",
									"    \"items\": obj_schema",
									"}",
									"",
									"pm.globals.set('COLLECTIONGROUP_OBJ_SCHEMA', JSON.stringify(obj_schema));",
									"",
									"pm.globals.set('COLLECTIONGROUP_ARRAY_SCHEMA', JSON.stringify(array_schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(array_schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/:project_id/collection_groups",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"collection_groups"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetCollectionGroupDetails",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// validate JSON schema",
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"string\" },",
									"        \"project_id\": { \"type\": \"string\" },",
									"        \"slug\": { \"type\": \"string\" },",
									"        \"name\": { \"type\": \"string\" },",
									"        \"creator\": { \"type\": \"string\" },",
									"        \"create_date\": { \"type\": \"string\", \"format\": \"date-time\" },",
									"        \"updater\": {  \"type\": [\"string\", \"null\"] },",
									"        \"update_date\": { \"type\": [\"string\", \"null\"], \"format\": \"date-time\" },",
									"        \"timeseries\": {",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"                \"type\": \"object\",",
									"                \"properties\": {",
									"                    \"id\": { \"type\": \"string\" },",
									"                    \"slug\": { \"type\": \"string\" },",
									"                    \"name\": { \"type\": \"string\" },",
									"                    \"variable\": {\"type\": \"string\"},",
									"                    \"project_id\": {\"type\": \"string\"},",
									"                    \"project\": {\"type\": \"string\"},",
									"                    \"project_slug\": {\"type\": \"string\"},",
									"                    \"instrument_id\": { \"type\": \"string\" },",
									"                    \"instrument\": { \"type\": \"string\"  },",
									"                    \"instrument_slug\": {\"type\": \"string\"},",
									"                    \"parameter_id\": { \"type\": \"string\" },",
									"                    \"parameter\": { \"type\": \"string\"  },",
									"                    \"unit_id\": { \"type\": \"string\" },",
									"                    \"unit\": { \"type\": \"string\"  },",
									"                    \"latest_time\": {\"type\": \"string\", \"format\": \"date-time\"},",
									"                    \"latest_value\": {\"type\": \"number\"},",
									"                    \"is_computed\": {\"type\": \"boolean\"},",
									"                    \"list_order\": {\"type\": \"number\"},",
									"                },",
									"                \"required\": [\"id\", \"slug\", \"name\", \"variable\", \"project_id\", \"project\", \"project_slug\", \"instrument_id\", \"instrument\", \"instrument_slug\", \"parameter_id\", \"parameter\", \"unit_id\", \"unit\", \"latest_time\", \"latest_value\", \"is_computed\", \"list_order\"],",
									"                \"additionalProperties\": false",
									"            },",
									"        },",
									"    },",
									"    \"required\": [\"id\", \"project_id\", \"name\", \"slug\", \"creator\", \"create_date\", \"updater\", \"update_date\", \"timeseries\"],",
									"    \"additionalProperties\": false",
									"}",
									"",
									"pm.globals.set('COLLECTIONGROUP_DETAILS_OBJ_SCHEMA', JSON.stringify(schema));",
									"",
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate schema",
									"pm.test(\"Schema validation\", function () {",
									"    pm.response.to.have.jsonSchema(schema)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/:project_id/collection_groups/:collection_group_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"collection_groups",
								":collection_group_id"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								},
								{
									"key": "collection_group_id",
									"value": "30b32cb1-0936-42c4-95d1-63a7832a57db",
									"description": "Collection Group uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteCollectionGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/:project_id/collection_groups/:collection_group_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								":project_id",
								"collection_groups",
								":collection_group_id"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Project uuid"
								},
								{
									"key": "collection_group_id",
									"value": "1519eaea-1799-4375-aa37-0e35aa654643",
									"description": "Collection Group uuid"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Formulas",
			"item": [
				{
					"name": "GetInstrumentFormulas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"calculation schema matches\", () => {\r",
									"    pm.response.to.have.jsonSchema({\r",
									"        \"type\": \"array\",\r",
									"        \"properties\": {\r",
									"            \"id\": { \"type\": \"string\" },\r",
									"            \"instrument_id\": { \"type\": \"string\" },\r",
									"            \"parameter_id\": { \"type\": \"string\" },\r",
									"            \"unit_id\": { \"type\": \"string\" },\r",
									"            \"slug\": { \"type\": \"string\" },\r",
									"            \"formula_name\": { \"type\": \"string\" },\r",
									"            \"formula\": { \"type\": \"string\" },\r",
									"        },\r",
									"        \"required\": [\r",
									"            \"id\",\r",
									"            \"instrument_id\",\r",
									"            \"parameter_id\",\r",
									"            \"unit_id\",\r",
									"            \"slug\",\r",
									"            \"formula_name\",\r",
									"            \"formula\",\r",
									"        ]\r",
									"    });\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/formulas?instrument_id=a7540f69-c41e-43b3-b655-6e44097edb7e",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"formulas"
							],
							"query": [
								{
									"key": "instrument_id",
									"value": "a7540f69-c41e-43b3-b655-6e44097edb7e",
									"description": "Instrument uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateFormula",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"calculation id exists\", () => {\r",
									"    pm.response.to.have.jsonSchema({\r",
									"        \"type\": \"object\",\r",
									"        \"properties\": {\r",
									"            \"id\": { \"type\": \"string\" },\r",
									"        },\r",
									"        \"required\": [\"id\"]\r",
									"    });\r",
									"});\r",
									"var calculation_id = pm.response.json().calculation_id;\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\r\n    \"parameter_id\": \"068b59b0-aafb-4c98-ae4b-ed0365a6fbac\",\r\n    \"unit_id\": \"f777f2e2-5e32-424e-a1ca-19d16cd8abce\",\r\n    \"slug\": \"test_calculation\",\r\n    \"formula_name\": \"test calculation\",\r\n    \"formula\": \"a + b\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/formulas",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"formulas"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateFormula",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"calculation id exists\", () => {\r",
									"    pm.response.to.have.jsonSchema({\r",
									"        \"type\": \"object\",\r",
									"        \"properties\": {\r",
									"            \"id\": { \"type\": \"string\" },\r",
									"        },\r",
									"        \"required\": [\"id\"]\r",
									"    });\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\r\n    \"formula_name\": \"NEW NAME\",\r\n    \"formula\": \"c + d\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/formulas/:formula_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"formulas",
								":formula_id"
							],
							"variable": [
								{
									"key": "formula_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Formula uuid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteFormula",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/formulas/:formula_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"formulas",
								":formula_id"
							],
							"variable": [
								{
									"key": "formula_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
									"description": "Formula uuid"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Data Logger",
			"item": [
				{
					"name": "CreateDataLogger",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"datalogger id exists\", () => {",
									"    pm.response.to.have.jsonSchema({",
									"        \"type\": \"object\",",
									"        \"properties\": {",
									"            \"id\": { \"type\": \"string\" },",
									"        },",
									"        \"required\": [\"id\"]",
									"    });",
									"});",
									"var datalogger_id = pm.response.json().id;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sn\": \"11111\",\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\n    \"name\": \"Test Create Data Logger\",\n    \"model_id\": \"6a10ef5f-b9d9-4fa0-8b1e-ea1bcc81748c\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/datalogger",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"datalogger"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListProjectDataLoggers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/dataloggers?project_id=5b6f4f37-7755-4cf9-bd02-94f1e9bc5984",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"dataloggers"
							],
							"query": [
								{
									"key": "project_id",
									"value": "5b6f4f37-7755-4cf9-bd02-94f1e9bc5984"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetDataLogger",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/datalogger/:datalogger_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"datalogger",
								":datalogger_id"
							],
							"variable": [
								{
									"key": "datalogger_id",
									"value": "83a7345c-62d8-4e29-84db-c2e36f8bc40d"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetDataLoggerPreview",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/datalogger/:datalogger_id/preview",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"datalogger",
								":datalogger_id",
								"preview"
							],
							"variable": [
								{
									"key": "datalogger_id",
									"value": "83a7345c-62d8-4e29-84db-c2e36f8bc40d"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateDataLogger",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"c0b65315-f802-4ca5-a4dd-7e0cfcffd057\",\n    \"name\": \"Updated name\",\n    \"sn\": \"99999\",\n    \"project_id\": \"5b6f4f37-7755-4cf9-bd02-94f1e9bc5984\",\n    \"model\": \"CR1000X\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/datalogger/:datalogger_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"datalogger",
								":datalogger_id"
							],
							"variable": [
								{
									"key": "datalogger_id",
									"value": "c0b65315-f802-4ca5-a4dd-7e0cfcffd057"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CycleDataLoggerKey",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{base_url}}/datalogger/:datalogger_id/key",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"datalogger",
								":datalogger_id",
								"key"
							],
							"variable": [
								{
									"key": "datalogger_id",
									"value": "c0b65315-f802-4ca5-a4dd-7e0cfcffd057"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteDataLogger",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/datalogger/:datalogger_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"datalogger",
								":datalogger_id"
							],
							"variable": [
								{
									"key": "datalogger_id",
									"value": "c0b65315-f802-4ca5-a4dd-7e0cfcffd057"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Equivalency Table",
			"item": [
				{
					"name": "CreateEquivalencyTable",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"datalogger_id\": \"83a7345c-62d8-4e29-84db-c2e36f8bc40d\",\n    \"rows\": [\n        {\n            \"field_name\": \"new field name\",\n            \"display_name\": \"test 123\",\n            \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n            \"timeseries_id\": \"5985f20a-1e37-4add-823c-545cdca49b5e\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/datalogger/:datalogger_id/equivalency_table",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"datalogger",
								":datalogger_id",
								"equivalency_table"
							],
							"variable": [
								{
									"key": "datalogger_id",
									"value": "83a7345c-62d8-4e29-84db-c2e36f8bc40d"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetEquivalencyTable",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/datalogger/:datalogger_id/equivalency_table",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"datalogger",
								":datalogger_id",
								"equivalency_table"
							],
							"variable": [
								{
									"key": "datalogger_id",
									"value": "83a7345c-62d8-4e29-84db-c2e36f8bc40d"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateEquivalencyTable",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"datalogger_id\": \"83a7345c-62d8-4e29-84db-c2e36f8bc40d\",\n    \"rows\": [\n        {\n            \"id\": \"40ceff10-cdc3-4715-a4ca-c1e570fe25de\",\n            \"field_name\": \"field name 1\",\n            \"display_name\": \"test 1\",\n            \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n            \"timeseries_id\": \"7ee902a3-56d0-4acf-8956-67ac82c03a96\"\n        },\n        {\n            \"id\": \"2f1f7c3d-8b6f-4b11-917e-8f049eb6c62b\",\n            \"field_name\": \"changed field name\",\n            \"display_name\": \"changed display name\",\n            \"instrument_id\": \"a7540f69-c41e-43b3-b655-6e44097edb7e\",\n            \"timeseries_id\": \"d9697351-3a38-4194-9ac4-41541927e475\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/datalogger/:datalogger_id/equivalency_table",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"datalogger",
								":datalogger_id",
								"equivalency_table"
							],
							"variable": [
								{
									"key": "datalogger_id",
									"value": "83a7345c-62d8-4e29-84db-c2e36f8bc40d"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteEquivalencyTableRow",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/datalogger/:datalogger_id/equivalency_table/row?id=2f1f7c3d-8b6f-4b11-917e-8f049eb6c62b",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"datalogger",
								":datalogger_id",
								"equivalency_table",
								"row"
							],
							"query": [
								{
									"key": "id",
									"value": "2f1f7c3d-8b6f-4b11-917e-8f049eb6c62b"
								}
							],
							"variable": [
								{
									"key": "datalogger_id",
									"value": "83a7345c-62d8-4e29-84db-c2e36f8bc40d"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteEquivalencyTable",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/datalogger/:datalogger_id/equivalency_table",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"datalogger",
								":datalogger_id",
								"equivalency_table"
							],
							"variable": [
								{
									"key": "datalogger_id",
									"value": "83a7345c-62d8-4e29-84db-c2e36f8bc40d"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwt_existing_admin}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}